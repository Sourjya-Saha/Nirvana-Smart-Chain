"use client";

import { useState, FormEvent, ChangeEvent, useEffect } from 'react';
import { Send, User, Mail, MessageSquare, FileText, Star, Lightbulb, MapPin, Search, BarChart3, Rocket, ChevronDown, ChevronUp, Check, X, ThumbsUp, AlertTriangle, Clock, Shield, Zap, Sparkles, Globe } from 'lucide-react';
import { motion, useScroll, useTransform, AnimatePresence } from 'framer-motion';

// Language interface
interface LanguageOption {
  code: string;
  name: string;
  nativeName: string;
}

// Contact Form Data Interface
interface ContactFormData {
  name: string;
  email: string;
  subject: string;
  message: string;
}

// Review Form Data Interface - Updated with new question fields
interface ReviewFormData {
  name: string;
  trackingDifficulty: number;
  shortageImportance: number;
  verificationChallenge: number;
  communicationFrequency: number;
  visibilityImportance: number;
  counterfeitConcern: number;
  regulatoryWorkload: number;
  localRetailerComfort: string;
  localRetailerComment: string;
  barcodeUseful: number;
  alertsImportance: number;
  messagingValue: number;
  reportsNecessity: number;
  blockchainImportance: number;
  generalFeedback: string;
}

type StatusType = '' | 'sending' | 'success' | 'error';
type FormType = 'contact' | 'review';

// Language options for the dropdown
const languages: LanguageOption[] = [
  { code: 'en', name: 'English', nativeName: 'English' },
  { code: 'hi', name: 'Hindi', nativeName: 'рд╣рд┐рдиреНрджреА' },
  { code: 'bn', name: 'Bengali', nativeName: 'ржмрж╛ржВрж▓рж╛' },
  { code: 'te', name: 'Telugu', nativeName: 'р░др▒Жр░▓р▒Бр░Чр▒Б' },
  { code: 'mr', name: 'Marathi', nativeName: 'рдорд░рд╛рдареА' },
  { code: 'ta', name: 'Tamil', nativeName: 'родрооро┐ро┤рпН' },
  { code: 'ur', name: 'Urdu', nativeName: '╪з╪▒╪п┘И' },
  { code: 'gu', name: 'Gujarati', nativeName: 'ркЧрлБркЬрк░рк╛ркдрлА' },
  { code: 'ml', name: 'Malayalam', nativeName: 'р┤ор┤▓р┤пр┤╛р┤│р┤В' },
  { code: 'kn', name: 'Kannada', nativeName: 'р▓Хр▓ир│Нр▓ир▓б' },
  { code: 'pa', name: 'Punjabi', nativeName: 'рикрй░риЬри╛римрйА' }
];

// Translations for all supported languages
const translations = {
  en: {
    // Page headings
    contactUs: "Contact Us",
    getInTouch: "Get in Touch",
    contactDescription: "We'd love to hear from you! ЁЯТм Share your experience or ask any questionsтАФyour feedback helps us enhance our pharmaceutical inventory and tracking system ЁЯЪА",
    whyChooseUs: "Why Choose Us",
    // Form toggle buttons
    getSupport: "Get Support",
    shareFeedback: "Share Feedback",
    // Contact form
    name: "Name",
    email: "Email",
    subject: "Subject",
    message: "Message",
    sendMessage: "Send Message",
    sending: "Sending...",
    successMessage: "Message sent successfully! We'll get back to you soon.",
    errorMessage: "Failed to send message. Please try again later.",
    // Review form sections
    currentChallenges: "Current Challenges",
    supplyChainCommunication: "Supply Chain Communication",
    securityCompliance: "Security & Compliance",
    technologyFeatures: "Technology Features",
    additionalFeedback: "Additional Feedback",
    // Review form questions - Current Challenges
    trackingDifficulty: "1. How difficult is it to track inventory in your current system?",
    notDifficult: "Not difficult",
    extremelyDifficult: "Extremely difficult",
    shortageImportance: "2. How important is addressing medication shortages to your organization?",
    notImportant: "Not important",
    criticallyImportant: "Critically important",
    verificationChallenge: "3. How challenging is verification of medication authenticity currently?",
    notChallenging: "Not challenging",
    veryChallenging: "Very challenging",
    // Review form questions - Supply Chain
    communicationFrequency: "1. How frequently do you need to communicate with supply chain partners?",
    rarely: "Rarely",
    veryFrequently: "Very frequently",
    visibilityImportance: "2. How important is real-time visibility into your supply chain?",
    critical: "Critical",
    // Review form questions - Security
    counterfeitConcern: "1. How concerned are you about counterfeit medications?",
    notConcerned: "Not concerned",
    veryConcerned: "Very concerned",
    regulatoryWorkload: "2. How much of a burden is regulatory compliance for your team?",
    minorBurden: "Minor burden",
    majorBurden: "Major burden",
    localRetailerQuestion: "3. Do you feel local retailers can authenticate medications securely?",
    yes: "Yes",
    no: "No",
    explainAnswer: "Please explain your answer...",
    // Review form questions - Technology
    barcodeUseful: "1. How useful would barcode scanning be for authentication?",
    notUseful: "Not useful",
    veryUseful: "Very useful",
    alertsImportance: "2. How important are real-time alerts for inventory issues?",
    messagingValue: "3. How valuable would secure messaging between partners be?",
    notValuable: "Not valuable",
    extremelyValuable: "Extremely valuable",
    reportsNecessity: "4. How necessary are custom reports for your operations?",
    notNecessary: "Not necessary",
    essential: "Essential",
    blockchainImportance: "5. How important is blockchain for verification to your organization?",
    veryImportant: "Very important",
    // Additional feedback
    additionalSuggestions: "Any additional suggestions or improvements you'd like to share?",
    shareSuggestions: "Share your thoughts here...",
    // Submit buttons
    submitFeedback: "Submit Feedback",
    submitting: "Submitting...",
    // Success/Error messages for review form
    reviewSuccessMessage: "Thank you for your valuable feedback! Your insights will help us improve our system.",
    reviewErrorMessage: "Failed to submit feedback. Please try again later.",
    // Feature section
    support247: "24/7 Support",
    supportDesc: "Get expert assistance whenever you need it with our dedicated support team.",
    earlyAccess: "Early Access",
    earlyAccessDesc: "Join our exclusive beta program and be the first to experience our innovative solution.",
    fastResponse: "Fast Response",
    fastResponseDesc: "We prioritize your questions with lightning-fast response times under 24 hours.",
    // Star rating responses
    noRating: "No rating",
    somewhat: "Somewhat",
    moderately: "Moderately",
    very: "Very",
    // Language selector
    selectLanguage: "Select Language"
  },
  hi: {
    contactUs: "рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВ",
    getInTouch: "рд╣рдорд╕реЗ рдЬреБрдбрд╝реЗрдВ",
    contactDescription: "рд╣рдо рдЖрдкрд╕реЗ рд╕реБрдирдирд╛ рдкрд╕рдВрдж рдХрд░реЗрдВрдЧреЗ! ЁЯТм рдЕрдкрдирд╛ рдЕрдиреБрднрд╡ рд╕рд╛рдЭрд╛ рдХрд░реЗрдВ рдпрд╛ рдХреЛрдИ рдкреНрд░рд╢реНрди рдкреВрдЫреЗрдВ - рдЖрдкрдХреА рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛ рд╣рдорд╛рд░реА рдлрд╛рд░реНрдорд╛рд╕реНрдпреБрдЯрд┐рдХрд▓ рдЗрдиреНрд╡реЗрдВрдЯрд░реА рдФрд░ рдЯреНрд░реИрдХрд┐рдВрдЧ рд╕рд┐рд╕реНрдЯрдо рдХреЛ рдмреЗрд╣рддрд░ рдмрдирд╛рдиреЗ рдореЗрдВ рдорджрдж рдХрд░рддреА рд╣реИ ЁЯЪА",
    whyChooseUs: "рд╣рдореЗрдВ рдХреНрдпреЛрдВ рдЪреБрдиреЗрдВ",
    getSupport: "рд╕рд╣рд╛рдпрддрд╛ рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВ",
    shareFeedback: "рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛ рд╕рд╛рдЭрд╛ рдХрд░реЗрдВ",
    name: "рдирд╛рдо",
    email: "рдИрдореЗрд▓",
    subject: "рд╡рд┐рд╖рдп",
    message: "рд╕рдВрджреЗрд╢",
    sendMessage: "рд╕рдВрджреЗрд╢ рднреЗрдЬреЗрдВ",
    sending: "рднреЗрдЬ рд░рд╣рд╛ рд╣реИ...",
    successMessage: "рд╕рдВрджреЗрд╢ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рднреЗрдЬрд╛ рдЧрдпрд╛! рд╣рдо рдЬрд▓реНрдж рд╣реА рдЖрдкрд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВрдЧреЗред",
    errorMessage: "рд╕рдВрджреЗрд╢ рднреЗрдЬрдиреЗ рдореЗрдВ рд╡рд┐рдлрд▓ред рдХреГрдкрдпрд╛ рдмрд╛рдж рдореЗрдВ рдкреБрдирдГ рдкреНрд░рдпрд╛рд╕ рдХрд░реЗрдВред",
    currentChallenges: "рд╡рд░реНрддрдорд╛рди рдЪреБрдиреМрддрд┐рдпрд╛рдВ",
    supplyChainCommunication: "рдЖрдкреВрд░реНрддрд┐ рд╢реНрд░реГрдВрдЦрд▓рд╛ рд╕рдВрдЪрд╛рд░",
    securityCompliance: "рд╕реБрд░рдХреНрд╖рд╛ рдФрд░ рдЕрдиреБрдкрд╛рд▓рди",
    technologyFeatures: "рдкреНрд░реМрджреНрдпреЛрдЧрд┐рдХреА рд╡рд┐рд╢реЗрд╖рддрд╛рдПрдВ",
    additionalFeedback: "рдЕрддрд┐рд░рд┐рдХреНрдд рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛",
    trackingDifficulty: "1. рдЖрдкрдХреЗ рд╡рд░реНрддрдорд╛рди рд╕рд┐рд╕реНрдЯрдо рдореЗрдВ рдЗрдиреНрд╡реЗрдВрдЯрд░реА рдХреЛ рдЯреНрд░реИрдХ рдХрд░рдирд╛ рдХрд┐рддрдирд╛ рдХрдард┐рди рд╣реИ?",
    notDifficult: "рдХрдард┐рди рдирд╣реАрдВ",
    extremelyDifficult: "рдЕрддреНрдпрдзрд┐рдХ рдХрдард┐рди",
    shortageImportance: "2. рдЖрдкрдХреЗ рд╕рдВрдЧрдарди рдХреЗ рд▓рд┐рдП рджрд╡рд╛ рдХреА рдХрдореА рдХрд╛ рд╕рдорд╛рдзрд╛рди рдХрд░рдирд╛ рдХрд┐рддрдирд╛ рдорд╣рддреНрд╡рдкреВрд░реНрдг рд╣реИ?",
    notImportant: "рдорд╣рддреНрд╡рдкреВрд░реНрдг рдирд╣реАрдВ",
    criticallyImportant: "рдЕрддреНрдпрдВрдд рдорд╣рддреНрд╡рдкреВрд░реНрдг",
    verificationChallenge: "3. рд╡рд░реНрддрдорд╛рди рдореЗрдВ рджрд╡рд╛ рдХреА рдкреНрд░рд╛рдорд╛рдгрд┐рдХрддрд╛ рдХрд╛ рд╕рддреНрдпрд╛рдкрди рдХрд┐рддрдирд╛ рдЪреБрдиреМрддреАрдкреВрд░реНрдг рд╣реИ?",
    notChallenging: "рдЪреБрдиреМрддреАрдкреВрд░реНрдг рдирд╣реАрдВ",
    veryChallenging: "рдмрд╣реБрдд рдЪреБрдиреМрддреАрдкреВрд░реНрдг",
    communicationFrequency: "1. рдЖрдкрдХреЛ рдЖрдкреВрд░реНрддрд┐ рд╢реНрд░реГрдВрдЦрд▓рд╛ рднрд╛рдЧреАрджрд╛рд░реЛрдВ рдХреЗ рд╕рд╛рде рдХрд┐рддрдиреА рдмрд╛рд░ рд╕рдВрд╡рд╛рдж рдХрд░рдиреЗ рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рд╣реЛрддреА рд╣реИ?",
    rarely: "рд╢рд╛рдпрдж рд╣реА рдХрднреА",
    veryFrequently: "рдмрд╣реБрдд рдмрд╛рд░",
    visibilityImportance: "2. рдЖрдкрдХреА рдЖрдкреВрд░реНрддрд┐ рд╢реНрд░реГрдВрдЦрд▓рд╛ рдореЗрдВ рд╡рд╛рд╕реНрддрд╡рд┐рдХ рд╕рдордп рдХреА рджреГрд╢реНрдпрддрд╛ рдХрд┐рддрдиреА рдорд╣рддреНрд╡рдкреВрд░реНрдг рд╣реИ?",
    critical: "рдЕрддреНрдпрдВрдд рдорд╣рддреНрд╡рдкреВрд░реНрдг",
    counterfeitConcern: "1. рдЖрдк рдирдХрд▓реА рджрд╡рд╛рдУрдВ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдХрд┐рддрдиреЗ рдЪрд┐рдВрддрд┐рдд рд╣реИрдВ?",
    notConcerned: "рдЪрд┐рдВрддрд┐рдд рдирд╣реАрдВ",
    veryConcerned: "рдмрд╣реБрдд рдЪрд┐рдВрддрд┐рдд",
    regulatoryWorkload: "2. рдЖрдкрдХреА рдЯреАрдо рдХреЗ рд▓рд┐рдП рдирд┐рдпрд╛рдордХ рдЕрдиреБрдкрд╛рд▓рди рдХрд┐рддрдирд╛ рдмреЛрдЭ рд╣реИ?",
    minorBurden: "рдЫреЛрдЯрд╛ рдмреЛрдЭ",
    majorBurden: "рдмрдбрд╝рд╛ рдмреЛрдЭ",
    localRetailerQuestion: "3. рдХреНрдпрд╛ рдЖрдкрдХреЛ рд▓рдЧрддрд╛ рд╣реИ рдХрд┐ рд╕реНрдерд╛рдиреАрдп рд╡рд┐рдХреНрд░реЗрддрд╛ рджрд╡рд╛рдУрдВ рдХреЛ рд╕реБрд░рдХреНрд╖рд┐рдд рд░реВрдк рд╕реЗ рдкреНрд░рдорд╛рдгрд┐рдд рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ?",
    yes: "рд╣рд╛рдВ",
    no: "рдирд╣реАрдВ",
    explainAnswer: "рдХреГрдкрдпрд╛ рдЕрдкрдиреЗ рдЙрддреНрддрд░ рдХреА рд╡реНрдпрд╛рдЦреНрдпрд╛ рдХрд░реЗрдВ...",
    barcodeUseful: "1. рдкреНрд░рдорд╛рдгреАрдХрд░рдг рдХреЗ рд▓рд┐рдП рдмрд╛рд░рдХреЛрдб рд╕реНрдХреИрдирд┐рдВрдЧ рдХрд┐рддрдиреА рдЙрдкрдпреЛрдЧреА рд╣реЛрдЧреА?",
    notUseful: "рдЙрдкрдпреЛрдЧреА рдирд╣реАрдВ",
    veryUseful: "рдмрд╣реБрдд рдЙрдкрдпреЛрдЧреА",
    alertsImportance: "2. рдЗрдиреНрд╡реЗрдВрдЯрд░реА рд╕рдорд╕реНрдпрд╛рдУрдВ рдХреЗ рд▓рд┐рдП рд╡рд╛рд╕реНрддрд╡рд┐рдХ рд╕рдордп рдХреЗ рдЕрд▓рд░реНрдЯ рдХрд┐рддрдиреЗ рдорд╣рддреНрд╡рдкреВрд░реНрдг рд╣реИрдВ?",
    messagingValue: "3. рднрд╛рдЧреАрджрд╛рд░реЛрдВ рдХреЗ рдмреАрдЪ рд╕реБрд░рдХреНрд╖рд┐рдд рдореИрд╕реЗрдЬрд┐рдВрдЧ рдХрд┐рддрдиреА рдореВрд▓реНрдпрд╡рд╛рди рд╣реЛрдЧреА?",
    notValuable: "рдореВрд▓реНрдпрд╡рд╛рди рдирд╣реАрдВ",
    extremelyValuable: "рдЕрддреНрдпрдзрд┐рдХ рдореВрд▓реНрдпрд╡рд╛рди",
    reportsNecessity: "4. рдЖрдкрдХреЗ рд╕рдВрдЪрд╛рд▓рди рдХреЗ рд▓рд┐рдП рдХрд╕реНрдЯрдо рд░рд┐рдкреЛрд░реНрдЯ рдХрд┐рддрдиреА рдЖрд╡рд╢реНрдпрдХ рд╣реИрдВ?",
    notNecessary: "рдЖрд╡рд╢реНрдпрдХ рдирд╣реАрдВ",
    essential: "рдЕрдирд┐рд╡рд╛рд░реНрдп",
    blockchainImportance: "5. рдЖрдкрдХреЗ рд╕рдВрдЧрдарди рдХреЗ рд▓рд┐рдП рд╕рддреНрдпрд╛рдкрди рд╣реЗрддреБ рдмреНрд▓реЙрдХрдЪреЗрди рдХрд┐рддрдирд╛ рдорд╣рддреНрд╡рдкреВрд░реНрдг рд╣реИ?",
    veryImportant: "рдмрд╣реБрдд рдорд╣рддреНрд╡рдкреВрд░реНрдг",
    additionalSuggestions: "рдХреЛрдИ рдЕрддрд┐рд░рд┐рдХреНрдд рд╕реБрдЭрд╛рд╡ рдпрд╛ рд╕реБрдзрд╛рд░ рдЬреЛ рдЖрдк рд╕рд╛рдЭрд╛ рдХрд░рдирд╛ рдЪрд╛рд╣рддреЗ рд╣реИрдВ?",
    shareSuggestions: "рдЕрдкрдиреЗ рд╡рд┐рдЪрд╛рд░ рдпрд╣рд╛рдВ рд╕рд╛рдЭрд╛ рдХрд░реЗрдВ...",
    submitFeedback: "рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛ рдЬрдорд╛ рдХрд░реЗрдВ",
    submitting: "рдЬрдорд╛ рдХрд░ рд░рд╣рд╛ рд╣реИ...",
    reviewSuccessMessage: "рдЖрдкрдХреА рдореВрд▓реНрдпрд╡рд╛рди рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛ рдХреЗ рд▓рд┐рдП рдзрдиреНрдпрд╡рд╛рдж! рдЖрдкрдХреА рдЕрдВрддрд░реНрджреГрд╖реНрдЯрд┐ рд╣рдорд╛рд░реЗ рд╕рд┐рд╕реНрдЯрдо рдХреЛ рдмреЗрд╣рддрд░ рдмрдирд╛рдиреЗ рдореЗрдВ рдорджрдж рдХрд░реЗрдЧреАред",
    reviewErrorMessage: "рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛ рдЬрдорд╛ рдХрд░рдиреЗ рдореЗрдВ рд╡рд┐рдлрд▓ред рдХреГрдкрдпрд╛ рдмрд╛рдж рдореЗрдВ рдкреБрдирдГ рдкреНрд░рдпрд╛рд╕ рдХрд░реЗрдВред",
    support247: "24/7 рд╕рд╣рд╛рдпрддрд╛",
    supportDesc: "рд╣рдорд╛рд░реА рд╕рдорд░реНрдкрд┐рдд рд╕рд╣рд╛рдпрддрд╛ рдЯреАрдо рдХреЗ рд╕рд╛рде рдЬрдм рднреА рдЖрдкрдХреЛ рдЖрд╡рд╢реНрдпрдХрддрд╛ рд╣реЛ, рд╡рд┐рд╢реЗрд╖рдЬреНрдЮ рд╕рд╣рд╛рдпрддрд╛ рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВред",
    earlyAccess: "рд╢реАрдШреНрд░ рдкрд╣реБрдВрдЪ",
    earlyAccessDesc: "рд╣рдорд╛рд░реЗ рд╡рд┐рд╢реЗрд╖ рдмреАрдЯрд╛ рдкреНрд░реЛрдЧреНрд░рд╛рдо рдореЗрдВ рд╢рд╛рдорд┐рд▓ рд╣реЛрдВ рдФрд░ рд╣рдорд╛рд░реЗ рдирд╡реАрди рд╕рдорд╛рдзрд╛рди рдХрд╛ рдЕрдиреБрднрд╡ рдкрд╣рд▓реЗ рдХрд░реЗрдВред",
    fastResponse: "рддреНрд╡рд░рд┐рдд рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛",
    fastResponseDesc: "рд╣рдо рдЖрдкрдХреЗ рдкреНрд░рд╢реНрдиреЛрдВ рдХрд╛ рдкреНрд░рд╛рдердорд┐рдХрддрд╛ рдХреЗ рд╕рд╛рде рдЬрд╡рд╛рдм рджреЗрддреЗ рд╣реИрдВ, 24 рдШрдВрдЯреЗ рдХреЗ рдЕрдВрджрд░ред",
    noRating: "рдХреЛрдИ рд░реЗрдЯрд┐рдВрдЧ рдирд╣реАрдВ",
    somewhat: "рдереЛрдбрд╝рд╛",
    moderately: "рдордзреНрдпрдо",
    very: "рдмрд╣реБрдд",
    selectLanguage: "рднрд╛рд╖рд╛ рдЪреБрдиреЗрдВ"
  },
  bn: {
    contactUs: "ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржи",
    getInTouch: "ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржи",
    contactDescription: "ржЖржорж░рж╛ ржЖржкржирж╛рж░ ржХрж╛ржЫ ржерзЗржХрзЗ рж╢рзЛржирж╛рж░ ржЕржкрзЗржХрзНрж╖рж╛ржпрж╝ рж░ржпрж╝рзЗржЫрж┐! ЁЯТм ржЖржкржирж╛рж░ ржЕржнрж┐ржЬрзНржЮрждрж╛ рж╢рзЗржпрж╝рж╛рж░ ржХрж░рзБржи ржмрж╛ ржХрзЛржиржУ ржкрзНрж░рж╢рзНржи ржХрж░рзБржитАФржЖржкржирж╛рж░ ржорждрж╛ржоржд ржЖржорж╛ржжрзЗрж░ ржлрж╛рж░рзНржорж╛рж╕рж┐ржЙржЯрж┐ржХрзНржпрж╛рж▓ ржЗржиржнрзЗржирзНржЯрж░рж┐ ржПржмржВ ржЯрзНрж░рзНржпрж╛ржХрж┐ржВ рж╕рж┐рж╕рзНржЯрзЗржо ржЙржирзНржиржд ржХрж░рждрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░ржмрзЗ ЁЯЪА",
    whyChooseUs: "ржЖржорж╛ржжрзЗрж░ ржХрзЗржи ржмрзЗржЫрзЗ ржирзЗржмрзЗржи",
    getSupport: "рж╕ржорж░рзНржержи ржкрзНрж░рж╛ржкрзНржд ржХрж░рзБржи",
    shareFeedback: "ржкрзНрж░рждрж┐ржХрзНрж░рж┐ржпрж╝рж╛ рж╢рзЗржпрж╝рж╛рж░ ржХрж░рзБржи",
    name: "ржирж╛ржо",
    email: "ржЗржорзЗржЗрж▓",
    subject: "ржмрж┐рж╖ржпрж╝",
    message: "ржмрж╛рж░рзНрждрж╛",
    sendMessage: "ржмрж╛рж░рзНрждрж╛ ржкрж╛ржарж╛ржи",
    sending: "ржкрж╛ржарж╛ржирзЛ рж╣ржЪрзНржЫрзЗ...",
    successMessage: "ржмрж╛рж░рзНрждрж╛ рж╕ржлрж▓ржнрж╛ржмрзЗ ржкрж╛ржарж╛ржирзЛ рж╣ржпрж╝рзЗржЫрзЗ! ржЖржорж░рж╛ рж╢рзАржШрзНрж░ржЗ ржЖржкржирж╛рж░ рж╕рж╛ржерзЗ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░ржмред",
    errorMessage: "ржмрж╛рж░рзНрждрж╛ ржкрж╛ржарж╛рждрзЗ ржмрзНржпрж░рзНрже рж╣ржпрж╝рзЗржЫрзЗред ржжржпрж╝рж╛ ржХрж░рзЗ ржкрж░рзЗ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред",
    currentChallenges: "ржмрж░рзНрждржорж╛ржи ржЪрзНржпрж╛рж▓рзЗржЮрзНржЬржЧрзБрж▓рж┐",
    supplyChainCommunication: "рж╕рж░ржмрж░рж╛рж╣ ржЪрзЗржЗржи ржпрзЛржЧрж╛ржпрзЛржЧ",
    securityCompliance: "ржирж┐рж░рж╛ржкрждрзНрждрж╛ ржУ рж╕ржорзНржорждрж┐",
    technologyFeatures: "ржкрзНрж░ржпрзБржХрзНрждрж┐ ржмрзИрж╢рж┐рж╖рзНржЯрзНржп",
    additionalFeedback: "ржЕрждрж┐рж░рж┐ржХрзНржд ржкрзНрж░рждрж┐ржХрзНрж░рж┐ржпрж╝рж╛",
    trackingDifficulty: "1. ржЖржкржирж╛рж░ ржмрж░рзНрждржорж╛ржи рж╕рж┐рж╕рзНржЯрзЗржорзЗ ржЗржиржнрзЗржирзНржЯрж░рж┐ ржЯрзНрж░рзНржпрж╛ржХ ржХрж░рж╛ ржХрждржЯрж╛ ржХржарж┐ржи?",
    notDifficult: "ржХржарж┐ржи ржиржпрж╝",
    extremelyDifficult: "ржЕрждрзНржпржирзНржд ржХржарж┐ржи",
    shortageImportance: "2. ржЖржкржирж╛рж░ рж╕ржВрж╕рзНржерж╛рж░ ржЬржирзНржп ржУрж╖рзБржзрзЗрж░ ржЕржнрж╛ржм ржорзЛржХрж╛ржмрзЗрж▓рж╛ ржХрждржЯрж╛ ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг?",
    notImportant: "ржЧрзБрж░рзБрждрж░ ржиржпрж╝",
    criticallyImportant: "ржЕрждрзНржпржирзНржд ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг",
    verificationChallenge: "3. ржмрж░рзНрждржорж╛ржи рж╕ржоржпрж╝рзЗ ржУрж╖рзБржзрзЗрж░ ржкрзНрж░ржХрзГрждрждрж╛ ржпрж╛ржЪрж╛ржЗ ржХрждржЯрж╛ ржЪрзНржпрж╛рж▓рзЗржЮрзНржЬрж┐ржВ?",
    notChallenging: "ржЪрзНржпрж╛рж▓рзЗржЮрзНржЬрж┐ржВ ржиржпрж╝",
    veryChallenging: "ржЦрзБржм ржЪрзНржпрж╛рж▓рзЗржЮрзНржЬрж┐ржВ",
    communicationFrequency: "1. ржЖржкржирж╛ржХрзЗ ржХрждржмрж╛рж░ рж╕рж░ржмрж░рж╛рж╣ ржЪрзЗржЗржи ржЕржВрж╢рзАржжрж╛рж░ржжрзЗрж░ рж╕рж╛ржерзЗ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рждрзЗ рж╣ржпрж╝?",
    rarely: "ржХржЦржиржУ ржХржЦржиржУ",
    veryFrequently: "ржЦрзБржм ржкрзНрж░рж╛ржпрж╝",
    visibilityImportance: "2. ржЖржкржирж╛рж░ рж╕рж░ржмрж░рж╛рж╣ ржЪрзЗржЗржирзЗ ржмрж╛рж╕рзНрждржм рж╕ржоржпрж╝рзЗрж░ ржжрзГрж╢рзНржпржорж╛ржирждрж╛ ржХрждржЯрж╛ ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг?",
    critical: "ржЕрждрзНржпржирзНржд ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг",
    counterfeitConcern: "1. ржЖржкржирж┐ ржХрждржЯрж╛ ржЪрж┐ржирзНрждрж┐ржд ржУрж╖рзБржзрзЗрж░ ржиржХрж▓ рж╣ржУржпрж╝рж╛рж░ ржмрж┐рж╖ржпрж╝рзЗ?",
    notConcerned: "ржЪрж┐ржирзНрждрж┐ржд ржиржЗ",
    veryConcerned: "ржЦрзБржм ржЪрж┐ржирзНрждрж┐ржд",
    regulatoryWorkload: "2. ржЖржкржирж╛рж░ ржжрж▓рзЗрж░ ржЬржирзНржп ржирж┐ржпрж╝ржирзНрждрзНрж░ржг рж╕ржорзНржорждрж┐ ржХрждржЯрж╛ ржЪрж╛ржкржпрзБржХрзНржд?",
    minorBurden: "рж╕рж╛ржорж╛ржирзНржп ржмрзЛржЭрж╛",
    majorBurden: "ржмржбрж╝ ржмрзЛржЭрж╛",
    localRetailerQuestion: "3. ржЖржкржирж┐ ржХрж┐ ржоржирзЗ ржХрж░рзЗржи рж╕рзНржерж╛ржирзАржпрж╝ ржЦрзБржЪрж░рж╛ ржмрж┐ржХрзНрж░рзЗрждрж╛рж░рж╛ ржУрж╖рзБржзрзЗрж░ ржирж┐рж░рж╛ржкржж ржпрж╛ржЪрж╛ржЗ ржХрж░рждрзЗ ржкрж╛рж░рзЗ?",
    yes: "рж╣рзНржпрж╛ржБ",
    no: "ржирж╛",
    explainAnswer: "ржЖржкржирж╛рж░ ржЙрждрзНрждрж░ ржмрзНржпрж╛ржЦрзНржпрж╛ ржХрж░рзБржи...",
    barcodeUseful: "1. ржпрж╛ржЪрж╛ржЗржХрж░ржгрзЗрж░ ржЬржирзНржп ржмрж╛рж░ржХрзЛржб рж╕рзНржХрзНржпрж╛ржирж┐ржВ ржХрждржЯрж╛ ржХрж╛рж░рзНржпржХрж░ рж╣ржмрзЗ?",
    notUseful: "ржХрж╛рж░рзНржпржХрж░ ржиржпрж╝",
    veryUseful: "ржЦрзБржм ржХрж╛рж░рзНржпржХрж░",
    alertsImportance: "2. ржЗржиржнрзЗржирзНржЯрж░рж┐ рж╕ржорж╕рзНржпрж╛рж░ ржЬржирзНржп ржмрж╛рж╕рзНрждржм рж╕ржоржпрж╝рзЗрж░ ржЕрзНржпрж╛рж▓рж╛рж░рзНржЯржЧрзБрж▓рж┐ ржХрждржЯрж╛ ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг?",
    messagingValue: "3. ржЕржВрж╢рзАржжрж╛рж░ржжрзЗрж░ ржоржзрзНржпрзЗ ржирж┐рж░рж╛ржкржж ржорзЗрж╕рзЗржЬрж┐ржВ ржХрждржЯрж╛ ржорзВрж▓рзНржпржмрж╛ржи рж╣ржмрзЗ?",
    notValuable: "ржорзВрж▓рзНржпржмрж╛ржи ржиржпрж╝",
    extremelyValuable: "ржЕрждрзНржпржирзНржд ржорзВрж▓рзНржпржмрж╛ржи",
    reportsNecessity: "4. ржЖржкржирж╛рж░ ржХрж╛рж░рзНржпржХрзНрж░ржорзЗрж░ ржЬржирзНржп ржХрж╛рж╕рзНржЯржо рж░рж┐ржкрзЛрж░рзНржЯ ржХрждржЯрж╛ ржкрзНрж░ржпрж╝рзЛржЬржирзАржпрж╝?",
    notNecessary: "ржкрзНрж░ржпрж╝рзЛржЬржирзАржпрж╝ ржиржпрж╝",
    essential: "ржЕрждрзНржпрж╛ржмрж╢рзНржпржХ",
    blockchainImportance: "5. ржЖржкржирж╛рж░ рж╕ржВрж╕рзНржерж╛рж░ ржЬржирзНржп ржпрж╛ржЪрж╛ржЗржХрж░ржгрзЗрж░ ржЬржирзНржп ржмрзНрж▓ржХржЪрзЗржЗржи ржХрждржЯрж╛ ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг?",
    veryImportant: "ржЕрждрзНржпржирзНржд ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг",
    additionalSuggestions: "ржЖржкржирж┐ ржХрж┐ ржХрзЛржирзЛ ржЕрждрж┐рж░рж┐ржХрзНржд ржкрж░рж╛ржорж░рзНрж╢ ржмрж╛ ржЙржирзНржирждрж┐рж░ ржкрзНрж░рж╕рзНрждрж╛ржм ржжрж┐рждрзЗ ржЪрж╛ржи?",
    shareSuggestions: "ржПржЦрж╛ржирзЗ ржЖржкржирж╛рж░ ржЪрж┐ржирзНрждрж╛ржнрж╛ржмржирж╛ рж╢рзЗржпрж╝рж╛рж░ ржХрж░рзБржи...",
    submitFeedback: "ржкрзНрж░рждрж┐ржХрзНрж░рж┐ржпрж╝рж╛ ржЬржорж╛ ржжрж┐ржи",
    submitting: "ржЬржорж╛ ржжрзЗржУржпрж╝рж╛ рж╣ржЪрзНржЫрзЗ...",
    reviewSuccessMessage: "ржЖржкржирж╛рж░ ржорзВрж▓рзНржпржмрж╛ржи ржкрзНрж░рждрж┐ржХрзНрж░рж┐ржпрж╝рж╛рж░ ржЬржирзНржп ржзржирзНржпржмрж╛ржж! ржЖржкржирж╛рж░ ржорждрж╛ржоржд ржЖржорж╛ржжрзЗрж░ рж╕рж┐рж╕рзНржЯрзЗржо ржЙржирзНржиржд ржХрж░рждрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░ржмрзЗред",
    reviewErrorMessage: "ржкрзНрж░рждрж┐ржХрзНрж░рж┐ржпрж╝рж╛ ржЬржорж╛ ржжрзЗржУржпрж╝рж╛ ржмрзНржпрж░рзНржеред ржжржпрж╝рж╛ ржХрж░рзЗ ржкрж░рзЗ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред",
    support247: "рзирзк/рзн рж╕рж╣рж╛ржпрж╝рждрж╛",
    supportDesc: "ржпрждржмрж╛рж░ржЗ ржЖржкржирж╛рж░ ржкрзНрж░ржпрж╝рзЛржЬржи ржЖржорж╛ржжрзЗрж░ ржмрж┐рж╢рзЗрж╖ржЬрзНржЮ рж╕рж╣рж╛ржпрж╝рждрж╛ ржжрж▓ ржерзЗржХрзЗ рж╕рж╣рж╛ржпрж╝рждрж╛ ржкрж╛ржиред",
    earlyAccess: "ржкрзНрж░рж╛ржержорж┐ржХ ржкрзНрж░ржмрзЗрж╢рж╛ржзрж┐ржХрж╛рж░",
    earlyAccessDesc: "ржЖржорж╛ржжрзЗрж░ ржПржХрзНрж╕ржХрзНрж▓рзБрж╕рж┐ржн ржмрж┐ржЯрж╛ ржкрзНрж░рзЛржЧрзНрж░рж╛ржорзЗ ржпрзЛржЧ ржжрж┐ржи ржПржмржВ ржЖржорж╛ржжрзЗрж░ ржЙржжрзНржнрж╛ржмржирзА рж╕ржорж╛ржзрж╛ржи ржкрзНрж░ржержоржмрж╛рж░рзЗрж░ ржорждрзЛ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржиред",
    fastResponse: "ржжрзНрж░рзБржд ржкрзНрж░рждрж┐ржХрзНрж░рж┐ржпрж╝рж╛",
    fastResponseDesc: "ржЖржорж░рж╛ ржЖржкржирж╛рж░ ржкрзНрж░рж╢рзНржиржЧрзБрж▓рж┐рж░ ржЬржирзНржп ржжрзНрж░рзБржд ржкрзНрж░рждрж┐ржХрзНрж░рж┐ржпрж╝рж╛ ржкрзНрж░ржжрж╛ржи ржХрж░рж┐, рзирзк ржШржгрзНржЯрж╛рж░ ржоржзрзНржпрзЗред",
    noRating: "ржХрзЛржи рж░рзЗржЯрж┐ржВ ржирзЗржЗ",
    somewhat: "ржПржХржЯрзБ",
    moderately: "ржорж╛ржЭрж╛рж░рж┐",
    very: "ржЦрзБржм",
    selectLanguage: "ржнрж╛рж╖рж╛ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи"
  },
  te: {
    contactUs: "р░ор░ор▒Нр░ор░▓р▒Нр░ир░┐ р░╕р░Вр░кр▒Нр░░р░жр░┐р░Вр░Ър░Вр░бр░┐",
    getInTouch: "р░╕р░Вр░кр▒Нр░░р░жр░┐р░Вр░Ър░Вр░бр░┐",
    contactDescription: "р░ор▒Зр░ор▒Б р░ор▒А р░ир▒Бр░Вр░бр░┐ р░╡р░┐р░ир░бр░╛р░ир░┐р░Хр░┐ р░Зр░╖р▒Нр░Яр░кр░бр░др░╛р░ор▒Б! ЁЯТм р░ор▒А р░Ер░ир▒Бр░нр░╡р░╛р░ир▒Нр░ир░┐ р░кр░Вр░Ър▒Бр░Хр▒Лр░Вр░бр░┐ р░▓р▒Зр░жр░╛ р░Пр░╡р▒Ир░ир░╛ р░кр▒Нр░░р░╢р▒Нр░ир░▓р▒Б р░Ер░бр░Чр░Вр░бр░┐тАФр░ор▒А р░Ер░нр░┐р░кр▒Нр░░р░╛р░пр░В р░ор░╛ р░лр░╛р░░р▒Нр░ор░╛р░╕р▒Нр░пр▒Вр░Яр░┐р░Хр░▓р▒Н р░Зр░ир▒Нр░╡р▒Жр░Вр░Яр░░р▒А р░ор░░р░┐р░пр▒Б р░Яр▒Нр░░р░╛р░Хр░┐р░Вр░Чр▒Н р░╕р░┐р░╕р▒Нр░Яр░ор▒НтАМр░ир▒Б р░ор▒Жр░░р▒Бр░Чр▒Бр░кр░░р░Ър░бр░Вр░▓р▒Л р░╕р░╣р░╛р░пр░кр░бр▒Бр░др▒Бр░Вр░жр░┐ ЁЯЪА",
    whyChooseUs: "р░ор░ор▒Нр░ор░▓р▒Нр░ир░┐ р░Ор░Вр░жр▒Бр░Хр▒Б р░Ор░Вр░Ър▒Бр░Хр▒Лр░╡р░╛р░▓р░┐",
    getSupport: "р░ор░жр▒Нр░жр░др▒Б р░кр▒Кр░Вр░жр░Вр░бр░┐",
    shareFeedback: "р░Ер░нр░┐р░кр▒Нр░░р░╛р░пр░╛р░ир▒Нр░ир░┐ р░кр░Вр░Ър▒Бр░Хр▒Лр░Вр░бр░┐",
    name: "р░кр▒Зр░░р▒Б",
    email: "р░Зр░ор▒Жр░пр░┐р░▓р▒Н",
    subject: "р░╡р░┐р░╖р░пр░В",
    message: "р░╕р░Вр░жр▒Зр░╢р░В",
    sendMessage: "р░╕р░Вр░жр▒Зр░╢р░В р░кр░Вр░кр░Вр░бр░┐",
    sending: "р░кр░Вр░кр▒Бр░др▒Лр░Вр░жр░┐...",
    successMessage: "р░╕р░Вр░жр▒Зр░╢р░В р░╡р░┐р░Ьр░пр░╡р░Вр░др░Вр░Чр░╛ р░кр░Вр░кр░мр░бр░┐р░Вр░жр░┐! р░ор▒Зр░ор▒Б р░др▒Нр░╡р░░р░▓р▒Лр░ир▒З р░ор▒Ар░Хр▒Б р░др░┐р░░р░┐р░Чр░┐ р░Ер░Вр░жр░┐р░╕р▒Нр░др░╛р░ор▒Б.",
    errorMessage: "р░╕р░Вр░жр▒Зр░╢р░В р░кр░Вр░кр░бр░Вр░▓р▒Л р░╡р░┐р░лр░▓р░ор▒Ир░Вр░жр░┐. р░жр░пр░Ър▒Зр░╕р░┐ р░др░░р▒Нр░╡р░╛р░д р░ор░│р▒Нр░▓р▒А р░кр▒Нр░░р░пр░др▒Нр░ир░┐р░Вр░Ър░Вр░бр░┐.",
    currentChallenges: "р░кр▒Нр░░р░╕р▒Нр░др▒Бр░д р░╕р░╡р░╛р░│р▒Нр░▓р▒Б",
    supplyChainCommunication: "р░╕р░░р░лр░░р░╛ р░Ър▒Ир░ир▒Н р░Хр░ор▒Нр░пр▒Вр░ир░┐р░Хр▒Зр░╖р░ир▒Н",
    securityCompliance: "р░нр░жр▒Нр░░р░д & р░Ер░ир▒Бр░Хр▒Вр░▓р░д",
    technologyFeatures: "р░╕р░╛р░Вр░Хр▒Зр░др░┐р░Х р░▓р░Хр▒Нр░╖р░гр░╛р░▓р▒Б",
    additionalFeedback: "р░Ер░жр░ир░кр▒Б р░Ер░нр░┐р░кр▒Нр░░р░╛р░пр░В",
    trackingDifficulty: "1. р░ор▒А р░кр▒Нр░░р░╕р▒Нр░др▒Бр░д р░╡р▒Нр░пр░╡р░╕р▒Нр░ер░▓р▒Л р░Зр░ир▒Нр░╡р▒Жр░Вр░Яр░░р▒Ар░ир░┐ р░Яр▒Нр░░р░╛р░Хр▒Н р░Ър▒Зр░пр░бр░В р░Ор░Вр░д р░Хр░╖р▒Нр░Яр░ор▒Ир░ир░жр░┐?",
    notDifficult: "р░Хр░╖р▒Нр░Яр░В р░Хр░╛р░жр▒Б",
    extremelyDifficult: "р░Ър░╛р░▓р░╛ р░Хр░╖р▒Нр░Яр░ор▒Ир░ир░жр░┐",
    shortageImportance: "2. р░ор▒А р░╕р░Вр░╕р▒Нр░ер░Хр▒Б р░ор░Вр░жр▒Бр░▓ р░Хр▒Кр░░р░д р░кр░░р░┐р░╖р▒Нр░Хр░░р░┐р░Вр░Ър░бр░В р░Ор░Вр░д р░ор▒Бр░Цр▒Нр░пр░ор▒Ир░ир░жр░┐?",
    notImportant: "р░ор▒Бр░Цр▒Нр░пр░В р░Хр░╛р░жр▒Б",
    criticallyImportant: "р░Ер░др▒Нр░пр░Вр░д р░ор▒Бр░Цр▒Нр░пр░ор▒Ир░ир░жр░┐",
    verificationChallenge: "3. р░кр▒Нр░░р░╕р▒Нр░др▒Бр░др░В р░ор░Вр░жр▒Бр░▓ р░кр▒Нр░░р░╛р░ор░╛р░гр░┐р░Хр░др░ир▒Б р░зр▒Гр░╡р▒Ар░Хр░░р░┐р░Вр░Ър░бр░В р░Ор░Вр░д р░╕р░╡р░╛р░▓р▒Бр░Чр░╛ р░Йр░Вр░жр░┐?",
    notChallenging: "р░╕р░╡р░╛р░▓р▒Бр░Чр░╛ р░▓р▒Зр░жр▒Б",
    veryChallenging: "р░Ър░╛р░▓р░╛ р░╕р░╡р░╛р░▓р▒Бр░Чр░╛ р░Йр░Вр░жр░┐",
    communicationFrequency: "1. р░ор▒Ар░░р▒Б р░╕р░░р░лр░░р░╛ р░Ър▒Ир░ир▒Н р░нр░╛р░Чр░╕р▒Нр░╡р░╛р░ор▒Бр░▓р░др▒Л р░Ор░Вр░д р░др░░р░Ър▒Бр░Чр░╛ р░Хр░ор▒Нр░пр▒Вр░ир░┐р░Хр▒Зр░Яр▒Н р░Ър▒Зр░пр░╛р░▓р░┐?",
    rarely: "р░Ер░░р▒Бр░жр▒Бр░Чр░╛",
    veryFrequently: "р░Ър░╛р░▓р░╛ р░др░░р░Ър▒Бр░Чр░╛",
    visibilityImportance: "2. р░ор▒А р░╕р░░р░лр░░р░╛ р░Ър▒Ир░ир▒НтАМр░▓р▒Л р░░р░┐р░пр░▓р▒Н-р░Яр▒Ир░ор▒Н р░жр▒Гр░╢р▒Нр░пр░ор░╛р░ир░д р░Ор░Вр░д р░ор▒Бр░Цр▒Нр░пр░ор▒Ир░ир░жр░┐?",
    critical: "р░Ер░др▒Нр░пр░Вр░д р░ор▒Бр░Цр▒Нр░пр░ор▒Ир░ир░жр░┐",
    counterfeitConcern: "1. р░ор▒Ар░░р▒Б р░ир░Хр░┐р░▓р▒А р░ор░Вр░жр▒Бр░▓ р░Чр▒Бр░░р░┐р░Вр░Ър░┐ р░Ор░Вр░д р░Жр░Вр░жр▒Лр░│р░и р░Ър▒Жр░Вр░жр▒Бр░др▒Бр░ир▒Нр░ир░╛р░░р▒Б?",
    notConcerned: "р░Жр░Вр░жр▒Лр░│р░и р░▓р▒Зр░жр▒Б",
    veryConcerned: "р░Ър░╛р░▓р░╛ р░Жр░Вр░жр▒Лр░│р░и",
    regulatoryWorkload: "2. р░ор▒А р░мр▒Гр░Вр░жр░╛р░ир░┐р░Хр░┐ р░ир░┐р░пр░Вр░др▒Нр░░р░г р░Ер░ир▒Бр░Хр▒Вр░▓р░д р░Ор░Вр░д р░нр░╛р░░р░Вр░Чр░╛ р░Йр░Вр░жр░┐?",
    minorBurden: "р░Ър░┐р░ир▒Нр░и р░нр░╛р░░р░В",
    majorBurden: "р░кр▒Жр░жр▒Нр░ж р░нр░╛р░░р░В",
    localRetailerQuestion: "3. р░╕р▒Нр░ер░╛р░ир░┐р░Х р░░р░┐р░Яр▒Ир░▓р░░р▒Нр░▓р▒Б р░ор░Вр░жр▒Бр░▓р░ир▒Б р░╕р▒Бр░░р░Хр▒Нр░╖р░┐р░др░Вр░Чр░╛ р░кр▒Нр░░р░╛р░ор░╛р░гр▒Ар░Хр░░р░┐р░Вр░Ър░Чр░▓р░░р░ир░┐ р░ор▒Ар░░р▒Б р░нр░╛р░╡р░┐р░╕р▒Нр░др▒Бр░ир▒Нр░ир░╛р░░р░╛?",
    yes: "р░Ер░╡р▒Бр░ир▒Б",
    no: "р░Хр░╛р░жр▒Б",
    explainAnswer: "р░жр░пр░Ър▒Зр░╕р░┐ р░ор▒А р░╕р░ор░╛р░зр░╛р░ир░╛р░ир▒Нр░ир░┐ р░╡р░┐р░╡р░░р░┐р░Вр░Ър░Вр░бр░┐...",
    barcodeUseful: "1. р░кр▒Нр░░р░╛р░ор░╛р░гр▒Ар░Хр░░р░г р░Хр▒Лр░╕р░В р░мр░╛р░░р▒Нр░Хр▒Лр░бр▒Н р░╕р▒Нр░Хр░╛р░ир░┐р░Вр░Чр▒Н р░Ор░Вр░д р░Йр░кр░пр▒Лр░Чр░Хр░░р░Вр░Чр░╛ р░Йр░Вр░Яр▒Бр░Вр░жр░┐?",
    notUseful: "р░Йр░кр░пр▒Лр░Чр░Хр░░р░В р░Хр░╛р░жр▒Б",
    veryUseful: "р░Ър░╛р░▓р░╛ р░Йр░кр░пр▒Лр░Чр░Хр░░р░В",
    alertsImportance: "2. р░Зр░ир▒Нр░╡р▒Жр░Вр░Яр░░р▒А р░╕р░ор░╕р▒Нр░пр░▓ р░Хр▒Лр░╕р░В р░░р░┐р░пр░▓р▒Н-р░Яр▒Ир░ор▒Н р░Ер░▓р░░р▒Нр░Яр▒НтАМр░▓р▒Б р░Ор░Вр░д р░ор▒Бр░Цр▒Нр░пр░ор▒Ир░ир░╡р░┐?",
    messagingValue: "3. р░нр░╛р░Чр░╕р▒Нр░╡р░╛р░ор▒Бр░▓ р░ор░зр▒Нр░п р░╕р▒Бр░░р░Хр▒Нр░╖р░┐р░д р░ор▒Жр░╕р▒Зр░Ьр░┐р░Вр░Чр▒Н р░Ор░Вр░д р░╡р░┐р░▓р▒Бр░╡р▒Ир░ир░жр░┐ р░Ер░╡р▒Бр░др▒Бр░Вр░жр░┐?",
    notValuable: "р░╡р░┐р░▓р▒Бр░╡р▒Ир░ир░жр░┐ р░Хр░╛р░жр▒Б",
    extremelyValuable: "р░Ер░др▒Нр░пр░Вр░д р░╡р░┐р░▓р▒Бр░╡р▒Ир░ир░жр░┐",
    reportsNecessity: "4. р░ор▒А р░Жр░кр░░р▒Зр░╖р░ир▒НтАМр░▓р░Хр▒Б р░Хр░╕р▒Нр░Яр░ор▒Н р░ир░┐р░╡р▒Зр░жр░┐р░Хр░▓р▒Б р░Ор░Вр░д р░Ер░╡р░╕р░░р░В?",
    notNecessary: "р░Ер░╡р░╕р░░р░В р░▓р▒Зр░жр▒Б",
    essential: "р░Ер░др▒Нр░пр░╡р░╕р░░р░В",
    blockchainImportance: "5. р░ор▒А р░╕р░Вр░╕р▒Нр░ер░Хр▒Б р░зр▒Гр░╡р▒Ар░Хр░░р░г р░Хр▒Лр░╕р░В р░мр▒Нр░▓р░╛р░Хр▒НтАМр░Ър▒Жр░пр░┐р░ир▒Н р░Ор░Вр░д р░ор▒Бр░Цр▒Нр░пр░ор▒Ир░ир░жр░┐?",
    veryImportant: "р░Ър░╛р░▓р░╛ р░ор▒Бр░Цр▒Нр░пр░ор▒Ир░ир░жр░┐",
    additionalSuggestions: "р░ор▒Ар░░р▒Б р░кр░Вр░Ър▒Бр░Хр▒Лр░╡р░╛р░▓р░ир▒Бр░Хр▒Бр░Вр░Яр▒Бр░ир▒Нр░и р░Пр░╡р▒Ир░ир░╛ р░Ер░жр░ир░кр▒Б р░╕р▒Вр░Ър░ир░▓р▒Б р░▓р▒Зр░жр░╛ р░ор▒Жр░░р▒Бр░Чр▒Бр░жр░▓р░▓р▒Б р░Йр░ир▒Нр░ир░╛р░пр░╛?",
    shareSuggestions: "р░ор▒А р░Жр░▓р▒Лр░Ър░ир░▓р░ир▒Б р░Зр░Хр▒Нр░Хр░б р░кр░Вр░Ър▒Бр░Хр▒Лр░Вр░бр░┐...",
    submitFeedback: "р░Ер░нр░┐р░кр▒Нр░░р░╛р░пр░╛р░ир▒Нр░ир░┐ р░╕р░ор░░р▒Нр░кр░┐р░Вр░Ър░Вр░бр░┐",
    submitting: "р░╕р░ор░░р▒Нр░кр░┐р░╕р▒Нр░др▒Лр░Вр░жр░┐...",
    reviewSuccessMessage: "р░ор▒А р░╡р░┐р░▓р▒Бр░╡р▒Ир░и р░Ер░нр░┐р░кр▒Нр░░р░╛р░пр░╛р░ир░┐р░Хр░┐ р░зр░ир▒Нр░пр░╡р░╛р░жр░╛р░▓р▒Б! р░ор▒А р░Ер░Вр░др░░р▒Нр░жр▒Гр░╖р▒Нр░Яр▒Бр░▓р▒Б р░ор░╛ р░╡р▒Нр░пр░╡р░╕р▒Нр░ер░ир▒Б р░ор▒Жр░░р▒Бр░Чр▒Бр░кр░░р░Ър░бр░Вр░▓р▒Л р░╕р░╣р░╛р░пр░кр░бр░др░╛р░пр░┐.",
    reviewErrorMessage: "р░Ер░нр░┐р░кр▒Нр░░р░╛р░пр░╛р░ир▒Нр░ир░┐ р░╕р░ор░░р▒Нр░кр░┐р░Вр░Ър░бр░Вр░▓р▒Л р░╡р░┐р░лр░▓р░ор▒Ир░Вр░жр░┐. р░жр░пр░Ър▒Зр░╕р░┐ р░др░░р▒Нр░╡р░╛р░д р░ор░│р▒Нр░▓р▒А р░кр▒Нр░░р░пр░др▒Нр░ир░┐р░Вр░Ър░Вр░бр░┐.",
    support247: "24/7 р░ор░жр▒Нр░жр░др▒Б",
    supportDesc: "р░ор░╛ р░Ер░Вр░Хр░┐р░др░нр░╛р░╡р░Вр░др▒Л р░Хр▒Вр░бр░┐р░и р░ор░жр▒Нр░жр░др▒Б р░мр▒Гр░Вр░жр░Вр░др▒Л р░ор▒Ар░Хр▒Б р░Ор░кр▒Нр░кр▒Бр░бр▒Б р░Ер░╡р░╕р░░р░ор▒Ир░ир░╛ р░ир░┐р░кр▒Бр░г р░╕р░╣р░╛р░пр░В р░кр▒Кр░Вр░жр░Вр░бр░┐.",
    earlyAccess: "р░ор▒Бр░Вр░жр░╕р▒Нр░др▒Б р░пр░╛р░Хр▒Нр░╕р▒Жр░╕р▒Н",
    earlyAccessDesc: "р░ор░╛ р░кр▒Нр░░р░др▒Нр░пр▒Зр░Х р░мр▒Ар░Яр░╛ р░кр▒Нр░░р▒Лр░Чр▒Нр░░р░╛р░ор▒НтАМр░▓р▒Л р░Ър▒Зр░░р░Вр░бр░┐ р░ор░░р░┐р░пр▒Б р░ор░╛ р░ир░╡р▒Ар░и р░кр░░р░┐р░╖р▒Нр░Хр░╛р░░р░╛р░ир▒Нр░ир░┐ р░ор▒Кр░жр░Яр░Чр░╛ р░Ер░ир▒Бр░нр░╡р░┐р░Вр░Ър░Вр░бр░┐.",
    fastResponse: "р░╡р▒Зр░Чр░╡р░Вр░др░ор▒Ир░и р░кр▒Нр░░р░др░┐р░╕р▒Нр░кр░Вр░жр░и",
    fastResponseDesc: "р░ор▒Зр░ор▒Б р░ор▒А р░кр▒Нр░░р░╢р▒Нр░ир░▓р░Хр▒Б 24 р░Чр░Вр░Яр░▓р░▓р▒Лр░кр▒Б р░др▒Нр░╡р░░р░┐р░д р░кр▒Нр░░р░др░┐р░╕р▒Нр░кр░Вр░жр░ир░▓р░др▒Л р░кр▒Нр░░р░╛р░зр░╛р░ир▒Нр░пр░д р░Зр░╕р▒Нр░др░╛р░ор▒Б.",
    noRating: "р░░р▒Зр░Яр░┐р░Вр░Чр▒Н р░▓р▒Зр░жр▒Б",
    somewhat: "р░Хр▒Кр░Вр░др░╡р░░р░Хр▒Б",
    moderately: "р░ор░┐р░др░Вр░Чр░╛",
    very: "р░Ър░╛р░▓р░╛",
    selectLanguage: "р░нр░╛р░╖ р░Ор░Вр░Ър▒Бр░Хр▒Лр░Вр░бр░┐"
  },
  mr: {
    contactUs: "рдЖрдордЪреНрдпрд╛рд╢реА рд╕рдВрдкрд░реНрдХ рд╕рд╛рдзрд╛",
    getInTouch: "рд╕рдВрдкрд░реНрдХрд╛рдд рд░рд╣рд╛",
    contactDescription: "рдЖрдореНрд╣рд╛рд▓рд╛ рддреБрдордЪреНрдпрд╛рдХрдбреВрди рдРрдХрд╛рдпрд▓рд╛ рдЖрд╡рдбреЗрд▓! ЁЯТм рддреБрдордЪрд╛ рдЕрдиреБрднрд╡ рд╕рд╛рдорд╛рдпрд┐рдХ рдХрд░рд╛ рдХрд┐рдВрд╡рд╛ рдХреЛрдгрддреЗрд╣реА рдкреНрд░рд╢реНрди рд╡рд┐рдЪрд╛рд░рд╛тАФрддреБрдордЪрд╛ рдЕрднрд┐рдкреНрд░рд╛рдп рдЖрдордЪреНрдпрд╛ рдлрд╛рд░реНрдорд╛рд╕реНрдпреБрдЯрд┐рдХрд▓ рдЗрдиреНрд╡реНрд╣реЗрдВрдЯрд░реА рдЖрдгрд┐ рдЯреНрд░реЕрдХрд┐рдВрдЧ рд╕рд┐рд╕реНрдЯрдо рд╕реБрдзрд╛рд░рдгреНрдпрд╛рд╕ рдорджрдд рдХрд░рддреЛ ЁЯЪА",
    whyChooseUs: "рдЖрдореНрд╣рд╛рд▓рд╛ рдХрд╛ рдирд┐рд╡рдбрд╛рд╡реЗ",
    getSupport: "рд╕рд╣рд╛рдпреНрдп рдорд┐рд│рд╡рд╛",
    shareFeedback: "рдЕрднрд┐рдкреНрд░рд╛рдп рд╕рд╛рдорд╛рдпрд┐рдХ рдХрд░рд╛",
    name: "рдирд╛рд╡",
    email: "рдИрдореЗрд▓",
    subject: "рд╡рд┐рд╖рдп",
    message: "рд╕рдВрджреЗрд╢",
    sendMessage: "рд╕рдВрджреЗрд╢ рдкрд╛рдард╡рд╛",
    sending: "рдкрд╛рдард╡рдд рдЖрд╣реЗ...",
    successMessage: "рд╕рдВрджреЗрд╢ рдпрд╢рд╕реНрд╡реАрд░рд┐рддреНрдпрд╛ рдкрд╛рдард╡рд▓рд╛! рдЖрдореНрд╣реА рд▓рд╡рдХрд░рдЪ рддреБрдордЪреНрдпрд╛рд╢реА рд╕рдВрдкрд░реНрдХ рд╕рд╛рдзреВ.",
    errorMessage: "рд╕рдВрджреЗрд╢ рдкрд╛рдард╡рдгреНрдпрд╛рдд рдЕрдпрд╢рд╕реНрд╡реА. рдХреГрдкрдпрд╛ рдирдВрддрд░ рдкреБрдиреНрд╣рд╛ рдкреНрд░рдпрддреНрди рдХрд░рд╛.",
    currentChallenges: "рд╕рдзреНрдпрд╛рдЪреЗ рдЖрд╡реНрд╣рд╛рдиреЗ",
    supplyChainCommunication: "рдкреБрд░рд╡рдард╛ рд╕рд╛рдЦрд│реА рд╕рдВрд╡рд╛рдж",
    securityCompliance: "рд╕реБрд░рдХреНрд╖рд╛ рдЖрдгрд┐ рдЕрдиреБрдкрд╛рд▓рди",
    technologyFeatures: "рддрдВрддреНрд░рдЬреНрдЮрд╛рди рд╡реИрд╢рд┐рд╖реНрдЯреНрдпреЗ",
    additionalFeedback: "рдЕрддрд┐рд░рд┐рдХреНрдд рдЕрднрд┐рдкреНрд░рд╛рдп",
    trackingDifficulty: "1. рддреБрдордЪреНрдпрд╛ рд╕рдзреНрдпрд╛рдЪреНрдпрд╛ рд╕рд┐рд╕реНрдЯрдордордзреНрдпреЗ рдЗрдиреНрд╡реНрд╣реЗрдВрдЯрд░реА рдЯреНрд░реЕрдХ рдХрд░рдгреЗ рдХрд┐рддреА рдЕрд╡рдШрдб рдЖрд╣реЗ?",
    notDifficult: "рдЕрд╡рдШрдб рдирд╛рд╣реА",
    extremelyDifficult: "рдЕрддреНрдпрдВрдд рдЕрд╡рдШрдб",
    shortageImportance: "2. рддреБрдордЪреНрдпрд╛ рд╕рдВрд╕реНрдереЗрд╕рд╛рдареА рдФрд╖рдзрд╛рдВрдЪреА рдХрдорддрд░рддрд╛ рджреВрд░ рдХрд░рдгреЗ рдХрд┐рддреА рдорд╣рддреНрддреНрд╡рд╛рдЪреЗ рдЖрд╣реЗ?",
    notImportant: "рдорд╣рддреНрддреНрд╡рд╛рдЪреЗ рдирд╛рд╣реА",
    criticallyImportant: "рдЕрддреНрдпрдВрдд рдорд╣рддреНрддреНрд╡рд╛рдЪреЗ",
    verificationChallenge: "3. рд╕рдзреНрдпрд╛ рдФрд╖рдзрд╛рдВрдЪреА рдкреНрд░рд╛рдорд╛рдгрд┐рдХрддрд╛ рд╕рддреНрдпрд╛рдкрд┐рдд рдХрд░рдгреЗ рдХрд┐рддреА рдЖрд╡реНрд╣рд╛рдирд╛рддреНрдордХ рдЖрд╣реЗ?",
    notChallenging: "рдЖрд╡реНрд╣рд╛рдирд╛рддреНрдордХ рдирд╛рд╣реА",
    veryChallenging: "рдЕрддреНрдпрдВрдд рдЖрд╡реНрд╣рд╛рдирд╛рддреНрдордХ",
    communicationFrequency: "1. рддреБрдореНрд╣рд╛рд▓рд╛ рдкреБрд░рд╡рдард╛ рд╕рд╛рдЦрд│реА рднрд╛рдЧреАрджрд╛рд░рд╛рдВрд╢реА рдХрд┐рддреА рд╡реЗрд│рд╛ рд╕рдВрд╡рд╛рдж рд╕рд╛рдзрд╛рд╡рд╛ рд▓рд╛рдЧрддреЛ?",
    rarely: "рдХреНрд╡рдЪрд┐рддрдЪ",
    veryFrequently: "рдЕрддреНрдпрдВрдд рд╡рд╛рд░рдВрд╡рд╛рд░",
    visibilityImportance: "2. рддреБрдордЪреНрдпрд╛ рдкреБрд░рд╡рдард╛ рд╕рд╛рдЦрд│реАрдордзреНрдпреЗ рд░рд┐рдЕрд▓-рдЯрд╛рдЗрдо рджреГрд╢реНрдпрдорд╛рдирддрд╛ рдХрд┐рддреА рдорд╣рддреНрддреНрд╡рд╛рдЪреА рдЖрд╣реЗ?",
    critical: "рдЕрддреНрдпрдВрдд рдорд╣рддреНрддреНрд╡рд╛рдЪреЗ",
    counterfeitConcern: "1. рддреБрдореНрд╣реА рдмрдирд╛рд╡рдЯ рдФрд╖рдзрд╛рдВрдмрджреНрджрд▓ рдХрд┐рддреА рдЪрд┐рдВрддрд┐рдд рдЖрд╣рд╛рдд?",
    notConcerned: "рдЪрд┐рдВрддрд┐рдд рдирд╛рд╣реА",
    veryConcerned: "рдЕрддреНрдпрдВрдд рдЪрд┐рдВрддрд┐рдд",
    regulatoryWorkload: "2. рддреБрдордЪреНрдпрд╛ рдЯреАрдорд╕рд╛рдареА рдирд┐рдпрд╛рдордХ рдЕрдиреБрдкрд╛рд▓рди рдХрд┐рддреА рдУрдЭреЗ рдЖрд╣реЗ?",
    minorBurden: "рдХрд┐рд░рдХреЛрд│ рдУрдЭреЗ",
    majorBurden: "рдореЛрдареЗ рдУрдЭреЗ",
    localRetailerQuestion: "3. рддреБрдореНрд╣рд╛рд▓рд╛ рд╡рд╛рдЯрддреЗ рдХрд╛ рдХреА рд╕реНрдерд╛рдирд┐рдХ рд╡рд┐рдХреНрд░реЗрддреЗ рдФрд╖рдзреЗ рд╕реБрд░рдХреНрд╖рд┐рддрдкрдгреЗ рдкреНрд░рдорд╛рдгрд┐рдд рдХрд░реВ рд╢рдХрддрд╛рдд?",
    yes: "рд╣реЛрдп",
    no: "рдирд╛рд╣реА",
    explainAnswer: "рдХреГрдкрдпрд╛ рддреБрдордЪреЗ рдЙрддреНрддрд░ рд╕реНрдкрд╖реНрдЯ рдХрд░рд╛...",
    barcodeUseful: "1. рдкреНрд░рдорд╛рдгрдирд╛рд╕рд╛рдареА рдмрд╛рд░рдХреЛрдб рд╕реНрдХреЕрдирд┐рдВрдЧ рдХрд┐рддреА рдЙрдкрдпреБрдХреНрдд рдЕрд╕реЗрд▓?",
    notUseful: "рдЙрдкрдпреБрдХреНрдд рдирд╛рд╣реА",
    veryUseful: "рдЦреВрдк рдЙрдкрдпреБрдХреНрдд",
    alertsImportance: "2. рдЗрдиреНрд╡реНрд╣реЗрдВрдЯрд░реА рд╕рдорд╕реНрдпрд╛рдВрд╕рд╛рдареА рд░рд┐рдЕрд▓-рдЯрд╛рдЗрдо рдЕрд▓рд░реНрдЯреНрд╕ рдХрд┐рддреА рдорд╣рддреНрддреНрд╡рд╛рдЪреЗ рдЖрд╣реЗрдд?",
    messagingValue: "3. рднрд╛рдЧреАрджрд╛рд░рд╛рдВрдордзреАрд▓ рд╕реБрд░рдХреНрд╖рд┐рдд рд╕рдВрджреЗрд╢рд╡рд╣рди рдХрд┐рддреА рдореВрд▓реНрдпрд╡рд╛рди рд╣реЛрдИрд▓?",
    notValuable: "рдореВрд▓реНрдпрд╡рд╛рди рдирд╛рд╣реА",
    extremelyValuable: "рдЕрддреНрдпрдВрдд рдореВрд▓реНрдпрд╡рд╛рди",
    reportsNecessity: "4. рддреБрдордЪреНрдпрд╛ рдСрдкрд░реЗрд╢рдиреНрд╕рд╕рд╛рдареА рдХрд╕реНрдЯрдо рд░рд┐рдкреЛрд░реНрдЯреНрд╕ рдХрд┐рддреА рдЖрд╡рд╢реНрдпрдХ рдЖрд╣реЗрдд?",
    notNecessary: "рдЖрд╡рд╢реНрдпрдХ рдирд╛рд╣реА",
    essential: "рдЖрд╡рд╢реНрдпрдХ",
    blockchainImportance: "5. рддреБрдордЪреНрдпрд╛ рд╕рдВрд╕реНрдереЗрд╕рд╛рдареА рдкреНрд░рдорд╛рдгрдирд╛рд╕рд╛рдареА рдмреНрд▓реЙрдХрдЪреЗрди рдХрд┐рддреА рдорд╣рддреНрддреНрд╡рд╛рдЪреЗ рдЖрд╣реЗ?",
    veryImportant: "рдЦреВрдк рдорд╣рддреНрддреНрд╡рд╛рдЪреЗ",
    additionalSuggestions: "рдХреГрдкрдпрд╛ рддреБрдореНрд╣рд╛рд▓рд╛ рджрд┐рд▓реЗрд▓реНрдпрд╛ рдЙрддреНрддрд░рд╛рдВрдордзреНрдпреЗ рдХрд╛рд╣реА рдЕрддрд┐рд░рд┐рдХреНрдд рд╕реВрдЪрдирд╛ рдХрд┐рдВрд╡рд╛ рд╕реБрдзрд╛рд░рдгрд╛ рдЕрд╕рд▓реНрдпрд╛рд╕ рддреЗ рдпреЗрдереЗ рд╢реЗрдЕрд░ рдХрд░рд╛.",
    shareSuggestions: "рддреБрдордЪреНрдпрд╛ рд╡рд┐рдЪрд╛рд░рд╛рдВрдЪреА рдпреЗрдереЗ рд╢реЗрдЕрд░ рдХрд░рд╛...",
    submitFeedback: "рдЕрднрд┐рдкреНрд░рд╛рдп рд╕рд╛рджрд░ рдХрд░рд╛",
    submitting: "рд╕рд╛рджрд░ рдХрд░рдд рдЖрд╣реЗ...",
    reviewSuccessMessage: "рддреБрдордЪреНрдпрд╛ рдореБрд▓реНрдпрд╡рд╛рди рдЕрднрд┐рдкреНрд░рд╛рдпрд╛рд╕рд╛рдареА рдзрдиреНрдпрд╡рд╛рдж! рддреБрдордЪреНрдпрд╛ рдирд┐рд░реАрдХреНрд╖рдгрд╛рдВрдореБрд│реЗ рдЖрдордЪреНрдпрд╛ рдкреНрд░рдгрд╛рд▓реАрд▓рд╛ рд╕реБрдзрд╛рд░рдгреНрдпрд╛рдд рдорджрдд рд╣реЛрдИрд▓.",
    reviewErrorMessage: "рдЕрднрд┐рдкреНрд░рд╛рдп рд╕рд╛рджрд░ рдХрд░рдгреНрдпрд╛рдд рдЕрдпрд╢рд╕реНрд╡реА. рдХреГрдкрдпрд╛ рдирдВрддрд░ рдкреБрдиреНрд╣рд╛ рдкреНрд░рдпрддреНрди рдХрд░рд╛.",
    support247: "реирек/рен рд╕рд╣рд╛рдпреНрдп",
    supportDesc: "рдЖрдордЪреНрдпрд╛ рд╕рдорд░реНрдкрд┐рдд рд╕рд╣рд╛рдпреНрдп рдЯреАрдорд╕рд╣ рддреБрдореНрд╣рд╛рд▓рд╛ рдХрдзреАрд╣реА рддрдЬреНрдЬреНрдЮ рдорджрдд рдорд┐рд│реВ рд╢рдХрддреЗ.",
    earlyAccess: "рд▓рд╡рдХрд░ рдкреНрд░рд╡реЗрд╢",
    earlyAccessDesc: "рдЖрдордЪреНрдпрд╛ рд╡рд┐рд╢реЗрд╖ рдмреАрдЯрд╛ рдкреНрд░реЛрдЧреНрд░реЕрдордордзреНрдпреЗ рд╕рд╛рдореАрд▓ рд╡реНрд╣рд╛ рдЖрдгрд┐ рдЖрдордЪреНрдпрд╛ рдирд╡реАрдирддрдо рд╕рдорд╛рдзрд╛рдирд╛рдЪрд╛ рдЕрдиреБрднрд╡ рдШреНрдпрд╛.",
    fastResponse: "рдЬрд▓рдж рдкреНрд░рддрд┐рд╕рд╛рдж",
    fastResponseDesc: "рдЖрдореНрд╣реА рддреБрдордЪреНрдпрд╛ рдкреНрд░рд╢реНрдирд╛рдВрдирд╛ реирек рддрд╛рд╕рд╛рдВрдЪреНрдпрд╛ рдЖрдд рддрд╛рддрдбреАрдиреЗ рдкреНрд░рддрд┐рд╕рд╛рдж рджреЗрддреЛ.",
    noRating: "рдХреЛрдгрддреЗрд╣реА рд░реЗрдЯрд┐рдВрдЧ рдирд╛рд╣реА",
    somewhat: "рдереЛрдбреЗ",
    moderately: "рдордзреНрдпрдо",
    very: "рдЦреВрдк",
    selectLanguage: "рднрд╛рд╖рд╛ рдирд┐рд╡рдбрд╛"
  },
  ta: {
    contactUs: "родрпКроЯро░рпНрокрпБ роХрпКро│рпНро│рпБроЩрпНроХро│рпН",
    getInTouch: "роОроЩрпНроХро│рпБроЯройрпН родрпКроЯро░рпНрокрпБ роХрпКро│рпНро│рпБроЩрпНроХро│рпН",
    contactDescription: "роиро╛роЩрпНроХро│рпН роЙроЩрпНроХро│ро┐роЯроорпН роЗро░рпБроирпНродрпБ роХрпЗроЯрпНроХ ро╡ро┐ро░рпБроорпНрокрпБроХро┐ро▒рпЛроорпН! ЁЯТм роЙроЩрпНроХро│рпН роЕройрпБрокро╡родрпНродрпИрокрпН рокроХро┐ро░рпБроЩрпНроХро│рпН роЕро▓рпНро▓родрпБ роХрпЗро│рпНро╡ро┐ роХрпЗро│рпБроЩрпНроХро│рпНтАФроЙроЩрпНроХро│рпН рокро┐ройрпНройрпВроЯрпНроЯроорпН роОроЩрпНроХро│рпН рооро░рпБродрпНродрпБро╡ рокрпКро░рпБро│ро┐ропро▓рпН рооро▒рпНро▒рпБроорпН роХрогрпНроХро╛рогро┐рокрпНрокрпБ роЕроорпИрокрпНрокрпИ роорпЗроорпНрокроЯрпБродрпНрод роЙродро╡рпБроХро┐ро▒родрпБ ЁЯЪА",
    whyChooseUs: "роиро╛роорпН роПройрпН родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХрокрпНрокроЯ ро╡рпЗрогрпНроЯрпБроорпН",
    getSupport: "роЖродро░ро╡рпБ рокрпЖро▒ро╡рпБроорпН",
    shareFeedback: "рокро┐ройрпНройрпВроЯрпНроЯродрпНродрпИрокрпН рокроХро┐ро░ро╡рпБроорпН",
    name: "рокрпЖропро░рпН",
    email: "рооро┐ройрпНройроЮрпНроЪро▓рпН",
    subject: "рокрпКро░рпБро│рпН",
    message: "роЪрпЖропрпНродро┐",
    sendMessage: "роЪрпЖропрпНродро┐ роЕройрпБрокрпНрокро╡рпБроорпН",
    sending: "роЕройрпБрокрпНрокрпБродро▓рпН...",
    successMessage: "роЪрпЖропрпНродро┐ ро╡рпЖро▒рпНро▒ро┐роХро░рооро╛роХ роЕройрпБрокрпНрокрокрпНрокроЯрпНроЯродрпБ! роиро╛роЩрпНроХро│рпН ро╡ро┐ро░рпИро╡ро┐ро▓рпН роЙроЩрпНроХро│рпБроЯройрпН родрпКроЯро░рпНрокрпБ роХрпКро│рпНро╡рпЛроорпН.",
    errorMessage: "роЪрпЖропрпНродро┐ роЕройрпБрокрпНрок роорпБроЯро┐ропро╡ро┐ро▓рпНро▓рпИ. родропро╡рпБроЪрпЖропрпНродрпБ рокро┐ро▒роХрпБ роорпБропро▒рпНроЪро┐роХрпНроХро╡рпБроорпН.",
    currentChallenges: "родро▒рпНрокрпЛродрпИроп роЪро╡ро╛ро▓рпНроХро│рпН",
    supplyChainCommunication: "рокрпКро░рпБро│рпН роЪро░роХрпНроХрпБ родрпКроЯро░рпНрокрпБ",
    securityCompliance: "рокро╛родрпБроХро╛рокрпНрокрпБ рооро▒рпНро▒рпБроорпН рокро┐ройрпНрокро▒рпНро▒рпБродро▓рпН",
    technologyFeatures: "родрпКро┤ро┐ро▓рпНроирпБроЯрпНрок роЕроорпНроЪроЩрпНроХро│рпН",
    additionalFeedback: "роорпЗро▓родро┐роХ рокро┐ройрпНройрпВроЯрпНроЯроорпН",
    trackingDifficulty: "1. роЙроЩрпНроХро│рпН родро▒рпНрокрпЛродрпИроп роЕроорпИрокрпНрокро┐ро▓рпН рокрпКро░рпБро│рпН роХрогроХрпНроХрпИ роОро╡рпНро╡ро│ро╡рпБ роХроЯро┐ройрооро╛роХрпНроХро┐ройрпНро▒родрпБ?",
    notDifficult: "роХроЯро┐ройроорпН роЗро▓рпНро▓рпИ",
    extremelyDifficult: "роЕродро┐роХрооро╛роХ роХроЯро┐ройроорпН",
    shortageImportance: "2. роЙроЩрпНроХро│рпН роиро┐ро▒рпБро╡ройродрпНродро┐ро▒рпНроХрпБ рооро░рпБроирпНродрпБ рокро▒рпНро▒ро╛роХрпНроХрпБро▒рпИ роорпБроХрпНроХро┐ропрооро╛роХ роЗро░рпБроХрпНроХро┐ро▒родро╛?",
    notImportant: "роорпБроХрпНроХро┐ропрооро┐ро▓рпНро▓рпИ",
    criticallyImportant: "рооро┐роХро╡рпБроорпН роорпБроХрпНроХро┐ропроорпН",
    verificationChallenge: "3. рооро░рпБроирпНродрпБ роЖро╡рогродрпНродрпИ роЪро░ро┐рокро╛ро░рпНрокрпНрокродрпБ роОро╡рпНро╡ро│ро╡рпБ роЪро╡ро╛ро▓ро╛роХ роЗро░рпБроХрпНроХро┐ройрпНро▒родрпБ?",
    notChallenging: "роЪро╡ро╛ро▓ро╛ройродрпБ роЗро▓рпНро▓рпИ",
    veryChallenging: "рооро┐роХро╡рпБроорпН роЪро╡ро╛ро▓ро╛ройродрпБ",
    communicationFrequency: "1. роирпАроЩрпНроХро│рпН роОро╡рпНро╡ро│ро╡рпБ роирпЗро░родрпНродро┐ро▒рпНроХрпБ рокрпКро░рпБро│рпН роЪро░роХрпНроХрпБ рокроЩрпНроХрпБродро╛ро░ро░рпНроХро│рпБроЯройрпН родрпКроЯро░рпНрокрпБ роХрпКро│рпНро│ ро╡рпЗрогрпНроЯрпБроорпН?",
    rarely: "роЕро░ро┐родро╛роХ",
    veryFrequently: "рооро┐роХро╡рпБроорпН роЕроЯро┐роХрпНроХроЯро┐",
    visibilityImportance: "2. роЙроЩрпНроХро│рпН рокрпКро░рпБро│рпН роЪро░роХрпНроХрпБ роЕроорпИрокрпНрокро┐ро▓рпН роирпЗро░роЯро┐ропро╛роХ рокро╛ро░рпНро╡рпИ роОро╡рпНро╡ро│ро╡рпБ роорпБроХрпНроХро┐ропроорпН?",
    critical: "рооро┐роХро╡рпБроорпН роорпБроХрпНроХро┐ропроорпН",
    counterfeitConcern: "1. роирпАроЩрпНроХро│рпН роироХро▓рпН рооро░рпБроирпНродрпБроХро│рпН рокро▒рпНро▒ро┐ роОро╡рпНро╡ро│ро╡рпБ роХро╡ро▓рпИрокрпНрокроЯрпНроЯрпБро│рпНро│рпАро░рпНроХро│рпН?",
    notConcerned: "роХро╡ро▓рпИрокрпНрокроЯро╡ро┐ро▓рпНро▓рпИ",
    veryConcerned: "рооро┐роХро╡рпБроорпН роХро╡ро▓рпИрокрпНрокроЯрпНроЯрпБро│рпНро│рпЗройрпН",
    regulatoryWorkload: "2. роЙроЩрпНроХро│рпН роХрпБро┤рпБро╡ро┐ро▒рпНроХрпБ ро╡рогро┐роХ роТро┤рпБроЩрпНроХрпБроорпБро▒рпИ роЙро┤рпИрокрпНрокрпБ роОро╡рпНро╡ро│ро╡рпБ роХроЯро┐ройрооро╛роХ роЗро░рпБроХрпНроХро┐ройрпНро▒родрпБ?",
    minorBurden: "роЪро┐ро▒ро┐роп рокрогрооро│ро┐рокрпНрокрпБ",
    majorBurden: "рокрпЖро░ро┐роп рокрогрооро│ро┐рокрпНрокрпБ",
    localRetailerQuestion: "3. роЙро│рпНро│рпВро░рпН ро╡ро┐ро▒рпНрокройрпИропро╛ро│ро░рпНроХро│рпН рооро░рпБроирпНродрпБроХро│рпИ рокро╛родрпБроХро╛рокрпНрокро╛роХроЪрпН роЪро╛ройрпНро▒ро│ро┐роХрпНроХ роорпБроЯро┐ропрпБроорпН роОройрпНро▒рпБ роирпАроЩрпНроХро│рпН роХро░рпБродрпБроХро┐ро▒рпАро░рпНроХро│ро╛?",
    yes: "роЖроорпН",
    no: "роЗро▓рпНро▓рпИ",
    explainAnswer: "родропро╡рпБроЪрпЖропрпНродрпБ роЙроЩрпНроХро│рпН рокродро┐ро▓рпИ ро╡ро┐ро│роХрпНроХро╡рпБроорпН...",
    barcodeUseful: "1. роЪро╛ройрпНро▒рпБ роХрпБро▒рпИроХрпНроХ рокро░ро┐роЪрпЛродройрпИ роЪрпЖропрпНроп роОро╡рпНро╡ро│ро╡рпБ рокропройрпБро│рпНро│родро╛роХ роЗро░рпБроХрпНроХрпБроорпН?",
    notUseful: "рокропройро┐ро▓рпНро▓рпИ",
    veryUseful: "рооро┐роХро╡рпБроорпН рокропройрпБро│рпНро│родро╛роХ",
    alertsImportance: "2. рокрпКро░рпБро│рпН роХрпИропро╛ро│ро▓рпБроХрпНроХро╛рой роирпЗро░роЯро┐ роОроЪрпНроЪро░ро┐роХрпНроХрпИроХро│рпН роОро╡рпНро╡ро│ро╡рпБ роорпБроХрпНроХро┐ропроорпН?",
    messagingValue: "3. рокроЩрпНроХрпБродро╛ро░ро░рпНроХро│рпБроХрпНроХрпБ роЗроЯрпИропрпЗ рокро╛родрпБроХро╛рокрпНрокро╛рой роЪрпЖропрпНродро┐ родрпКроЯро░рпНрокрпБ роОро╡рпНро╡ро│ро╡рпБ роорпБроХрпНроХро┐ропрооро╛ройродрпБ?",
    notValuable: "рооро┐роХро╡рпБроорпН роородро┐рокрпНрокро┐ро▓рпНро▓ро╛родродрпБ",
    extremelyValuable: "рооро┐роХро╡рпБроорпН роородро┐рокрпНрокро┐роЯрокрпНрокроЯрпБро╡родрпБ",
    reportsNecessity: "4. роЙроЩрпНроХро│рпН роЪрпЖропро▓рпНрокро╛роЯрпБроХро│рпБроХрпНроХро╛рой родройро┐рокрпНрокропройрпН роЕро▒ро┐роХрпНроХрпИроХро│рпН роОро╡рпНро╡ро│ро╡рпБ роЕро╡роЪро┐ропроорпН?",
    notNecessary: "роорпБроЯро┐ро╡рпБроХро│рпБроХрпНроХрпБ родрпЗро╡рпИропро┐ро▓рпНро▓рпИ",
    essential: "роЕро╡роЪро┐ропрооро╛ройродрпБ",
    blockchainImportance: "5. роЙроЩрпНроХро│рпН роиро┐ро▒рпБро╡ройродрпНродро┐ро▒рпНроХрпБ роЪро╛ройрпНро▒рпБроХро│рпИ роЙро▒рпБродро┐рокрпНрокроЯрпБродрпНродрпБро╡родро▒рпНроХро╛рой рокро┐ро│ро╛роХрпНроЪрпЖропро┐ройрпН роОро╡рпНро╡ро│ро╡рпБ роорпБроХрпНроХро┐ропроорпН?",
    veryImportant: "рооро┐роХро╡рпБроорпН роорпБроХрпНроХро┐ропроорпН",
    additionalSuggestions: "роирпАроЩрпНроХро│рпН роОройрпНройрпБроЯрпИроп рокро░ро┐роирпНродрпБро░рпИроХро│рпН роЕро▓рпНро▓родрпБ роорпЗроорпНрокроЯрпБродрпНродрпБродро▓рпНроХро│рпН рокроХро┐ро░ ро╡ро┐ро░рпБроорпНрокрпБроХро┐ро▒рпАро░рпНроХро│ро╛?",
    shareSuggestions: "роЙроЩрпНроХро│рпН роХро░рпБродрпНродрпБроХрпНроХро│рпИ роЗроЩрпНроХрпЗ рокроХро┐ро░рпБроЩрпНроХро│рпН...",
    submitFeedback: "рокро┐ройрпНройрпВроЯрпНроЯроорпН роЪрооро░рпНрокрпНрокро┐роХрпНроХро╡рпБроорпН",
    submitting: "роЪрооро░рпНрокрпНрокро┐роХрпНроХрокрпНрокроЯрпБроХро┐ро▒родрпБ...",
    reviewSuccessMessage: "роЙроЩрпНроХро│рпН роородро┐рокрпНрокро┐роЯрокрпНрокроЯрпНроЯ рокро┐ройрпНройрпВроЯрпНроЯродрпНродро┐ро▒рпНроХрпБ роиройрпНро▒ро┐! роЙроЩрпНроХро│рпН рокро╛ро░рпНро╡рпИ роОроЩрпНроХро│рпН роЕроорпИрокрпНрокрпИ роорпЗроорпНрокроЯрпБродрпНрод роЙродро╡рпБроорпН.",
    reviewErrorMessage: "рокро┐ройрпНройрпВроЯрпНроЯроорпН роЪрооро░рпНрокрпНрокро┐роХрпНроХ роорпБроЯро┐ропро╡ро┐ро▓рпНро▓рпИ. родропро╡рпБроЪрпЖропрпНродрпБ рокро┐ро▒роХрпБ роорпБропро▒рпНроЪро┐роХрпНроХро╡рпБроорпН.",
    support247: "24/7 роЖродро░ро╡рпБ",
    supportDesc: "роОрокрпНрокрпЛродрпБ ро╡рпЗрогрпНроЯрпБрооро╛ройро╛ро▓рпБроорпН роОроЩрпНроХро│рпН ро╡ро┐роЪро╛ро░рогрпИ роХрпБро┤рпБро╡ро┐ройро░ро┐ройрпН роЙродро╡ро┐ рокрпЖро▒рпБроЩрпНроХро│рпН.",
    earlyAccess: "роорпБройрпНройрогро┐ роЕройрпБроородро┐",
    earlyAccessDesc: "роОроЩрпНроХро│рпН роЪрпКроирпНрод рокрпАроЯрпНроЯро╛ родро┐роЯрпНроЯродрпНродро┐ро▓рпН роЪрпЗро░рпБроЩрпНроХро│рпН рооро▒рпНро▒рпБроорпН рокрпБродрпБрокрпНрокро┐родрпНродро▓рпИ роЕройрпБрокро╡ро┐роХрпНроХро╡рпБроорпН.",
    fastResponse: "ро╡ро┐ро░рпИро╡ро╛рой рокродро┐ро▓рпН",
    fastResponseDesc: "роОроЩрпНроХро│рпН роХрпБро┤рпБро╡ро┐ройрпН рокродро┐ро▓рпНроХро│рпН рооро┐роХ ро╡ро┐ро░рпИро╡ро╛роХ, 24 роорогро┐роирпЗро░родрпНродро┐ро▓рпН рокрпЖро▒рокрпНрокроЯрпБроорпН.",
    noRating: "ропро╛ро░рпБроорпН роородро┐рокрпНрокро┐роЯро╡ро┐ро▓рпНро▓рпИ",
    somewhat: "роЪро┐ро▓ роЕро│ро╡рпБ",
    moderately: "рооро┐родрооро╛рой роЕро│ро╡рпБ",
    very: "рооро┐роХро╡рпБроорпН",
    selectLanguage: "роорпКро┤ро┐ родрпЗро░рпНро╡рпБ роЪрпЖропрпНропро╡рпБроорпН"
  },

  ur: {
    contactUs: "█Б┘Е ╪│█Т ╪▒╪з╪и╪╖█Б ┌й╪▒█М┌║",
    getInTouch: "█Б┘Е ╪│█Т ╪м┌С█М┌║",
    contactDescription: "█Б┘Е ╪в┘╛ ╪│█Т ╪│┘Ж┘Ж╪з ┘╛╪│┘Ж╪п ┌й╪▒█М┌║ ┌п█Т! ЁЯТм ╪з┘╛┘Ж█Т ╪к╪м╪▒╪и╪з╪к ╪┤█М╪ж╪▒ ┌й╪▒█М┌║ █М╪з ┌й┘И╪ж█М ╪│┘И╪з┘Д ┘╛┘И┌Ж┌╛█М┌║тАФ╪в┘╛ ┌й╪з ┘Б█М┌И╪и█М┌й █Б┘Е╪з╪▒█М ╪п┘И╪з╪│╪з╪▓█М ┌й█М ╪з┘Ж┘И█М┘Ж┘╣╪▒█М ╪з┘И╪▒ ┘╣╪▒█М┌й┘Ж┌п ╪│╪│┘╣┘Е ┌й┘И ╪и█Б╪к╪▒ ╪и┘Ж╪з┘Ж█Т ┘Е█М┌║ ┘Е╪п╪п ┌й╪▒█Т ┌п╪з ЁЯЪА",
    whyChooseUs: "█Б┘Е█М┌║ ┌й█М┘И┌║ ┘Е┘Ж╪к╪о╪и ┌й╪▒█М┌║",
    getSupport: "┘Е╪п╪п ╪н╪з╪╡┘Д ┌й╪▒█М┌║",
    shareFeedback: "┘Б█М┌И╪и█М┌й ╪┤█М╪ж╪▒ ┌й╪▒█М┌║",
    name: "┘Ж╪з┘Е",
    email: "╪з█М ┘Е█М┘Д",
    subject: "┘Е┘И╪╢┘И╪╣",
    message: "┘╛█М╪║╪з┘Е",
    sendMessage: "┘╛█М╪║╪з┘Е ╪и┌╛█М╪м█М┌║",
    sending: "╪и┌╛█М╪м╪з ╪м╪з ╪▒█Б╪з █Б█Т...",
    successMessage: "┘╛█М╪║╪з┘Е ┌й╪з┘Е█М╪з╪и█М ╪│█Т ╪и┌╛█М╪м╪з ┌п█М╪з! █Б┘Е ╪м┘Д╪п █Б█М ╪в┘╛ ╪│█Т ╪▒╪з╪и╪╖█Б ┌й╪▒█М┌║ ┌п█Т█Ф",
    errorMessage: "┘╛█М╪║╪з┘Е ╪и┌╛█М╪м┘Ж█Т ┘Е█М┌║ ┘Ж╪з┌й╪з┘Е█М█Ф ╪и╪▒╪з█Б ┌й╪▒┘Е ╪и╪╣╪п ┘Е█М┌║ ╪п┘И╪и╪з╪▒█Б ┌й┘И╪┤╪┤ ┌й╪▒█М┌║█Ф",
    currentChallenges: "┘Е┘И╪м┘И╪п█Б ┌Ж█М┘Д┘Ж╪м╪▓",
    supplyChainCommunication: "╪│┘╛┘Д╪з╪ж█М ┌Ж█М┘Ж ┌й┘Е█М┘И┘Ж█М┌й█М╪┤┘Ж",
    securityCompliance: "╪│█М┌й█М┘И╪▒┘╣█М ╪з┘И╪▒ ╪к╪╣┘Е█М┘Д",
    technologyFeatures: "┘╣█М┌й┘Ж╪з┘Д┘И╪м█М ┌й█М ╪о╪╡┘И╪╡█М╪з╪к",
    additionalFeedback: "╪з╪╢╪з┘Б█М ┘Б█М┌И╪и█М┌й",
    trackingDifficulty: "1. ╪в┘╛ ┌й█Т ┘Е┘И╪м┘И╪п█Б ╪│╪│┘╣┘Е ┘Е█М┌║ ╪з┘Ж┘И█М┘Ж┘╣╪▒█М ┌й┘И ┘╣╪▒█М┌й ┌й╪▒┘Ж╪з ┌й╪к┘Ж╪з ┘Е╪┤┌й┘Д █Б█Т╪Я",
    notDifficult: "┘Е╪┤┌й┘Д ┘Ж█Б█М┌║",
    extremelyDifficult: "╪з┘Ж╪к█Б╪з╪ж█М ┘Е╪┤┌й┘Д",
    shortageImportance: "2. ╪в┘╛ ┌й█М ╪к┘Ж╪╕█М┘Е ┌й█Т ┘Д█М█Т ╪п┘И╪з ┌й█М ┌й┘Е█М ┌й┘И ╪н┘Д ┌й╪▒┘Ж╪з ┌й╪к┘Ж╪з ╪з█Б┘Е █Б█Т╪Я",
    notImportant: "╪з█Б┘Е ┘Ж█Б█М┌║",
    criticallyImportant: "╪з┘Ж╪к█Б╪з╪ж█М ╪з█Б┘Е",
    verificationChallenge: "3. ╪п┘И╪з ┌й█М ╪╡╪п╪з┘В╪к ┌й█М ╪к╪╡╪п█М┘В ┌й╪▒┘Ж╪з ┌й╪к┘Ж╪з ┌Ж█М┘Д┘Ж╪м┘Ж┌п █Б█Т╪Я",
    notChallenging: "┌Ж█М┘Д┘Ж╪м┘Ж┌п ┘Ж█Б█М┌║",
    veryChallenging: "╪и█Б╪к ┌Ж█М┘Д┘Ж╪м┘Ж┌п",
    communicationFrequency: "1. ╪в┘╛ ┌й┘И ╪│┘╛┘Д╪з╪ж█М ┌Ж█М┘Ж ┌й█Т ╪┤╪▒╪з┌й╪к ╪п╪з╪▒┘И┌║ ┌й█Т ╪│╪з╪к┌╛ ┌й╪к┘Ж█М ╪и╪з╪▒ ╪▒╪з╪и╪╖█Б ┌й╪▒┘Ж╪з ┘╛┌С╪к╪з █Б█Т╪Я",
    rarely: "┌й╪и┌╛█М ┌й╪и┌╛╪з╪▒",
    veryFrequently: "╪и█Б╪к ╪▓█М╪з╪п█Б",
    visibilityImportance: "2. ╪в┘╛ ┌й█М ╪│┘╛┘Д╪з╪ж█М ┌Ж█М┘Ж ┘Е█М┌║ ╪н┘В█М┘В█М ┘И┘В╪к ┌й█М ┘И█М┌Ш╪и┘Д┘╣█М ┌й╪к┘Ж█М ╪з█Б┘Е █Б█Т╪Я",
    critical: "╪з┘Ж╪к█Б╪з╪ж█М ╪з█Б┘Е",
    counterfeitConcern: "1. ╪в┘╛ ┌й┘И ╪м╪╣┘Д█М ╪п┘И╪з╪д┌║ ┌й█Т ╪и╪з╪▒█Т ┘Е█М┌║ ┌й╪к┘Ж╪з ╪к╪┤┘И█М╪┤ █Б█Т╪Я",
    notConcerned: "┘Б┌й╪▒┘Е┘Ж╪п ┘Ж█Б█М┌║",
    veryConcerned: "╪и█Б╪к ┘Б┌й╪▒┘Е┘Ж╪п █Б┘И┌║",
    regulatoryWorkload: "2. ╪в┘╛ ┌й█М ┘╣█М┘Е ┌й█Т ┘Д█М█Т ╪╢┘И╪з╪и╪╖ ┌й█М ╪к╪╣┘Е█М┘Д ┌й╪к┘Ж╪з ╪и┘И╪м┌╛ █Б█Т╪Я",
    minorBurden: "┌й┘Е ╪и┘И╪м┌╛",
    majorBurden: "╪и┌С╪з ╪и┘И╪м┌╛",
    localRetailerQuestion: "3. ┌й█М╪з ╪в┘╛ ┌й┘И ┘Д┌п╪к╪з █Б█Т ┌й█Б ┘Е┘В╪з┘Е█М ╪▒█М┘╣█М┘Д╪▒╪▓ ╪п┘И╪з ┌й┘И ┘Е╪н┘Б┘И╪╕ ╪╖╪▒█М┘В█Т ╪│█Т ╪к╪╡╪п█М┘В ┌й╪▒ ╪│┌й╪к█Т █Б█М┌║╪Я",
    yes: "█Б╪з┌║",
    no: "┘Ж█Б█М┌║",
    explainAnswer: "╪и╪▒╪з█Б ┌й╪▒┘Е ╪з┘╛┘Ж╪з ╪м┘И╪з╪и ┘И╪╢╪з╪н╪к ╪│█Т ╪и█М╪з┘Ж ┌й╪▒█М┌║...",
    barcodeUseful: "1. ╪к╪╡╪п█М┘В ┌й█Т ┘Д█М█Т ╪и╪з╪▒┌й┘И┌И ╪з╪│┌й█М┘Ж┘Ж┌п ┌й╪к┘Ж█М ┘Е┘Б█М╪п █Б┘И┌п█М╪Я",
    notUseful: "┘Е┘Б█М╪п ┘Ж█Б█М┌║",
    veryUseful: "╪и█Б╪к ┘Е┘Б█М╪п",
    alertsImportance: "2. ╪з┘Ж┘И█М┘Ж┘╣╪▒█М ┘Е╪│╪з╪ж┘Д ┌й█Т ┘Д█М█Т ╪н┘В█М┘В█М ┘И┘В╪к ┌й█Т ╪з┘Д╪▒┘╣╪│ ┌й╪к┘Ж█Т ╪з█Б┘Е █Б█М┌║╪Я",
    messagingValue: "3. ╪┤╪▒╪з┌й╪к ╪п╪з╪▒┘И┌║ ┌й█Т ╪п╪▒┘Е█М╪з┘Ж ┘Е╪н┘Б┘И╪╕ ┘╛█М╪║╪з┘Е ╪▒╪│╪з┘Ж█М ┌й╪к┘Ж█М ┘В█М┘Е╪к█М █Б┘И┌п█М╪Я",
    notValuable: "┘В█М┘Е╪к█М ┘Ж█Б█М┌║",
    extremelyValuable: "╪з┘Ж╪к█Б╪з╪ж█М ┘В█М┘Е╪к█М",
    reportsNecessity: "4. ╪в┘╛ ┌й█М ┌й╪з╪▒╪▒┘И╪з╪ж█М┘И┌║ ┌й█Т ┘Д█М█Т ╪н╪│╪и ╪╢╪▒┘И╪▒╪к ╪▒┘╛┘И╪▒┘╣╪│ ┌й╪к┘Ж█М ╪╢╪▒┘И╪▒█М █Б█М┌║╪Я",
    notNecessary: "╪╢╪▒┘И╪▒█М ┘Ж█Б█М┌║",
    essential: "╪╢╪▒┘И╪▒█М",
    blockchainImportance: "5. ╪в┘╛ ┌й█М ╪к┘Ж╪╕█М┘Е ┌й█Т ┘Д█М█Т ╪к╪╡╪п█М┘В ┌й█Т ┘Д█М█Т ╪и┘Д╪з┌й┌Ж█М┘Ж ┌й█М ╪з█Б┘Е█М╪к ┌й╪к┘Ж█М █Б█Т╪Я",
    veryImportant: "╪з┘Ж╪к█Б╪з╪ж█М ╪з█Б┘Е",
    additionalSuggestions: "┌й█М╪з ╪в┘╛ ┌й┘И╪ж█М ╪з╪╢╪з┘Б█М ╪к╪м╪з┘И█М╪▓ █М╪з ╪и█Б╪к╪▒█М ╪┤█М╪ж╪▒ ┌й╪▒┘Ж╪з ┌Ж╪з█Б╪к█Т █Б█М┌║╪Я",
    shareSuggestions: "█М█Б╪з┌║ ╪з┘╛┘Ж█Т ╪о█М╪з┘Д╪з╪к ╪┤█М╪ж╪▒ ┌й╪▒█М┌║...",
    submitFeedback: "┘Б█М┌И╪и█М┌й ╪м┘Е╪╣ ┌й╪▒█М┌║",
    submitting: "╪м┘Е╪╣ ┌й╪▒ ╪▒█Б╪з █Б█Т...",
    reviewSuccessMessage: "╪в┘╛ ┌й█Т ┘В█М┘Е╪к█М ┘Б█М┌И╪и█М┌й ┌й╪з ╪┤┌й╪▒█М█Б! ╪в┘╛ ┌й█М ╪в╪▒╪з╪б █Б┘Е╪з╪▒█Т ╪│╪│┘╣┘Е ┌й┘И ╪и█Б╪к╪▒ ╪и┘Ж╪з┘Ж█Т ┘Е█М┌║ ┘Е╪п╪п ┌й╪▒█Т ┌п█М█Ф",
    reviewErrorMessage: "┘Б█М┌И╪и█М┌й ╪м┘Е╪╣ ┌й╪▒┘Ж█Т ┘Е█М┌║ ┘Ж╪з┌й╪з┘Е█М█Ф ╪и╪▒╪з█Б ┌й╪▒┘Е ╪п┘И╪и╪з╪▒█Б ┌й┘И╪┤╪┤ ┌й╪▒█М┌║█Ф",
    support247: "24/7 ╪│┘╛┘И╪▒┘╣",
    supportDesc: "╪м╪и ╪и┌╛█М ╪в┘╛ ┌й┘И ╪╢╪▒┘И╪▒╪к █Б┘И╪М █Б┘Е╪з╪▒█М ┘Е╪з█Б╪▒ ╪│┘╛┘И╪▒┘╣ ┘╣█М┘Е ╪│█Т ┘Е╪п╪п ╪н╪з╪╡┘Д ┌й╪▒█М┌║█Ф",
    earlyAccess: "╪м┘Д╪п█М ╪▒╪│╪з╪ж█М",
    earlyAccessDesc: "█Б┘Е╪з╪▒█Т ╪о╪╡┘И╪╡█М ╪и█М┘╣╪з ┘╛╪▒┘И┌п╪▒╪з┘Е ┘Е█М┌║ ╪┤╪з┘Е┘Д █Б┘И┌║ ╪з┘И╪▒ █Б┘Е╪з╪▒█М ╪м╪п█М╪п ╪к╪▒█М┘Ж ╪н┘Д ┌й┘И ┘╛█Б┘Д█Т ╪з╪│╪к╪╣┘Е╪з┘Д ┌й╪▒█М┌║█Ф",
    fastResponse: "╪м┘Д╪п█М ╪м┘И╪з╪и",
    fastResponseDesc: "█Б┘Е ╪в┘╛ ┌й█Т ╪│┘И╪з┘Д╪з╪к ┌й┘И 24 ┌п┌╛┘Ж┘╣┘И┌║ ┌й█Т ╪з┘Ж╪п╪▒ ╪к█М╪▓ ╪к╪▒█М┘Ж ╪м┘И╪з╪и╪з╪к ┘Б╪▒╪з█Б┘Е ┌й╪▒╪к█Т █Б█М┌║█Ф",
    noRating: "┌й┘И╪ж█М ╪п╪▒╪м█Б ╪и┘Ж╪п█М ┘Ж█Б█М┌║",
    somewhat: "┌й┌Ж┌╛ ╪н╪п ╪к┌й",
    moderately: "┘Е╪╣╪к╪п┘Д",
    very: "╪и█Б╪к",
    selectLanguage: "╪▓╪и╪з┘Ж ┘Е┘Ж╪к╪о╪и ┌й╪▒█М┌║"
  },
  gu: {
    contactUs: "рк╕ркВрккрк░рлНркХ ркХрк░рлЛ",
    getInTouch: "ркЕркорк╛рк░рк╛ рк╕рк╛ркерлЗ рк╕ркВрккрк░рлНркХ ркХрк░рлЛ",
    contactDescription: "ркЕркорлЗ ркдркорк╛рк░рлА рккрк╛рк╕рлЗркерлА рк╕рк╛ркВркнрк│рк╡рк╛ ркорк╛ркЯрлЗ ркЙркдрлНрк╕рлБркХ ркЫрлАркП! ЁЯТм ркдркорк╛рк░рлЛ ркЕркирлБркнрк╡ рк╢рлЗрк░ ркХрк░рлЛ ркЕркерк╡рк╛ ркХрлЛркИ рккрлНрк░рк╢рлНрки рккрлВркЫрлЛтАФркдркорк╛рк░рк╛ рккрлНрк░ркдрк┐рк╕рк╛ркж ркжрлНрк╡рк╛рк░рк╛ ркЕркорк╛рк░рлЛ рклрк╛рк░рлНркорк╛рк╕рлНркпрлБркЯрк┐ркХрк▓ рк╕рлНркЯрлЛрк░ ркЕркирлЗ ркЯрлНрк░рлЗркХрк┐ркВркЧ рк╕рк┐рк╕рлНркЯрко рк╕рлБркзрк╛рк░рк╡рк╛ркорк╛ркВ ркоркжркж ркорк│рк╢рлЗ ЁЯЪА",
    whyChooseUs: "ркЕркоркирлЗ ркХрлЗрко рккрк╕ркВркж ркХрк░рлЛ",
    getSupport: "ркоркжркж ркорлЗрк│рк╡рлЛ",
    shareFeedback: "рккрлНрк░ркдрк┐рк╕рк╛ркж рк╢рлЗрк░ ркХрк░рлЛ",
    name: "ркирк╛рко",
    email: "ркЗркорлЗрк▓",
    subject: "рк╡рк┐рк╖ркп",
    message: "рк╕ркВркжрлЗрк╢",
    sendMessage: "рк╕ркВркжрлЗрк╢ ркорлЛркХрк▓рлЛ",
    sending: "ркорлЛркХрк▓рк╛рк╡рк╡рк╛ркорк╛ркВ ркЖрк╡рлА рк░рк╣рлНркпрлБркВ ркЫрлЗ...",
    successMessage: "рк╕ркВркжрлЗрк╢ рк╕рклрк│ркдрк╛рккрлВрк░рлНрк╡ркХ ркорлЛркХрк▓рк╛ркпрлБркВ! ркЕркорлЗ ркЯрлВркВркХ рк╕ркоркпркорк╛ркВ ркдркорк╛рк░рлА рк╕рк╛ркерлЗ рк╕ркВрккрк░рлНркХ ркХрк░рлАрк╢рлБркВ.",
    errorMessage: "рк╕ркВркжрлЗрк╢ ркорлЛркХрк▓рк╡рк╛ркорк╛ркВ ркирк┐рк╖рлНрклрк│. ркХрлГрккрк╛ ркХрк░рлАркирлЗ ркерлЛркбрк╛ рк╕ркоркпрлЗ рклрк░рлА рккрлНрк░ркпрк╛рк╕ ркХрк░рлЛ.",
    currentChallenges: "рк╣рк╛рк▓ркирк╛ рккркбркХрк╛рк░рлЛ",
    supplyChainCommunication: "рк╕рккрлНрк▓рк╛ркп ркЪрлЗркЗрки ркХркорлНркпрлБркирк┐ркХрлЗрк╢рки",
    securityCompliance: "рк╕рлБрк░ркХрлНрк╖рк╛ ркЕркирлЗ ркирк┐ркпркорки",
    technologyFeatures: "ркЯрлЗркХркирлЛрк▓рлЛркЬрлА рклрлАркЪрк░рлНрк╕",
    additionalFeedback: "ркЖркЧрк│ркирлЛ рккрлНрк░ркдрк┐рк╕рк╛ркж",
    trackingDifficulty: "1. ркдркорк╛рк░рлБркВ рк╡рк░рлНркдркорк╛рки рк╕рк┐рк╕рлНркЯркоркорк╛ркВ ркИркирлНрк╡рлЗркирлНркЯрк░рлА ркЯрлНрк░рлЗркХ ркХрк░рк╡рлБркВ ркХрлЗркЯрк▓рлБркВ ркорлБрк╢рлНркХрлЗрк▓ ркЫрлЗ?",
    notDifficult: "ркорлБрк╢рлНркХрлЗрк▓ ркиркерлА",
    extremelyDifficult: "ркЦрлВркм ркорлБрк╢рлНркХрлЗрк▓",
    shortageImportance: "2. ркдркорк╛рк░рлБркВ рк╕ркВрк╕рлНркерк╛рки ркжрк╡рк╛ркУркирлА ркХркорлАркирлЗ ркХрлЗрк╡рлА рк░рлАркдрлЗ ркЯрлВркВркХрлА рк╢ркХрлЗ ркЫрлЗ?",
    notImportant: "ркорк╣ркдрлНрк╡ркирлБркВ ркиркерлА",
    criticallyImportant: "ркЦрлВркм ркорк╣ркдрлНрк╡рккрлВрк░рлНркг",
    verificationChallenge: "3. ркжрк╡рк╛ рк╕рк╛ркЪрлА ркЫрлЗ ркХрлЗ ркирк╣рлАркВ ркдрлЗ ркЪркХрк╛рк╕рк╡рлБркВ ркХрлЗркЯрк▓рлБркВ рккркбркХрк╛рк░ркЬркиркХ ркЫрлЗ?",
    notChallenging: "рккрлНрк░ркдрк┐рк╕рк╛ркж ркиркерлА",
    veryChallenging: "ркЦрлВркм рккркбркХрк╛рк░ркЬркиркХ",
    communicationFrequency: "1. ркдркоркирлЗ ркХрлЗркЯрк▓рк╛ркВ рк╡рк╛рк░ рк╕рккрлНрк▓рк╛ркп ркЪрлЗркЗрки рккрк╛рк░рлНркЯркирк░рлНрк╕ рк╕рк╛ркерлЗ рк╡рк╛ркдркЪрлАркд ркХрк░рк╡рк╛ркирлА ркЬрк░рлВрк░ рккркбрлЗ ркЫрлЗ?",
    rarely: "ркХрлЛркИ рк╡ркЦркд",
    veryFrequently: "ркЦрлВркм рк╡рк╛рк░",
    visibilityImportance: "2. ркдркорк╛рк░рлА рк╕рккрлНрк▓рк╛ркп ркЪрлЗркЗркиркорк╛ркВ ркорлМрк▓рк┐ркХ ркжрлЗркЦрк╛рк╡ ркХрлЗркЯрк▓рлЛ ркорк╣ркдрлНрк╡рккрлВрк░рлНркг ркЫрлЗ?",
    critical: "ркЦрлВркм ркорк╣ркдрлНрк╡рккрлВрк░рлНркг",
    counterfeitConcern: "1. ркдркорлЗ ркиркХрк▓рлА ркжрк╡рк╛ркУ рк╡рк┐рк╢рлЗ ркХрлЗркЯрк▓рк╛ркВркХ ркЪрк┐ркВркдрк┐ркд ркЫрлЛ?",
    notConcerned: "ркЪрк┐ркВркдрк┐ркд ркиркерлА",
    veryConcerned: "ркЦрлВркм ркЪрк┐ркВркдрк┐ркд",
    regulatoryWorkload: "2. ркдркорк╛рк░рк╛ ркЯрк┐рко ркорк╛ркЯрлЗ ркирк┐ркпркоркиркХрк╛рк░рлА ркЕркирлБрк░рлВрккркдрк╛ ркХрлЗркЯрк▓рлБркВ ркнрк╛рк░ ркЫрлЗ?",
    minorBurden: "ркиркорлНрк░ ркнрк╛рк░",
    majorBurden: "ркорлЛркЯрлЛ ркнрк╛рк░",
    localRetailerQuestion: "3. рк╢рлБркВ ркдркоркирлЗ рк▓рк╛ркЧрлЗ ркЫрлЗ ркХрлЗ рк╕рлНркерк╛ркирк┐ркХ рк░рк┐ркЯрлЗркЗрк▓рк░рлНрк╕ ркжрк╡рк╛ркУркирлЗ рк╕рлБрк░ркХрлНрк╖рк┐ркд рк░рлАркдрлЗ ркУрк│ркЦрлА рк╢ркХрлЗ ркЫрлЗ?",
    yes: "рк╣рк╛",
    no: "ркирк╣рлАркВ",
    explainAnswer: "ркХрлГрккрк╛ ркХрк░рлАркирлЗ ркдркорк╛рк░рлЛ ркЬрк╡рк╛ркм рк╡рк┐ркЧркдрлЗ рк╕ркоркЬрк╛рк╡рлЛ...",
    barcodeUseful: "1. ркмрк╛рк░ркХрлЛркб рк╕рлНркХрлЗркирк┐ркВркЧ рккрлНрк░рк╛ркорк╛ркгрк┐ркХркдрк╛ ркорк╛ркЯрлЗ ркХрлЗркЯрк▓рлБркВ ркЙрккркпрлЛркЧрлА ркЫрлЗ?",
    notUseful: "ркЙрккркпрлЛркЧрлА ркиркерлА",
    veryUseful: "ркЦрлВркм ркЙрккркпрлЛркЧрлА",
    alertsImportance: "2. ркЗркирлНрк╡рлЗркирлНркЯрк░рлА ркорлБркжрлНркжрк╛ркУ ркорк╛ркЯрлЗхоЮцЧ╢ркПрк▓рк░рлНркЯ ркХрлЗркЯрк▓рк╛ркВ ркорк╣ркдрлНрк╡рккрлВрк░рлНркг ркЫрлЗ?",
    messagingValue: "3. рккрк╛рк░рлНркЯркирк░рлНрк╕ рк╡ркЪрлНркЪрлЗ рк╕рлБрк░ркХрлНрк╖рк┐ркд рк╕ркВркжрлЗрк╢рк╛рк╡рлНркпрк╡рк╣рк╛рк░ ркХрлЗркЯрк▓рлБркВ ркХрк┐ркВркоркдрлА ркЫрлЗ?",
    notValuable: "ркХрк┐ркВркоркд ркиркерлА",
    extremelyValuable: "ркЦрлВркм ркХрк┐ркВркоркдрлА",
    reportsNecessity: "4. ркдркорк╛рк░рлА ркХрк╛ркоркЧрлАрк░рлА ркорк╛ркЯрлЗ ркХрк╕рлНркЯрко рк░рк┐рккрлЛрк░рлНркЯ ркХрлЗркЯрк▓рк╛ ркЬрк░рлВрк░рлА ркЫрлЗ?",
    notNecessary: "ркЖрк╡рк╢рлНркпркХ ркиркерлА",
    essential: "ркЖрк╡рк╢рлНркпркХ",
    blockchainImportance: "5. ркдркорк╛рк░рлА рк╕ркВрк╕рлНркерк╛ркирлЗ ркжрк╡рк╛ ркЪркХрк╛рк╕рк╡рк╛ ркорк╛ркЯрлЗ ркмрлНрк▓рлЛркХркЪрлЗрки ркХрлЗркЯрк▓рлБ ркорк╣ркдрлНрк╡рккрлВрк░рлНркг ркЫрлЗ?",
    veryImportant: "ркЦрлВркм ркорк╣ркдрлНрк╡рккрлВрк░рлНркг",
    additionalSuggestions: "рк╢рлБркВ ркдркорлЗ ркХрлЛркИ рк╡ркзрлБ рк╕рлВркЪркирлЛ ркЕркерк╡рк╛ рк╕рлБркзрк╛рк░рк╛ркУ рк╢рлЗрк░ ркХрк░рк╡рк╛ ркорк╛ркВркЧркдрк╛ ркЫрлЛ?",
    shareSuggestions: "ркЕрк╣рлАркВ ркдркорк╛рк░рк╛ рк╡рк┐ркЪрк╛рк░рлЛ рк╢рлЗрк░ ркХрк░рлЛ...",
    submitFeedback: "рккрлНрк░ркдрк┐рк╕рк╛ркж ркорлЛркХрк▓рлЛ",
    submitting: "ркорлЛркХрк▓рк╡рк╛ркорк╛ркВ ркЖрк╡рлА рк░рк╣рлНркпрлБркВ ркЫрлЗ...",
    reviewSuccessMessage: "ркдркорк╛рк░рк╛ ркорлВрк▓рлНркпрк╡рк╛рки рккрлНрк░ркдрк┐рк╕рк╛ркж ркорк╛ркЯрлЗ ркЖркнрк╛рк░! ркдркорк╛рк░рк╛ рк╡рк┐ркЪрк╛рк░рлЛркерлА ркЕркорк╛рк░рлЛ рк╕рк┐рк╕рлНркЯрко рк╕рлБркзрк░рк╢рлЗ.",
    reviewErrorMessage: "рккрлНрк░ркдрк┐рк╕рк╛ркж ркорлЛркХрк▓рк╡рк╛ркорк╛ркВ ркирк┐рк╖рлНрклрк│. ркХрлГрккрк╛ ркХрк░рлАркирлЗ рклрк░рлА рккрлНрк░ркпрк╛рк╕ ркХрк░рлЛ.",
    support247: "24/7 ркЖркзрк╛рк░",
    supportDesc: "ркЬрлНркпрк╛рк░рлЗ рккркг ркдркорк╛рк░рлА ркЬрк░рлВрк░ рккркбрлЗ, ркЕркорк╛рк░рк╛ рк╕рк╣рк╛ркпркХ ркЯрлАркоркерлА ркоркжркж ркорлЗрк│рк╡рлЛ.",
    earlyAccess: "рккрлНрк░рк╛рк░ркВркнрк┐ркХ рккрлНрк░рк╡рлЗрк╢",
    earlyAccessDesc: "ркЕркорк╛рк░рк╛ рк╡рк┐рк╢рк┐рк╖рлНркЯ ркмрлЗркЯрк╛ ркХрк╛рк░рлНркпркХрлНрк░ркоркорк╛ркВ ркЬрлЛркбрк╛ркУ ркЕркирлЗ рккрлНрк░ркерко рк╡ркЦркд ркЕркорк╛рк░рк╛ ркирк╡рлАркиркдрко ркЙркХрлЗрк▓ркирлЛ ркЕркирлБркнрк╡ ркХрк░рлЛ.",
    fastResponse: "ркЭркбрккрлА рккрлНрк░ркдрк┐рк╕рк╛ркж",
    fastResponseDesc: "ркЕркорлЗ ркдркорк╛рк░рк╛ рккрлНрк░рк╢рлНркирлЛркирлЗ 24 ркХрк▓рк╛ркХркорк╛ркВ ркЭркбрккркерлА ркЬрк╡рк╛ркм ркЖрккрлАрк╢рлБркВ.",
    noRating: "ркХрлЛркИ рк░рлЗркЯрк┐ркВркЧ ркиркерлА",
    somewhat: "ркХрк╛ркВркЯрк╛рк░рлНрке",
    moderately: "ркоркзрлНркпрко",
    very: "ркЦрлВркм",
    selectLanguage: "ркнрк╛рк╖рк╛ рккрк╕ркВркж ркХрк░рлЛ"
  },  
  ml: {
    contactUs: "р┤Юр┤Щр╡Нр┤Щр┤│р╡Бр┤ор┤╛р┤пр┤┐ р┤мр┤ир╡Нр┤зр┤кр╡Нр┤кр╡Жр┤Яр╡Бр┤Х",
    getInTouch: "р┤Юр┤Щр╡Нр┤Щр┤│р╡Бр┤ор┤╛р┤пр┤┐ р┤мр┤ир╡Нр┤зр┤кр╡Нр┤кр╡Жр┤Яр╡Бр┤Х",
    contactDescription: "р┤ир┤ор╡Бр┤Хр╡Нр┤Хр╡Н р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤Ер┤ир╡Бр┤нр┤╡р┤В р┤Хр╡Зр┤Яр╡Нр┤Яр┤╛р╡╜ р┤╕р┤ир╡Нр┤др╡Лр┤╖р┤В! ЁЯТм р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤Ер┤ир╡Бр┤нр┤╡р┤В р┤кр┤Щр╡Нр┤Хр╡Бр┤╡р╡Жр┤пр╡Нр┤Хр╡Нр┤Хр╡Бр┤Х р┤Ер┤▓р╡Нр┤▓р╡Жр┤Щр╡Нр┤Хр┤┐р╡╜ р┤Ър╡Лр┤жр╡Нр┤пр┤В р┤Ър╡Лр┤жр┤┐р┤Хр╡Нр┤Хр╡Бр┤ХтАФр┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤лр╡Ар┤бр╡Нр┤мр┤╛р┤Хр╡Нр┤Хр╡Н р┤Юр┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤лр┤╛р╡╝р┤ор┤╕р╡Нр┤пр╡Вр┤Яр╡Нр┤Яр┤┐р┤Хр╡Нр┤Хр╡╜ р┤Зр╡╗р┤╡р╡Жр┤ир╡Нр┤▒р┤▒р┤┐ рооро▒рпНро▒рпБроорпН р┤Яр╡Нр┤░р┤╛р┤Хр╡Нр┤Хр┤┐р┤Щр╡Нр┤Щр╡Н р┤╕р┤┐р┤╕р╡Нр┤▒р╡Нр┤▒р┤В р┤ор╡Жр┤Ър╡Нр┤Ър┤кр╡Нр┤кр╡Жр┤Яр╡Бр┤др╡Нр┤др┤╛р╡╗ р┤╕р┤╣р┤╛р┤пр┤┐р┤Хр╡Нр┤Хр╡Бр┤В ЁЯЪА",
    whyChooseUs: "р┤ир┤ор╡Нр┤ор╡Ж р┤Ор┤ир╡Нр┤др╡Н р┤Хр┤╛р┤░р┤гр┤В р┤др┤┐р┤░р┤Юр╡Нр┤Юр╡Жр┤Яр╡Бр┤др╡Нр┤др╡Н?",
    getSupport: "р┤╕р┤╣р┤╛р┤пр┤В р┤ир╡Зр┤Яр╡Бр┤Х",
    shareFeedback: "р┤лр╡Ар┤бр╡Нр┤мр┤╛р┤Хр╡Нр┤Хр╡Н р┤кр┤Щр╡Нр┤Хр╡Бр┤╡р╡Жр┤Хр╡Нр┤Хр╡Бр┤Х",
    name: "р┤кр╡Зр┤░р╡Н",
    email: "р┤Зр┤ор╡Жр┤пр┤┐р╡╜",
    subject: "р┤╡р┤┐р┤╖р┤пр┤В",
    message: "р┤╕р┤ир╡Нр┤жр╡Зр┤╢р┤В",
    sendMessage: "р┤╕р┤ир╡Нр┤жр╡Зр┤╢р┤В р┤Ер┤пр┤пр╡Нр┤Хр╡Нр┤Хр╡Бр┤Х",
    sending: "р┤Ер┤пр┤Хр╡Нр┤Хр╡Бр┤ир╡Нр┤ир╡Б...",
    successMessage: "р┤╕р┤ир╡Нр┤жр╡Зр┤╢р┤В р┤╡р┤┐р┤Ьр┤пр┤Хр┤░р┤ор┤╛р┤пр┤┐ р┤Ер┤пр┤Ър╡Нр┤Ър┤┐р┤░р┤┐р┤Хр╡Нр┤Хр╡Бр┤ир╡Нр┤ир╡Б! р┤Юр┤Щр╡Нр┤Щр╡╛ р┤Йр┤Яр╡╗ р┤ир┤┐р┤Щр╡Нр┤Щр╡╛р┤Хр╡Нр┤Хр╡Н р┤др┤┐р┤░р┤┐р┤Ър╡Нр┤Ър┤Яр┤┐ р┤ир╡╜р┤Хр╡Бр┤В.",
    errorMessage: "р┤╕р┤ир╡Нр┤жр╡Зр┤╢р┤В р┤Ер┤пр┤Хр╡Нр┤Хр╡Бр┤ир╡Нр┤ир┤др┤┐р╡╜ р┤кр┤░р┤╛р┤Ьр┤пр┤кр╡Нр┤кр╡Жр┤Яр╡Нр┤Яр╡Б. р┤жр┤пр┤╡р┤╛р┤пр┤┐ р┤кр┤┐р┤ир╡Нр┤ир╡Ар┤Яр╡Н р┤╡р╡Ар┤гр╡Нр┤Яр╡Бр┤В р┤╢р╡Нр┤░р┤ор┤┐р┤Хр╡Нр┤Хр╡Бр┤Х.",
    currentChallenges: "р┤ир┤┐р┤▓р┤╡р┤┐р┤▓р╡Ж р┤╡р╡Жр┤▓р╡Нр┤▓р╡Бр┤╡р┤┐р┤│р┤┐р┤Хр╡╛",
    supplyChainCommunication: "р┤кр╡Кр┤др╡Б р┤╡р┤┐р┤др┤░р┤г р┤╢р╡Гр┤Вр┤Цр┤▓",
    securityCompliance: "р┤╕р╡Бр┤░р┤Хр╡Нр┤╖р┤пр╡Бр┤В р┤кр┤╛р┤▓р┤ир┤╡р╡Бр┤В",
    technologyFeatures: "р┤╕р┤╛р┤Щр╡Нр┤Хр╡Зр┤др┤┐р┤Х р┤Чр╡Бр┤гр┤Щр╡Нр┤Щр╡╛",
    additionalFeedback: "р┤Хр╡Вр┤Яр╡Бр┤др╡╜ р┤лр╡Ар┤бр╡Нр┤мр┤╛р┤Хр╡Нр┤Хр╡Н",
    trackingDifficulty: "1. р┤ир┤┐р┤▓р┤╡р┤┐р┤▓р╡Бр┤│р╡Нр┤│ р┤╕р┤┐р┤╕р╡Нр┤▒р╡Нр┤▒р┤др╡Нр┤др┤┐р╡╜ р┤Зр╡╗р┤╡р╡Жр┤ир╡Нр┤▒р┤▒р┤┐ р┤Яр╡Нр┤░р┤╛р┤Хр╡Нр┤Хр╡Н р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤ир╡Нр┤ир┤др╡Н р┤Ор┤др╡Нр┤░ р┤жр╡Б:р┤Цр┤Хр┤░р┤ор┤╛р┤гр╡Н?",
    notDifficult: "р┤жр╡Б:р┤Цр┤Хр┤░р┤В р┤Ер┤▓р╡Нр┤▓",
    extremelyDifficult: "р┤╡р┤│р┤░р╡Ж р┤жр╡Б:р┤Цр┤Хр┤░р┤ор┤╛р┤гр╡Н",
    shortageImportance: "2. р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤╕р╡Нр┤ер┤╛р┤кр┤ир┤др╡Нр┤др┤┐р┤ир╡Н р┤ор┤░р╡Бр┤ир╡Нр┤ир┤┐р┤ир╡Нр┤▒р╡Ж р┤Хр╡Нр┤╖р┤╛р┤ор┤В р┤Ор┤др╡Нр┤░ р┤кр╡Нр┤░р┤зр┤╛р┤ир┤ор┤╛р┤гр╡Н?",
    notImportant: "р┤кр╡Нр┤░р┤зр┤╛р┤ир┤ор┤▓р╡Нр┤▓",
    criticallyImportant: "р┤Ер┤др╡Нр┤пр┤ир╡Нр┤др┤В р┤кр╡Нр┤░р┤зр┤╛р┤ир┤ор┤╛р┤гр╡Н",
    verificationChallenge: "3. р┤ор┤░р╡Бр┤ир╡Нр┤ир┤┐р┤ир╡Нр┤▒р╡Ж р┤Ер┤╕р╡╜ р┤Ер┤╡р┤╕р╡Нр┤е р┤кр┤░р┤┐р┤╢р╡Лр┤зр┤┐р┤Хр╡Нр┤Хр╡Бр┤ир╡Нр┤ир┤др╡Н р┤Ор┤др╡Нр┤░ р┤кр╡Нр┤░р┤пр┤╛р┤╕р┤ор┤╛р┤гр╡Н?",
    notChallenging: "р┤кр╡Нр┤░р┤пр┤╛р┤╕р┤В р┤Зр┤▓р╡Нр┤▓",
    veryChallenging: "р┤╡р┤│р┤░р╡Ж р┤кр╡Нр┤░р┤пр┤╛р┤╕р┤ор┤╛р┤гр╡Н",
    communicationFrequency: "1. р┤ир┤┐р┤Щр╡Нр┤Щр╡╛ р┤Ор┤др╡Нр┤░ р┤╕р┤ор┤пр┤В р┤╡р╡Нр┤пр┤╛р┤кр┤Хр┤ор┤╛р┤п р┤╡р┤┐р┤др┤░р┤гр┤В р┤кр┤Щр╡Нр┤Хр┤╛р┤│р┤┐р┤Хр┤│р╡Бр┤ор┤╛р┤пр┤┐ р┤мр┤ир╡Нр┤зр┤кр╡Нр┤кр╡Жр┤Яр┤гр┤В?",
    rarely: "р┤жр╡Ир┤ир┤Вр┤жр┤┐р┤ир┤ор┤╛р┤пр┤┐",
    veryFrequently: "р┤Хр╡Вр┤Яр╡Бр┤др╡╜ р┤кр╡Нр┤░р┤╛р┤кр╡Нр┤др┤ор┤╛р┤пр┤┐",
    visibilityImportance: "2. р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤╡р┤┐р┤др┤░р┤г р┤╢р╡Гр┤Вр┤Цр┤▓р┤пр┤┐р╡╜ р┤╕р┤ор┤пр╡Лр┤Ър┤┐р┤др┤ор┤╛р┤п р┤жр╡Гр┤╢р╡Нр┤пр┤д р┤Ор┤др╡Нр┤░ р┤кр╡Нр┤░р┤зр┤╛р┤ир┤ор┤╛р┤гр╡Н?",
    critical: "р┤ор┤┐р┤Хр┤Ър╡Нр┤Ъ р┤кр╡Нр┤░р┤╛р┤зр┤╛р┤ир╡Нр┤пр┤В",
    counterfeitConcern: "1. р┤ир┤┐р┤Щр╡Нр┤Щр╡╛р┤Хр╡Нр┤Хр╡Н р┤ир┤Хр╡╜ р┤ор┤░р╡Бр┤ир╡Нр┤ир╡Бр┤Хр┤│р╡Ж р┤Хр╡Бр┤▒р┤┐р┤Ър╡Нр┤Ър╡Н р┤Ор┤др╡Нр┤░ р┤Жр┤╢р┤Щр╡Нр┤Хр┤Хр┤│р╡Бр┤гр╡Нр┤Яр╡Н?",
    notConcerned: "р┤Ър┤┐р┤ир╡Нр┤др┤пр┤┐р┤▓р╡Нр┤▓",
    veryConcerned: "р┤╡р┤│р┤░р╡Ж р┤Жр┤╢р┤Щр╡Нр┤Хр┤кр╡Жр┤Яр╡Бр┤ир╡Нр┤ир╡Б",
    regulatoryWorkload: "2. р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤Яр╡Ар┤ор┤┐р┤ир╡Н р┤ир┤┐р┤пр┤ор┤╛р┤ир╡Бр┤╕р╡Гр┤др┤ор┤╛р┤п р┤Ьр╡Лр┤▓р┤┐ р┤Ор┤др╡Нр┤░ р┤Хр┤Яр┤┐р┤пр╡Бр┤│р╡Нр┤│р┤др┤╛р┤гр╡Н?",
    minorBurden: "р┤Ър╡Жр┤▒р┤┐р┤п р┤нр┤╛р┤░",
    majorBurden: "р┤кр╡Нр┤░р┤зр┤╛р┤и р┤нр┤╛р┤░",
    localRetailerQuestion: "3. р┤ир┤┐р┤Щр╡Нр┤Щр╡╛р┤Хр╡Нр┤Хр╡Н р┤др╡Лр┤ир╡Нр┤ир╡Бр┤ор╡Л? р┤кр╡Нр┤░р┤╛р┤жр╡Зр┤╢р┤┐р┤Х р┤▒р╡Ар┤Яр╡Нр┤Яр╡Жр┤пр╡Нр┤▓р┤▒р╡Бр┤Хр╡╛ р┤ор┤░р╡Бр┤ир╡Нр┤ир╡Бр┤Хр╡╛ р┤╕р╡Бр┤░р┤Хр╡Нр┤╖р┤┐р┤др┤ор┤╛р┤пр┤┐ р┤╕р┤╛р┤зр╡Вр┤Хр┤░р┤┐р┤Хр╡Нр┤Хр┤╛р┤ор╡Л?",
    yes: "р┤Ер┤др╡Ж",
    no: "р┤Зр┤▓р╡Нр┤▓",
    explainAnswer: "р┤жр┤пр┤╡р┤╛р┤пр┤┐ р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤ор┤▒р╡Бр┤кр┤Яр┤┐ р┤╡р┤┐р┤╢р┤жр╡Ар┤Хр┤░р┤┐р┤Хр╡Нр┤Хр╡Бр┤Х...",
    barcodeUseful: "1. р┤╕р╡Нр┤ер┤┐р┤░р╡Ар┤Хр┤░р┤гр┤др╡Нр┤др┤┐р┤ир╡Н р┤мр┤╛р╡╝р┤Хр╡Лр┤бр╡Н р┤╕р╡Нр┤Хр┤╛р┤ир┤┐р┤Вр┤Чр╡Н р┤Ор┤др╡Нр┤░ р┤Йр┤кр┤Хр┤╛р┤░р┤кр╡Нр┤░р┤жр┤ор┤╛р┤гр╡Н?",
    notUseful: "р┤Йр┤кр┤Хр┤╛р┤░р┤кр╡Нр┤░р┤жр┤ор┤▓р╡Нр┤▓",
    veryUseful: "р┤╡р┤│р┤░р╡Ж р┤Йр┤кр┤Хр┤╛р┤░р┤кр╡Нр┤░р┤жр┤ор┤╛р┤гр╡Н",
    alertsImportance: "2. р┤Зр╡╗р┤╡р╡Жр┤ир╡Нр┤▒р┤▒р┤┐ р┤кр╡Нр┤░р┤╢р╡Нр┤ир┤Щр╡Нр┤Щр╡╛ р┤кр┤░р┤┐р┤╣р┤░р┤┐р┤Хр╡Нр┤Хр┤╛р╡╗ р┤╕р┤ор┤пр┤мр┤ир╡Нр┤зр┤ор┤╛р┤п р┤Ер┤▓р╡Зр╡╝р┤Яр╡Нр┤Яр╡Н р┤Ор┤др╡Нр┤░ р┤кр╡Нр┤░р┤зр┤╛р┤ир┤ор┤╛р┤гр╡Н?",
    messagingValue: "3. р┤кр┤Щр╡Нр┤Хр┤╛р┤│р┤┐р┤Хр╡╛р┤Хр╡Нр┤Хр╡Н р┤Зр┤Яр┤пр┤┐р┤▓р╡Ж р┤╕р╡Бр┤░р┤Хр╡Нр┤╖р┤┐р┤д р┤╕р┤ир╡Нр┤жр╡Зр┤╢р┤Чр┤др┤┐ р┤Ор┤др╡Нр┤░ р┤╡р┤┐р┤▓р┤ор┤др┤┐р┤Хр╡Нр┤Хр╡Бр┤ир╡Нр┤ир┤др┤╛р┤гр╡Н?",
    notValuable: "р┤╡р┤┐р┤▓р┤пр┤┐р┤▓р╡Нр┤▓",
    extremelyValuable: "р┤╡р┤│р┤░р╡Ж р┤╡р┤┐р┤▓р┤ор┤др┤┐р┤Хр╡Нр┤Хр╡Бр┤ир╡Нр┤ир┤др┤╛р┤гр╡Н",
    reportsNecessity: "4. р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤кр╡Нр┤░р┤╡р╡╝р┤др╡Нр┤др┤ир┤Щр╡Нр┤Щр╡╛р┤Хр╡Нр┤Хр╡Н р┤Хр┤╕р╡Нр┤▒р╡Нр┤▒р┤В р┤▒р┤┐р┤кр╡Нр┤кр╡Лр╡╝р┤Яр╡Нр┤Яр╡Бр┤Хр╡╛ р┤Ор┤др╡Нр┤░ р┤Жр┤╡р┤╢р╡Нр┤пр┤ор┤╛р┤гр╡Н?",
    notNecessary: "р┤Жр┤╡р┤╢р╡Нр┤пр┤ор┤╛р┤гр╡Н",
    essential: "р┤Жр┤╡р┤╢р╡Нр┤пр┤ор┤╛р┤гр╡Н",
    blockchainImportance: "5. р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤╕р╡Нр┤ер┤╛р┤кр┤ир┤др╡Нр┤др┤┐р┤ир╡Н р┤╕р┤╛р┤ир╡Нр┤жр╡Нр┤░р┤др┤пр╡Нр┤Хр╡Нр┤Хр╡Бр┤│р╡Нр┤│ р┤мр╡Нр┤▓р╡Лр┤Хр╡Нр┤Хр┤Ър╡Жр┤пр┤┐р┤ир┤┐р┤ир╡Нр┤▒р╡Ж р┤кр╡Нр┤░р┤╛р┤зр┤╛р┤ир╡Нр┤пр┤В р┤Ор┤др╡Нр┤░?",
    veryImportant: "р┤ор┤┐р┤Хр┤Ър╡Нр┤Ъ р┤кр╡Нр┤░р┤╛р┤зр┤╛р┤ир╡Нр┤пр┤В",
    additionalSuggestions: "р┤ор┤▒р╡Нр┤▒р╡Бр┤│р╡Нр┤│р┤др┤╛р┤пр╡Бр┤│р╡Нр┤│ р┤ир┤┐р╡╝р┤жр╡Нр┤жр╡Зр┤╢р┤Щр╡Нр┤Щр╡╛",
    shareSuggestions: "р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤Ер┤нр┤┐р┤кр╡Нр┤░р┤╛р┤пр┤Щр╡Нр┤Щр╡╛ р┤Зр┤╡р┤┐р┤Яр╡Ж р┤кр┤Щр╡Нр┤Хр╡Бр┤╡р╡Жр┤Хр╡Нр┤Хр╡Бр┤Х...",
    submitFeedback: "р┤лр╡Ар┤бр╡Нр┤мр┤╛р┤Хр╡Нр┤Хр╡Н р┤╕р┤ор╡╝р┤кр╡Нр┤кр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х",
    submitting: "р┤╕р┤ор╡╝р┤кр╡Нр┤кр┤┐р┤Хр╡Нр┤Хр╡Бр┤Хр┤пр┤╛р┤гр╡Н...",
    reviewSuccessMessage: "р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤╡р┤┐р┤▓р┤пр╡Зр┤▒р┤┐р┤п р┤лр╡Ар┤бр╡Нр┤мр┤╛р┤Хр╡Нр┤Хр┤┐р┤ир┤╛р┤пр┤┐ р┤ир┤ир╡Нр┤жр┤┐! р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤Ер┤нр┤┐р┤кр╡Нр┤░р┤╛р┤пр┤Щр╡Нр┤Щр╡╛ р┤Юр┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤╕р┤┐р┤╕р╡Нр┤▒р╡Нр┤▒р┤В р┤ор╡Жр┤Ър╡Нр┤Ър┤кр╡Нр┤кр╡Жр┤Яр╡Бр┤др╡Нр┤др┤╛р╡╗ р┤╕р┤╣р┤╛р┤пр┤┐р┤Хр╡Нр┤Хр╡Бр┤В.",
    reviewErrorMessage: "р┤лр╡Ар┤бр╡Нр┤мр┤╛р┤Хр╡Нр┤Хр╡Н р┤╕р┤ор╡╝р┤кр╡Нр┤кр┤┐р┤Хр╡Нр┤Хр┤╛р╡╗ р┤кр┤░р┤╛р┤Ьр┤пр┤кр╡Нр┤кр╡Жр┤Яр╡Нр┤Яр╡Б. р┤жр┤пр┤╡р┤╛р┤пр┤┐ р┤кр┤┐р┤ир╡Нр┤ир╡Ар┤Яр╡Н р┤╡р╡Ар┤гр╡Нр┤Яр╡Бр┤В р┤╢р╡Нр┤░р┤ор┤┐р┤Хр╡Нр┤Хр╡Бр┤Х.",
    support247: "24/7 р┤кр┤┐р┤ир╡Нр┤др╡Бр┤г",
    supportDesc: "р┤Ор┤кр╡Нр┤кр╡Лр╡╛ р┤╡р╡Зр┤гр┤ор╡Жр┤Щр╡Нр┤Хр┤┐р┤▓р╡Бр┤В р┤Юр┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤╕р┤╣р┤╛р┤пр┤Х р┤Яр╡Ар┤В р┤ир┤┐р┤ир╡Нр┤ир╡Ж р┤╕р┤╣р┤╛р┤пр┤┐р┤Хр╡Нр┤Хр╡Бр┤В.",
    earlyAccess: "р┤Жр┤жр╡Нр┤п р┤кр╡Нр┤░р┤╡р╡Зр┤╢р┤ир┤В",
    earlyAccessDesc: "р┤Юр┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤кр╡Нр┤░р┤др╡Нр┤пр╡Зр┤Х р┤мр╡Ар┤▒р╡Нр┤▒р┤╛ р┤кр╡Нр┤░р╡Лр┤Чр╡Нр┤░р┤╛р┤ор┤┐р┤▓р╡Зр┤Хр╡Нр┤Хр╡Н р┤Ър╡Зр┤░р╡Бр┤Х, р┤кр╡Бр┤др┤┐р┤п р┤кр┤░р┤┐р┤╣р┤╛р┤░р┤Щр╡Нр┤Щр╡╛ р┤Жр┤жр╡Нр┤пр┤В р┤Йр┤кр┤пр╡Лр┤Чр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х.",
    fastResponse: "р┤╡р╡Зр┤Чр┤др┤пр┤┐р╡╜ р┤кр╡Нр┤░р┤др┤┐р┤Хр┤░р┤гр┤В",
    fastResponseDesc: "р┤Юр┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤Яр╡Ар┤ор┤┐р┤ир╡Нр┤▒р╡Ж р┤ор┤▒р╡Бр┤кр┤Яр┤┐р┤Хр╡╛ 24 р┤ор┤гр┤┐р┤Хр╡Нр┤Хр╡Вр┤▒р┤┐р┤ир╡Бр┤│р╡Нр┤│р┤┐р╡╜ р┤╡р╡Зр┤Чр┤др╡Нр┤др┤┐р╡╜ р┤▓р┤нр┤┐р┤Хр╡Нр┤Хр╡Бр┤В.",
    noRating: "р┤Зр┤ир┤┐р┤пр╡Бр┤В р┤╡р┤┐р┤▓р┤пр┤┐р┤░р╡Бр┤др╡Нр┤др╡╜ р┤Зр┤▓р╡Нр┤▓",
    somewhat: "р┤Тр┤ир╡Нр┤ир╡Бр┤Хр╡Вр┤Яр╡Ж",
    moderately: "р┤ор┤┐р┤др┤ор┤╛р┤п",
    very: "р┤╡р┤│р┤░р╡Ж",
    selectLanguage: "р┤нр┤╛р┤╖ р┤др┤┐р┤░р┤Юр╡Нр┤Юр╡Жр┤Яр╡Бр┤Хр╡Нр┤Хр╡Бр┤Х"
  },
  kn: {
    contactUs: "р▓╕р▓Вр▓кр▓░р│Нр▓Хр▓┐р▓╕р▓┐",
    getInTouch: "р▓ир▓ор│Нр▓ор│Кр▓Вр▓жр▓┐р▓Чр│Ж р▓╕р▓Вр▓кр▓░р│Нр▓Хр▓┐р▓╕р▓┐",
    contactDescription: "р▓ир▓╛р▓╡р│Б р▓ир▓┐р▓ор│Нр▓ор▓┐р▓Вр▓ж р▓Хр│Зр▓│р▓▓р│Б р▓Зр▓Ър│Нр▓Ыр▓┐р▓╕р│Бр▓др│Нр▓др│Зр▓╡р│Ж! ЁЯТм р▓ир▓┐р▓ор│Нр▓о р▓Ер▓ир│Бр▓нр▓╡р▓╡р▓ир│Нр▓ир│Б р▓╣р▓Вр▓Ър▓┐р▓Хр│Кр▓│р│Нр▓│р▓┐ р▓Ер▓ер▓╡р▓╛ р▓пр▓╛р▓╡р│Бр▓жр│З р▓кр│Нр▓░р▓╢р│Нр▓ир│Жр▓пр▓ир│Нр▓ир│Б р▓Хр│Зр▓│р▓┐тАФр▓ир▓┐р▓ор│Нр▓о р▓кр│Нр▓░р▓др▓┐р▓Хр│Нр▓░р▓┐р▓пр│Ж р▓ир▓ор│Нр▓о р▓Фр▓╖р▓з р▓Йр▓жр│Нр▓пр▓о р▓ор▓др│Нр▓др│Б р▓Яр│Нр▓░р│Нр▓пр▓╛р▓Хр▓┐р▓Вр▓Чр│Н р▓╕р▓┐р▓╕р│Нр▓Яр▓В р▓Ер▓ир│Нр▓ир│Б р▓Йр▓др│Нр▓др▓ор▓Чр│Кр▓│р▓┐р▓╕р▓▓р│Б р▓╕р▓╣р▓╛р▓п р▓ор▓╛р▓бр│Бр▓др│Нр▓др▓жр│Ж ЁЯЪА",
    whyChooseUs: "р▓ир▓╛р▓╡р│Зр▓ир│Б р▓Жр▓пр│Нр▓Хр│Ж р▓ор▓╛р▓бр▓мр│Зр▓Хр│Б",
    getSupport: "р▓╕р▓╣р▓╛р▓п р▓кр▓бр│Жр▓пр▓┐р▓░р▓┐",
    shareFeedback: "р▓кр│Нр▓░рждрж┐ржХр│Нр▓░р▓┐р▓пр│Ж р▓╣р▓Вр▓Ър▓┐р▓Хр│Кр▓│р│Нр▓│р▓┐",
    name: "р▓╣р│Жр▓╕р▓░р│Б",
    email: "р▓Зр▓ор│Зр▓▓р│Н",
    subject: "р▓╡р▓┐р▓╖р▓п",
    message: "р▓╕р▓Вр▓жр│Зр▓╢",
    sendMessage: "р▓╕р▓Вр▓жр│Зр▓╢ р▓Хр▓│р│Бр▓╣р▓┐р▓╕р▓┐",
    sending: "р▓Хр▓│р│Бр▓╣р▓┐р▓╕р▓▓р▓╛р▓Чр│Бр▓др│Нр▓др▓┐р▓жр│Ж...",
    successMessage: "р▓╕р▓Вр▓жр│Зр▓╢р▓╡р▓ир│Нр▓ир│Б р▓пр▓╢р▓╕р│Нр▓╡р▓┐р▓пр▓╛р▓Чр▓┐ р▓Хр▓│р│Бр▓╣р▓┐р▓╕р▓▓р▓╛р▓Чр▓┐р▓жр│Ж! р▓ир▓╛р▓╡р│Б р▓╢р│Ар▓Шр│Нр▓░р▓жр▓▓р│Нр▓▓р│З р▓ир▓┐р▓ор│Нр▓ор│Кр▓Вр▓жр▓┐р▓Чр│Ж р▓╕р▓Вр▓кр▓░р│Нр▓Хр▓┐р▓╕р│Лр▓г.",
    errorMessage: "р▓╕р▓Вр▓жр│Зр▓╢ р▓Хр▓│р│Бр▓╣р▓┐р▓╕р▓▓р│Б р▓╡р▓┐р▓лр▓▓р▓╡р▓╛р▓Чр▓┐р▓жр│Ж. р▓жр▓пр▓╡р▓┐р▓Яр│Нр▓Яр│Б р▓ир▓Вр▓др▓░ р▓ор▓др│Нр▓др│Ж р▓кр│Нр▓░р▓пр▓др│Нр▓ир▓┐р▓╕р▓┐.",
    currentChallenges: "р▓кр│Нр▓░р▓╕р│Нр▓др│Бр▓д р▓╕р▓╡р▓╛р▓▓р│Бр▓Чр▓│р│Б",
    supplyChainCommunication: "р▓кр│Вр▓░р│Ир▓Хр│Ж р▓╕р▓░р▓кр▓│р▓┐р▓п р▓╕р▓Вр▓╡р▓╣р▓и",
    securityCompliance: "р▓нр▓жр│Нр▓░р▓др│Ж р▓ор▓др│Нр▓др│Б р▓Ер▓ир│Бр▓╕р▓░р▓гр│Ж",
    technologyFeatures: "р▓др▓Вр▓др│Нр▓░р▓Ьр│Нр▓Юр▓╛р▓и р▓╡р│Ир▓╢р▓┐р▓╖р│Нр▓Яр│Нр▓пр▓Чр▓│р│Б",
    additionalFeedback: "р▓Ер▓жр▓ир│Нр▓пр▓╡р▓╛р▓ж р▓кр│Нр▓░р▓др▓┐р▓Хр│Нр▓░р▓┐р▓пр│Ж",
    trackingDifficulty: "1. р▓ир▓┐р▓ор│Нр▓о р▓кр│Нр▓░р▓╕р│Нр▓др│Бр▓д р▓╡р│Нр▓пр▓╡р▓╕р│Нр▓ер│Жр▓пр▓▓р│Нр▓▓р▓┐ р▓Зр▓ир│Нр▓╡р│Жр▓Вр▓Яр▓░р▓┐ р▓Яр│Нр▓░р│Нр▓пр▓╛р▓Хр│Н р▓ор▓╛р▓бр│Бр▓╡р│Бр▓жр│Б р▓Ор▓╖р│Нр▓Яр│Б р▓Хр▓╖р│Нр▓Яр▓Хр▓░р▓╡р▓╛р▓Чр▓┐р▓жр│Ж?",
    notDifficult: "р▓Хр▓╖р│Нр▓Яр▓╡р▓┐р▓▓р│Нр▓▓",
    extremelyDifficult: "р▓Ер▓др│Нр▓пр▓Вр▓д р▓Хр▓╖р│Нр▓Яр▓Хр▓░",
    shortageImportance: "2. р▓ир▓┐р▓ор│Нр▓о р▓╕р▓Вр▓╕р│Нр▓ер│Жр▓Чр│Ж р▓Фр▓╖р▓зр▓┐р▓п р▓Хр│Кр▓░р▓др│Ж р▓кр▓░р▓┐р▓╣р▓░р▓┐р▓╕р│Бр▓╡р│Бр▓жр│Б р▓Ор▓╖р│Нр▓Яр│Б р▓ор│Бр▓Цр│Нр▓пр▓╡р▓╛р▓Чр▓┐р▓жр│Ж?",
    notImportant: "р▓ор│Бр▓Цр│Нр▓пр▓╡р▓▓р│Нр▓▓",
    criticallyImportant: "р▓Ер▓др│Нр▓пр▓Вр▓д р▓ор│Бр▓Цр│Нр▓п",
    verificationChallenge: "3. р▓Фр▓╖р▓зр▓┐р▓п р▓ир▓┐р▓Цр▓░р▓др│Ж р▓кр▓░р▓┐р▓╢р│Ар▓▓р▓┐р▓╕р│Бр▓╡р│Бр▓жр│Б р▓Ор▓╖р│Нр▓Яр│Б р▓╕р▓╡р▓╛р▓▓р│Б?",
    notChallenging: "р▓╕р▓╡р▓╛р▓▓р│Б р▓Зр▓▓р│Нр▓▓",
    veryChallenging: "р▓Ер▓др│Нр▓пр▓Вр▓д р▓╕р▓╡р▓╛р▓▓р│Б",
    communicationFrequency: "1. р▓ир│Ар▓╡р│Б р▓кр│Вр▓░р│Ир▓Хр│Ж р▓╕р▓░р▓кр▓│р▓┐р▓п р▓╕р▓╣р▓нр▓╛р▓Чр▓┐р▓Чр▓│р│Кр▓Вр▓жр▓┐р▓Чр│Ж р▓Ор▓╖р│Нр▓Яр│Б р▓мр▓╛р▓░р▓┐ р▓╕р▓Вр▓кр▓░р│Нр▓Х р▓ор▓╛р▓бр▓мр│Зр▓Хр▓╛р▓Чр│Бр▓др│Нр▓др▓жр│Ж?",
    rarely: "р▓Хр│Жр▓▓р▓╡р│Б р▓╕р▓ор▓п",
    veryFrequently: "р▓Цр│Бр▓мр│Н р▓╣р│Жр▓Ър│Нр▓Ър│Б",
    visibilityImportance: "2. р▓ир▓┐р▓ор│Нр▓о р▓кр│Вр▓░р│Ир▓Хр│Ж р▓╕р▓░р▓кр▓│р▓┐р▓пр▓▓р│Нр▓▓р▓┐ р▓ир│Зр▓░ р▓жр▓░р│Нр▓╢р▓и р▓Ор▓╖р│Нр▓Яр│Б р▓ор│Бр▓Цр│Нр▓пр▓╡р▓╛р▓Чр▓┐р▓жр│Ж?",
    critical: "р▓Ер▓др│Нр▓пр▓Вр▓д р▓ор│Бр▓Цр│Нр▓п",
    counterfeitConcern: "1. р▓ир│Ар▓╡р│Б р▓ир▓Хр▓▓р▓┐ р▓Фр▓╖р▓зр▓┐р▓Чр▓│р▓ир│Нр▓ир│Б р▓мр▓Чр│Нр▓Чр│Ж р▓Ор▓╖р│Нр▓Яр│Б р▓Ър▓┐р▓Вр▓др▓┐р▓др▓╡р▓╛р▓Чр▓┐р▓жр│Нр▓жр│Ар▓░р▓┐?",
    notConcerned: "р▓Ър▓┐р▓Вр▓др│Жр▓пр▓┐р▓▓р│Нр▓▓",
    veryConcerned: "р▓Цр│Бр▓мр│Н р▓Ър▓┐р▓Вр▓др▓┐р▓д",
    regulatoryWorkload: "2. р▓ир▓┐р▓ор│Нр▓о р▓др▓Вр▓бр▓Хр│Нр▓Хр│Ж р▓ир▓┐р▓пр▓ор▓┐р▓д р▓Ер▓ир│Бр▓╕р▓░р▓гр│Ж р▓Ор▓╖р│Нр▓Яр│Б р▓нр▓╛р▓░р▓╡р▓╛р▓Чр▓┐р▓жр│Ж?",
    minorBurden: "р▓др│Бр▓╕р│Б р▓нр▓╛р▓░",
    majorBurden: "р▓кр│Нр▓░р▓ор│Бр▓Ц р▓нр▓╛р▓░",
    localRetailerQuestion: "3. р▓ир▓┐р▓ор│Нр▓о р▓Ер▓ир▓┐р▓╕р▓┐р▓Хр│Ж р▓кр│Нр▓░р▓Хр▓╛р▓░, р▓╕р│Нр▓ер▓│р│Ар▓п р▓░р│Ар▓Яр│Ир▓▓р▓░р│НтАМр▓Чр▓│р│Б р▓Фр▓╖р▓зр▓┐р▓Чр▓│р▓ир│Нр▓ир│Б р▓╕р│Бр▓░р▓Хр│Нр▓╖р▓┐р▓др▓╡р▓╛р▓Чр▓┐ р▓кр│Нр▓░р▓ор▓╛р▓гр│Ар▓Хр▓░р▓┐р▓╕р▓мр▓╣р│Бр▓жр│З?",
    yes: "р▓╣р│Мр▓жр│Б",
    no: "р▓Зр▓▓р│Нр▓▓",
    explainAnswer: "р▓жр▓пр▓╡р▓┐р▓Яр│Нр▓Яр│Б р▓ир▓┐р▓ор│Нр▓о р▓Йр▓др│Нр▓др▓░р▓╡р▓ир│Нр▓ир│Б р▓╡р▓┐р▓╡р▓░р▓┐р▓╕р▓┐...",
    barcodeUseful: "1. р▓кр│Нр▓░р▓ор▓╛р▓гр│Ар▓Хр▓░р▓гр▓Хр│Нр▓Хр▓╛р▓Чр▓┐ р▓мр▓╛р▓░р│Нр▓Хр│Лр▓бр│Н р▓╕р│Нр▓Хр│Нр▓пр▓╛р▓ир▓┐р▓Вр▓Чр│Н р▓Ор▓╖р│Нр▓Яр│Б р▓Йр▓кр▓пр│Бр▓Хр│Нр▓др▓╡р▓╛р▓Чр▓┐р▓жр│Ж?",
    notUseful: "р▓Йр▓кр▓пр│Бр▓Хр│Нр▓др▓╡р▓▓р│Нр▓▓",
    veryUseful: "р▓Цр│Бр▓мр│Н р▓Йр▓кр▓пр│Бр▓Хр│Нр▓д",
    alertsImportance: "2. р▓Зр▓ир│Нр▓╡р│Жр▓Вр▓Яр▓░р▓┐ р▓╕р▓ор▓╕р│Нр▓пр│Жр▓Чр▓│р▓┐р▓Чр▓╛р▓Чр▓┐ р▓ир│Зр▓░ р▓Ор▓Ър│Нр▓Ър▓░р▓┐р▓Хр│Жр▓Чр▓│р│Б р▓Ор▓╖р│Нр▓Яр│Б р▓ор│Бр▓Цр│Нр▓пр▓╡р▓╛р▓Чр▓┐р▓╡р│Ж?",
    messagingValue: "3. р▓╕р▓╣р▓нр▓╛р▓Чр▓┐р▓Чр▓│ р▓ир▓бр│Бр▓╡р│Ж р▓╕р│Бр▓░р▓Хр│Нр▓╖р▓┐р▓д р▓╕р▓Вр▓жр│Зр▓╢ р▓╕р▓Вр▓╡р▓╣р▓и р▓Ор▓╖р│Нр▓Яр│Б р▓ор│Бр▓Цр│Нр▓пр▓╡р▓╛р▓Чр▓┐р▓жр│Ж?",
    notValuable: "р▓ор│Мр▓▓р│Нр▓пр▓╡р▓┐р▓▓р│Нр▓▓",
    extremelyValuable: "р▓Ер▓др│Нр▓пр▓Вр▓д р▓ор│Мр▓▓р│Нр▓пр▓пр│Бр▓д",
    reportsNecessity: "4. р▓ир▓┐р▓ор│Нр▓о р▓Хр▓╛р▓░р│Нр▓пр▓╛р▓Ър▓░р▓гр│Жр▓Чр▓│р▓┐р▓Чр│Ж р▓Хр▓╕р│Нр▓Яр▓ор│Н р▓╡р▓░р▓жр▓┐р▓Чр▓│р│Б р▓Ор▓╖р│Нр▓Яр│Б р▓Ер▓Чр▓др│Нр▓пр▓╡р▓┐р▓╡р│Ж?",
    notNecessary: "р▓Ер▓Чр▓др│Нр▓пр▓╡р▓┐р▓▓р│Нр▓▓",
    essential: "р▓Ер▓Чр▓др│Нр▓пр▓╡р▓┐р▓жр│Ж",
    blockchainImportance: "5. р▓ир▓┐р▓ор│Нр▓о р▓╕р▓Вр▓╕р│Нр▓ер│Жр▓Чр│Ж р▓Фр▓╖р▓зр▓┐ р▓кр│Нр▓░р▓ор▓╛р▓гр│Ар▓Хр▓░р▓гр▓Хр│Нр▓Хр▓╛р▓Чр▓┐ р▓мр│Нр▓▓р▓╛р▓Хр│НтАМр▓Ър│Ир▓ир│Н р▓Ор▓╖р│Нр▓Яр│Б р▓ор│Бр▓Цр│Нр▓пр▓╡р▓╛р▓Чр▓┐р▓жр│Ж?",
    veryImportant: "р▓Ер▓др│Нр▓пр▓Вр▓д р▓ор│Бр▓Цр│Нр▓п",
    additionalSuggestions: "р▓пр▓╛р▓╡р│Бр▓жр│З р▓╣р│Жр▓Ър│Нр▓Ър│Бр▓╡р▓░р▓┐ р▓╕р│Вр▓Ър▓ир│Жр▓Чр▓│р│Б р▓Ер▓ер▓╡р▓╛ р▓╕р│Бр▓зр▓╛р▓░р▓гр│Жр▓Чр▓│р▓ир│Нр▓ир│Б р▓╣р▓Вр▓Ър▓▓р│Б р▓мр▓пр▓╕р│Бр▓др│Нр▓др│Ар▓░р▓╛?",
    shareSuggestions: "р▓ир▓┐р▓ор│Нр▓о р▓Ер▓нр▓┐р▓кр│Нр▓░р▓╛р▓пр▓Чр▓│р▓ир│Нр▓ир│Б р▓Зр▓▓р│Нр▓▓р▓┐ р▓╣р▓Вр▓Ър▓┐р▓Хр│Кр▓│р│Нр▓│р▓┐...",
    submitFeedback: "р▓кр│Нр▓░рддрд┐рдХр│Нр▓░р▓┐р▓пр│Ж р▓╕р▓▓р│Нр▓▓р▓┐р▓╕р▓┐",
    submitting: "р▓╕р▓▓р│Нр▓▓р▓┐р▓╕р▓▓р▓╛р▓Чр│Бр▓др│Нр▓др▓┐р▓жр│Ж...",
    reviewSuccessMessage: "р▓ир▓┐р▓ор│Нр▓о р▓Ер▓ор│Вр▓▓р│Нр▓п р▓кр│Нр▓░р▓др▓┐р▓Хр│Нр▓░р▓┐р▓пр│Жр▓Чр│Ж р▓зр▓ир│Нр▓пр▓╡р▓╛р▓жр▓Чр▓│р│Б! р▓ир▓┐р▓ор│Нр▓о р▓Ер▓нр▓┐р▓кр│Нр▓░р▓╛р▓пр▓╡р│Б р▓ир▓ор│Нр▓о р▓╕р▓┐р▓╕р│Нр▓Яр▓Вр▓ир│Нр▓ир│Б р▓╕р│Бр▓зр▓╛р▓░р▓┐р▓╕р▓▓р│Б р▓╕р▓╣р▓╛р▓п р▓ор▓╛р▓бр│Бр▓др│Нр▓др▓жр│Ж.",
    reviewErrorMessage: "р▓кр│Нр▓░рддрд┐рдХр│Нр▓░р▓┐р▓пр│Ж р▓╕р▓▓р│Нр▓▓р▓┐р▓╕р▓▓р│Б р▓╡р▓┐р▓лр▓▓р▓╡р▓╛р▓Чр▓┐р▓жр│Ж. р▓жр▓пр▓╡р▓┐р▓Яр│Нр▓Яр│Б р▓ир▓Вр▓др▓░ р▓ор▓др│Нр▓др│Ж р▓кр│Нр▓░р▓пр▓др│Нр▓ир▓┐р▓╕р▓┐.",
    support247: "24/7 р▓мр│Жр▓Вр▓мр▓▓",
    supportDesc: "р▓пр▓╛р▓╡р▓╛р▓Чр▓▓р│В р▓╕р▓╣р▓╛р▓п р▓мр│Зр▓Хр▓╛р▓жр▓░р│Ж, р▓ир▓ор│Нр▓о р▓кр▓░р▓┐р▓гр▓┐р▓д р▓мр│Жр▓Вр▓мр▓▓ р▓др▓Вр▓бр▓жр▓┐р▓Вр▓ж р▓╕р▓╣р▓╛р▓п р▓кр▓бр│Жр▓пр▓┐р▓░р▓┐.",
    earlyAccess: "р▓╣р▓гр▓┐р▓п р▓кр│Нр▓░р▓╡р│Зр▓╢",
    earlyAccessDesc: "р▓ир▓ор│Нр▓о р▓╡р▓┐р▓╢р│Зр▓╖ р▓мр│Зр▓Яр▓╛ р▓Хр▓╛р▓░р│Нр▓пр▓Хр│Нр▓░р▓ор▓жр▓▓р│Нр▓▓р▓┐ р▓╕р│Зр▓░р▓┐, р▓ир▓ор│Нр▓о р▓Зр▓др│Нр▓др│Ар▓Ър▓┐р▓и р▓кр▓░р▓┐р▓╣р▓╛р▓░р▓╡р▓ир│Нр▓ир│Б р▓ор│Кр▓жр▓▓р│З р▓Ер▓ир│Бр▓нр▓╡р▓┐р▓╕р▓┐.",
    fastResponse: "р▓╡р│Зр▓Чр▓╡р▓╛р▓Чр▓┐ р▓кр│Нр▓░р▓др▓┐р▓Хр│Нр▓░р▓┐р▓пр│Ж",
    fastResponseDesc: "р▓ир▓ор│Нр▓о р▓др▓Вр▓бр▓╡р│Б р▓ир▓┐р▓ор│Нр▓о р▓кр│Нр▓░р▓╢р│Нр▓ир│Жр▓Чр▓│р▓┐р▓Чр│Ж 24 р▓Чр▓Вр▓Яр│Жр▓Чр▓│р│Кр▓│р▓Чр│Ж р▓╡р│Зр▓Чр▓╡р▓╛р▓Чр▓┐ р▓кр│Нр▓░р▓др▓┐р▓Хр│Нр▓░р▓┐р▓пр▓┐р▓╕р│Бр▓др│Нр▓др▓жр│Ж.",
    noRating: "р▓пр▓╛р▓╡р│Бр▓жр│З р▓░р│Зр▓Яр▓┐р▓Вр▓Чр│Н р▓Зр▓▓р│Нр▓▓",
    somewhat: "р▓Кр▓╣р▓┐р▓╕р│Бр▓╡р▓Вр▓др│Ж",
    moderately: "р▓ор▓┐р▓др▓┐р▓пр▓╡р▓░р│Жр▓Чр│Ж",
    very: "р▓Цр│Бр▓мр│Н",
    selectLanguage: "р▓нр▓╛р▓╖р│Ж р▓Жр▓пр│Нр▓Хр│Ж р▓ор▓╛р▓бр▓┐"
  },
  pa: {
    contactUs: "ри╕рй░рикри░риХ риХри░рйЛ",
    getInTouch: "ри╕ри╛рибрйЗ риири╛ри▓ ри╕рй░рикри░риХ риХри░рйЛ",
    contactDescription: "риЕри╕рйАриВ ридрйБри╣ри╛рибрйЗ ридрйЛриВ ри╕рйБригриири╛ риЪри╛ри╣рйБрй░рижрйЗ ри╣ри╛риВ! ЁЯТм риЖрикригри╛ риЕриирйБринри╡ ри╕ри╛риВриЭри╛ риХри░рйЛ риЬри╛риВ ри╕ри╡ри╛ри▓ рикрйБрй▒риЫрйЛтАФридрйБри╣ри╛рибрйЗ рилрйАрибримрйИриХ риири╛ри▓ ри╕ри╛рибрйЗ рилри╛ри░риори╛ри╕ри┐риКриЯри┐риХри▓ риЗриири╡рйИриВриЯри░рйА риЕридрйЗ риЯрйНри░рйИриХри┐рй░риЧ ри╕ри┐ри╕риЯрио риирйВрй░ ри╕рйБризри╛ри░рии ри╡ри┐рй▒риЪ риорижриж риори┐ри▓рйЗриЧрйА ЁЯЪА",
    whyChooseUs: "ри╕ри╛риирйВрй░ риХри┐риЙриВ риЪрйБригрйЛ",
    getSupport: "риорижриж рикрйНри░ри╛рикрид риХри░рйЛ",
    shareFeedback: "рилрйАрибримрйИриХ ри╕ри╛риВриЭри╛ риХри░рйЛ",
    name: "риири╛рио",
    email: "риИриорйЗри▓",
    subject: "ри╡ри┐ри╢ри╛",
    message: "ри╕рйБриирйЗри╣ри╛",
    sendMessage: "ри╕рйБриирйЗри╣ри╛ ринрйЗриЬрйЛ",
    sending: "ринрйЗриЬри┐риЖ риЬри╛ ри░ри┐ри╣ри╛ ри╣рйИ...",
    successMessage: "ри╕рйБриирйЗри╣ри╛ ри╕рилри▓ридри╛рикрйВри░ри╡риХ ринрйЗриЬри┐риЖ риЧри┐риЖ! риЕри╕рйАриВ риЬри▓рижрйА ри╣рйА ридрйБри╣ри╛рибрйЗ риири╛ри▓ ри╕рй░рикри░риХ риХри░ри╛риВриЧрйЗред",
    errorMessage: "ри╕рйБриирйЗри╣ри╛ ринрйЗриЬриг ри╡ри┐рй▒риЪ риЕри╕рилри▓ред риХри┐ри░рикри╛ риХри░риХрйЗ римри╛риЕриж ри╡ри┐рй▒риЪ рижрйБримри╛ри░ри╛ риХрйЛри╕ри╝ри┐ри╕ри╝ риХри░рйЛред",
    currentChallenges: "риорйМриЬрйВрижри╛ риЪрйБригрйМридрйАриЖриВ",
    supplyChainCommunication: "ри╕рикри▓ри╛риИ риЪрйЗрии ри╕рй░рикри░риХ",
    securityCompliance: "ри╕рйБри░рй▒риЦри┐риЖ риЕридрйЗ риЕриирйБриХрйВри▓ридри╛",
    technologyFeatures: "ридриХриирйАриХрйА ри╡ри┐ри╕ри╝рйЗри╕ри╝ридри╛ри╡ри╛риВ",
    additionalFeedback: "ри╡ризрйАриХ рилрйАрибримрйИриХ",
    trackingDifficulty: "1. ридрйБри╣ри╛рибрйЗ риорйМриЬрйВрижри╛ ри╕ри┐ри╕риЯрио ри╡ри┐рй▒риЪ риЗриири╡рйИриВриЯри░рйА риЯрйНри░рйИриХ риХри░риири╛ риХри┐рй░риири╛ риорйБри╕ри╝риХри▓ ри╣рйИ?",
    notDifficult: "риорйБри╕ри╝риХри▓ риири╣рйАриВ",
    extremelyDifficult: "римри╣рйБрид риорйБри╕ри╝риХри▓",
    shortageImportance: "2. ридрйБри╣ри╛рибрйЗ ри╕рй░риЧриарии ри▓риИ рижри╡ри╛риИ рижрйА риХриорйА рижри╛ ри╕риори╛ризри╛рии риХри┐рй░риири╛ риори╣рй▒ридри╡рикрйВри░риг ри╣рйИ?",
    notImportant: "риори╣рй▒ридри╡рикрйВри░риг риири╣рйАриВ",
    criticallyImportant: "римри╣рйБрид риори╣рй▒ридри╡рикрйВри░риг",
    verificationChallenge: "3. рижри╡ри╛риИ рижрйА риЕри╕ри▓ридри╛ рижрйА риЬри╛риВриЪ риХри░риири╛ риХри┐рй░риири╛ риЪрйБригрйМридрйАрикрйВри░рии ри╣рйИ?",
    notChallenging: "риЪрйБригрйМридрйАрикрйВри░рии риири╣рйАриВ",
    veryChallenging: "римри╣рйБрид риЪрйБригрйМридрйАрикрйВри░рии",
    communicationFrequency: "1. ридрйБри╣ри╛риирйВрй░ ри╕рикри▓ри╛риИ риЪрйЗрии ринри╛риЧрйАрижри╛ри░ри╛риВ риири╛ри▓ риХри┐рй░риирйА ри╡ри╛ри░рйА ри╕рй░рикри░риХ риХри░риири╛ рикрйИриВрижри╛ ри╣рйИ?",
    rarely: "риХрижрйЗ риХрижрйЗ",
    veryFrequently: "римри╣рйБрид ри╡ри╛ри░",
    visibilityImportance: "2. ридрйБри╣ри╛рибрйЗ ри╕рикри▓ри╛риИ риЪрйЗрии ри╡ри┐рй▒риЪ ридридриХри╛ри▓ рижрйНри░ри┐ри╕ри╝риЯрйАриХрйЛриг риХри┐рй░риири╛ риори╣рй▒ридри╡рикрйВри░риг ри╣рйИ?",
    critical: "римри╣рйБрид риори╣рй▒ридри╡рикрйВри░риг",
    counterfeitConcern: "1. ридрйБри╣ри╛риирйВрй░ риириХри▓рйА рижри╡ри╛риИриЖриВ римри╛ри░рйЗ риХри┐рй░риири╛ риЪри┐рй░ридри┐рид ри╣рйЛ?",
    notConcerned: "риЪри┐рй░ридри┐рид риири╣рйАриВ",
    veryConcerned: "римри╣рйБрид риЪри┐рй░ридри┐рид",
    regulatoryWorkload: "2. ридрйБри╣ри╛рибрйЗ риЯрйАрио ри▓риИ риири┐риприори╛риВ рижрйА рикри╛ри▓ригри╛ риХри┐рй░риири╛ римрйЛриЭ ри╣рйИ?",
    minorBurden: "риЫрйЛриЯри╛ римрйЛриЭ",
    majorBurden: "ри╡рй▒рибри╛ римрйЛриЭ",
    localRetailerQuestion: "3. риХрйА ридрйБри╣ри╛риирйВрй░ ри▓рй▒риЧрижри╛ ри╣рйИ риХри┐ ри╕риери╛риириХ ри░рйАриЯрйЗри▓ри░ рижри╡ри╛риИриЖриВ риирйВрй░ ри╕рйБри░рй▒риЦри┐риЕрид риврй░риЧ риири╛ри▓ рикрйНри░риори╛ригри┐рид риХри░ ри╕риХрижрйЗ ри╣рии?",
    yes: "ри╣ри╛риВ",
    no: "риири╣рйАриВ",
    explainAnswer: "риХри┐ри░рикри╛ риХри░риХрйЗ риЖрикригрйЗ риЬри╡ри╛рим риирйВрй░ ри╡рй▒риЦри░рйЗ ридри░рйАриХрйЗ риири╛ри▓ ри╕риориЭри╛риУ...",
    barcodeUseful: "1. рикрйНри░риори╛ригри┐риХридри╛ ри▓риИ римри╛ри░риХрйЛриб ри╕риХрйИриири┐рй░риЧ риХри┐рй░риирйА ри▓ри╛ринриХри╛ри░рйА ри╣рйЛри╡рйЗриЧрйА?",
    notUseful: "ри▓ри╛ринриХри╛ри░рйА риири╣рйАриВ",
    veryUseful: "римри╣рйБрид ри▓ри╛ринриХри╛ри░рйА",
    alertsImportance: "2. риЗриири╡рйИриВриЯри░рйА риорйБрй▒рижри┐риЖриВ ри▓риИ ридридриХри╛ри▓ риЕри▓ри░риЯ риХри┐рй░риири╛ риори╣рй▒ридри╡рикрйВри░риг ри╣рйИ?",
    messagingValue: "3. ринри╛риЧрйАрижри╛ри░ри╛риВ рижрйЗ ри╡ри┐риЪриХри╛ри░ ри╕рйБри░рй▒риЦри┐риЕрид ри╕рй░рижрйЗри╕ри╝ ри╕ри╛риВриЭри╛ риХри░риири╛ риХри┐рй░риири╛ риХрйАриоридрйА ри╣рйИ?",
    notValuable: "риХрйАриоридрйА риири╣рйАриВ",
    extremelyValuable: "римри╣рйБрид риХрйАриоридрйА",
    reportsNecessity: "4. ридрйБри╣ри╛рибрйЗ риХри╛ри░риЬри╛риВ ри▓риИ риХри╕риЯрио ри░ри┐рикрйЛри░риЯри╛риВ риХри┐рй░риирйА риЬри░рйВри░рйА ри╣рии?",
    notNecessary: "риЬри░рйВри░рйА риири╣рйАриВ",
    essential: "риЬри░рйВри░рйА",
    blockchainImportance: "5. ридрйБри╣ри╛рибрйЗ ри╕рй░ри╕риери╛рии ри▓риИ рижри╡ри╛риИ рижрйА рикрйНри░риори╛ригри┐риХридри╛ ри▓риИ римри▓рйМриХриЪрйЗрии риХри┐рй░риирйА риори╣рй▒ридри╡рикрйВри░риг ри╣рйИ?",
    veryImportant: "римри╣рйБрид риори╣рй▒ридри╡рикрйВри░риг",
    additionalSuggestions: "риХрйА ридрйБри╕рйАриВ риХрйЛриИ ри╣рйЛри░ ри╕рйБриЭри╛риЕ риЬри╛риВ ри╕рйБризри╛ри░ ри╕ри╛риВриЭрйЗ риХри░риири╛ риЪри╛ри╣рйБрй░рижрйЗ ри╣рйЛ?",
    shareSuggestions: "риЖрикригрйЗ ри╡ри┐риЪри╛ри░ риЗрй▒риерйЗ ри╕ри╛риВриЭрйЗ риХри░рйЛ...",
    submitFeedback: "рилрйАрибримрйИриХ ри╕римриори┐риЯ риХри░рйЛ",
    submitting: "ри╕римриори┐риЯ риХрйАридри╛ риЬри╛ ри░ри┐ри╣ри╛ ри╣рйИ...",
    reviewSuccessMessage: "ридрйБри╣ри╛рибрйЗ риХрйАриоридрйА рилрйАрибримрйИриХ ри▓риИ ризрй░риири╡ри╛риж! ридрйБри╣ри╛рибрйЗ ри╡ри┐риЪри╛ри░ ри╕ри╛рибрйЗ ри╕ри┐ри╕риЯрио риирйВрй░ ри╕рйБризри╛ри░риг ри╡ри┐рй▒риЪ ри╕ри╣ри╛риЗриХ ри╕ри╛римрид ри╣рйЛригриЧрйЗ.",
    reviewErrorMessage: "рилрйАрибримрйИриХ ри╕римриори┐риЯ риХри░рии ри╡ри┐рй▒риЪ риЕри╕рилри▓ред риХри┐ри░рикри╛ риХри░риХрйЗ римри╛риЕриж ри╡ри┐рй▒риЪ рижрйБримри╛ри░ри╛ риХрйЛри╕ри╝ри┐ри╕ри╝ риХри░рйЛ.",
    support247: "24/7 ри╕ри╣ри╛риЗридри╛",
    supportDesc: "риЬрижрйЛриВ ри╡рйА ридрйБри╣ри╛риирйВрй░ ри╕ри╣ри╛риЗридри╛ рижрйА ри▓рйЛрйЬ ри╣рйЛри╡рйЗ, ри╕ри╛рибрйА риори╛ри╣ри░ ри╕ри╣ри╛риЗридри╛ риЯрйАрио ридрйБри╣ри╛рибрйА риорижриж ри▓риИ риЙрикри▓римриз ри╣рйИред",
    earlyAccess: "рикри╣ри┐ри▓ри╛ рикрйНри░ри╡рйЗри╕ри╝",
    earlyAccessDesc: "ри╕ри╛рибрйЗ ри╡ри┐ри╕ри╝рйЗри╕ри╝ римрйЗриЯри╛ риХри╛ри░риЬриХрйНри░рио ри╡ри┐рй▒риЪ ри╕ри╝ри╛риори▓ ри╣рйЛри╡рйЛ риЕридрйЗ ри╕ри╛рибрйЗ риири╡рйЗриВ ри╣рй▒ри▓ри╛риВ рижри╛ рикри╣ри┐ри▓ри╛риВ риЕриирйБринри╡ риХри░рйЛред",
    fastResponse: "ридрйБри░рй░рид рикрйНри░ридри┐риХрйНри░ри┐риЖ",
    fastResponseDesc: "ри╕ри╛рибрйА риЯрйАрио ридрйБри╣ри╛рибрйЗ рикрйНри░ри╕ри╝риири╛риВ ри▓риИ 24 риШрй░риЯри┐риЖриВ риЕрй░рижри░ ридрйБри░рй░рид рикрйНри░ридри┐риХрйНри░ри┐риЖ рижрйЗри╡рйЗриЧрйАред",
    noRating: "риХрйЛриИ ри░рйЗриЯри┐рй░риЧ риири╣рйАриВ",
    somewhat: "риерйЛрйЬрйНри╣ри╛",
    moderately: "риори┐ризриприо",
    very: "римри╣рйБрид",
    selectLanguage: "ринри╛ри╕ри╝ри╛ риЪрйБригрйЛ"
  }
  
  

}
const CombinedForm = () => {
  // Active form state
  const [activeForm, setActiveForm] = useState<FormType>('contact');
  
  // Contact form state
  const [contactFormData, setContactFormData] = useState<ContactFormData>({
    name: '',
    email: '',
    subject: '',
    message: ''
  });
  // Emoji mapping for ratings

// State for active form, question, and form status

  // Review form state - Updated with new question fields
  const [reviewFormData, setReviewFormData] = useState<ReviewFormData>({
    name: '',
    trackingDifficulty: 0,
    shortageImportance: 0,
    verificationChallenge: 0,
    communicationFrequency: 0,
    visibilityImportance: 0,
    counterfeitConcern: 0,
    regulatoryWorkload: 0,
    localRetailerComfort: '',
    localRetailerComment: '',
    barcodeUseful: 0,
    alertsImportance: 0,
    messagingValue: 0,
    reportsNecessity: 0,
    blockchainImportance: 0,
    generalFeedback: '',
  });
  // State declarations
const [isLanguageDropdownOpen, setIsLanguageDropdownOpen] = useState(false);
const [currentLanguage, setCurrentLanguage] = useState('en');
  const [status, setStatus] = useState<StatusType>('');
  const [focused, setFocused] = useState<string>('');
  const [activeQuestion, setActiveQuestion] = useState<number>(1);
  const [hoverRating, setHoverRating] = useState<number>(0);


// 2. Create a variable to store the translations for the current language
const t = translations[currentLanguage as keyof typeof translations];


  // Parallax effect setup
  const { scrollY } = useScroll();
  const y1 = useTransform(scrollY, [0, 300], [0, -50]);
  const y2 = useTransform(scrollY, [0, 300], [0, -30]);
  const y3 = useTransform(scrollY, [0, 300], [0, -70]);
  const opacity = useTransform(scrollY, [0, 200], [1, 0.8]);

  // Reset status when switching forms
  useEffect(() => {
    setStatus('');
  }, [activeForm]);

  // Toggle between contact and review forms
  const toggleForm = (form: FormType) => {
    setActiveForm(form);
  };

  // Expand/collapse question sections
  const toggleQuestion = (questionNumber: number) => {
    setActiveQuestion(activeQuestion === questionNumber ? 0 : questionNumber);
  };

  // Handle star rating selection
  const handleRatingChange = (field: string, rating: number) => {
    setReviewFormData(prev => ({
      ...prev,
      [field]: rating
    }));
  };

  // Handle contact form changes
  const handleContactChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target;
    setContactFormData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  // Handle review form changes
  const handleReviewChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {
    const { name, value } = e.target;
    setReviewFormData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  // Handle contact form submission
  const handleContactSubmit = async (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    setStatus('sending');

    try {
      const response = await fetch('/api/contact', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(contactFormData),
      });

      const data = await response.json();

      if (response.ok) {
        setStatus('success');
        setContactFormData({ name: '', email: '', subject: '', message: '' });
      } else {
        setStatus('error');
        console.error('Server error:', data.error);
      }
    } catch (error) {
      setStatus('error');
      console.error('Error sending message:', error);
    }
  };

  // Handle review form submission - Updated for new field names
  const handleReviewSubmit = async (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    setStatus('sending');
  
    try {
      const response = await fetch('/api/pharma-reviews', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(reviewFormData), // Send the review data directly
      });
  
      const data = await response.json();
  
      if (response.ok) {
        setStatus('success');
        setReviewFormData({
          name: '',
          trackingDifficulty: 0,
          shortageImportance: 0,
          verificationChallenge: 0,
          communicationFrequency: 0,
          visibilityImportance: 0,
          counterfeitConcern: 0,
          regulatoryWorkload: 0,
          localRetailerComfort: '',
          localRetailerComment: '',
          barcodeUseful: 0,
          alertsImportance: 0,
          messagingValue: 0,
          reportsNecessity: 0,
          blockchainImportance: 0,
          generalFeedback: '',
        });
        setActiveQuestion(0);
      } else {
        setStatus('error');
        console.error('Server error:', data.error);
      }
    } catch (error) {
      setStatus('error');
      console.error('Error submitting review:', error);
    }
  };

  // Star rating component - Updated with cleaner implementation
  const StarRating = ({ 
    field,
    value, 
    onChange,
    labelLow = "Not at all",
    labelHigh = "Extremely"
  }: { 
    field: string, 
    value: number, 
    onChange: (field: string, value: number) => void,
    labelLow?: string,
    labelHigh?: string
  }) => {
    const [hover, setHover] = useState(0);
    
    // Display rating or hover rating
    const displayRating = hover || value;
    
    // Emoji mapping based on rating
    const emojis = {
      0: { icon: "ЁЯШ╢", label: "No rating" },
      1: { icon: "ЁЯШЮ", label: labelLow },
      2: { icon: "ЁЯЩБ", label: "Somewhat"  },
      3: { icon: "ЁЯШР", label: "Moderately" },
      4: { icon: "ЁЯЩВ", label: "Very" },
      5: { icon: "ЁЯШД", label: labelHigh }
    };
    
    // Color mapping based on rating
    const getColor = (rating: number): string => {
      const colors: { [key: number]: string } = {
        0: "#CBD5E1", // gray
        1: "#EF4444", // red
        2: "#F97316", // orange
        3: "#FACC15", // yellow
        4: "#A3E635", // lime
        5: "#22C55E"  // green
      };
      return colors[rating] || "#CBD5E1";
    };
    
    return (
      <div className="w-full">
        <div className="flex flex-col items-center space-y-4">
          {/* Rating labels */}
          <div className="flex justify-between w-full text-xs md:text-sm text-gray-500 px-2 mb-1">
            <span>{labelLow}</span>
            <span>{labelHigh}</span>
          </div>
          
          {/* Stars */}
          <div className="flex items-center justify-between w-full px-2">
            {[1, 2, 3, 4, 5].map((star) => (
              <motion.button
                key={star}
                type="button"
                whileHover={{ scale: 1.2, rotate: 5 }}
                whileTap={{ scale: 0.9, rotate: -5 }}
                onClick={() => onChange(field, star)}
                onMouseEnter={() => setHover(star)}
                onMouseLeave={() => setHover(0)}
                className="focus:outline-none touch-manipulation p-1"
                aria-label={`Rate ${star} out of 5`}
              >
                <Star
                  className={`h-8 w-8 md:h-10 md:w-10 transition-all duration-300 ease-out ${
                    star <= displayRating ? "drop-shadow-lg" : ""
                  }`}
                  fill={star <= displayRating ? getColor(displayRating) : "transparent"}
                  stroke={star <= displayRating ? getColor(displayRating) : "#94A3B8"}
                  strokeWidth={2}
                />
              </motion.button>
            ))}
          </div>
          
          {/* Rating display */}
          <AnimatePresence mode="wait">
            {displayRating > 0 && (
              <motion.div 
                key={displayRating}
                initial={{ opacity: 0, y: 10, scale: 0.8 }}
                animate={{ opacity: 1, y: 0, scale: 1 }}
                exit={{ opacity: 0, y: -10, scale: 0.8 }}
                transition={{ duration: 0.3 }}
                className="flex flex-col items-center"
              >
                <motion.div 
                  className="relative bg-gradient-to-br from-blue-50 to-purple-50 px-6 py-3 rounded-full shadow-md border border-gray-100"
                  animate={{ 
                    scale: [1, 1.05, 1],
                    rotate: displayRating >= 4 ? [0, -1, 1, -1, 0] : 0
                  }}
                  transition={{ 
                    duration: 0.5, 
                    repeat: displayRating >= 5 ? Infinity : 0,
                    repeatDelay: 2
                  }}
                >
                  <div className="flex items-center gap-2">
                    <motion.span 
                      className="text-2xl md:text-3xl"
                      animate={{ 
                        rotate: displayRating >= 4 ? [0, 10, -10, 10, 0] : 0,
                        scale: [1, 1.2, 1]
                      }}
                      transition={{ 
                        duration: 0.5, 
                        repeat: displayRating >= 4 ? Infinity : 0,
                        repeatDelay: 2
                      }}
                    >
                     {emojis[displayRating as keyof typeof emojis].icon}
                    </motion.span>
                    <span 
                      className="text-sm font-medium"
                      style={{ color: getColor(displayRating) }}
                    >
                     {emojis[displayRating as keyof typeof emojis].label}
                    </span>
                  </div>
                  
                  {/* Rating value badge */}
                  <motion.div 
                    className="absolute -top-2 -right-2 h-6 w-6 flex items-center justify-center rounded-full bg-white shadow-md border border-gray-100 text-xs font-bold"
                    style={{ backgroundColor: getColor(displayRating), color: displayRating >= 3 ? "white" : "black" }}
                    initial={{ scale: 0 }}
                    animate={{ scale: 1, rotate: 360 }}
                    transition={{ type: "spring", delay: 0.2 }}
                  >
                    {displayRating}
                  </motion.div>
                </motion.div>
              </motion.div>
            )}
          </AnimatePresence>
        </div>
      </div>
    );
  };

  // Render expandable question sections for review form
  const renderQuestionSection = (
    questionNumber: number,
    icon: React.ReactNode,
    title: string,
    content: React.ReactNode
  ) => {
    const isActive = activeQuestion === questionNumber;
    
    return (
      <motion.div 
        className="mb-4 sm:mb-6 bg-white rounded-lg sm:rounded-xl shadow-md sm:shadow-lg overflow-hidden"
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: questionNumber * 0.1 }}
      >
        <button
          type="button"
          onClick={() => toggleQuestion(questionNumber)}
          className="w-full px-4 sm:px-6 py-3 sm:py-4 flex justify-between items-center bg-gradient-to-r from-blue-50 to-purple-50 hover:from-blue-100 hover:to-purple-100 transition-all duration-300"
          aria-expanded={isActive}
        >
          <div className="flex items-center gap-2 sm:gap-3">
            <div className="flex-shrink-0 w-6 h-6 sm:w-8 sm:h-8 flex items-center justify-center text-blue-600">
              {icon}
            </div>
            <h3 className="text-base sm:text-lg font-semibold text-gray-800 text-left">{title}</h3>
          </div>
          {isActive ? (
            <ChevronUp className="h-5 w-5 flex-shrink-0 text-blue-600" />
          ) : (
            <ChevronDown className="h-5 w-5 flex-shrink-0 text-blue-600" />
          )}
        </button>
        
        {isActive && (
          <motion.div 
            className="px-4 sm:px-6 py-3 sm:py-4"
            initial={{ height: 0, opacity: 0 }}
            animate={{ height: "auto", opacity: 1 }}
            exit={{ height: 0, opacity: 0 }}
            transition={{ duration: 0.3 }}
          >
            {content}
          </motion.div>
        )}
      </motion.div>
    );
  };

  return (
    <section className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 py-6 sm:py-8 md:py-12 overflow-hidden ">
        <div className="container max-w-3xl mx-auto px-4 sm:px-6 relative z-10">
        {/* Language selector */}
        <motion.div 
          className="flex justify-end mb-4"
          initial={{ opacity: 0, y: -10 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.4 }}
        >
          <div className="relative">
            <button
              onClick={() => setIsLanguageDropdownOpen(!isLanguageDropdownOpen)}
              className="flex items-center gap-2 px-3 py-2 bg-white rounded-lg shadow-sm border border-gray-200 text-sm font-medium text-gray-700 hover:bg-gray-50 transition-all duration-200"
            >
              <Globe className="h-4 w-4 text-blue-500" />
              <span>{languages.find(lang => lang.code === currentLanguage)?.nativeName || 'English'}</span>
              {isLanguageDropdownOpen ? <ChevronUp className="h-4 w-4" /> : <ChevronDown className="h-4 w-4" />}
            </button>
            
            {isLanguageDropdownOpen && (
              <motion.div 
                className="absolute right-0 mt-1 w-56 bg-white rounded-lg shadow-lg border border-gray-200 py-1 z-20"
                initial={{ opacity: 0, y: -10 }}
                animate={{ opacity: 1, y: 0 }}
                exit={{ opacity: 0, y: -10 }}
              >
                {languages.map((language) => (
                  <button
                    key={language.code}
                    onClick={() => {
                      setCurrentLanguage(language.code);
                      setIsLanguageDropdownOpen(false);
                    }}
                    className={`w-full text-left px-4 py-2 text-sm hover:bg-blue-50 flex items-center justify-between ${
                      currentLanguage === language.code ? 'bg-blue-50 text-blue-600 font-medium' : 'text-gray-700'
                    }`}
                  >
                    <span>{language.nativeName}</span>
                    <span className="text-xs text-gray-500">{language.name}</span>
                    {currentLanguage === language.code && <Check className="h-4 w-4 text-blue-600" />}
                  </button>
                ))}
              </motion.div>
            )}
          </div>
        </motion.div>
  
        {/* Page heading */}
        <motion.div 
          className="text-center mb-8 sm:mb-12 md:mb-16 space-y-2 sm:space-y-4 "
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
        >
          <div className="flex justify-center">
            <div className="tag bg-blue-50 text-blue-600 px-4 py-2 rounded-full text-sm font-medium">
              {t.contactUs}
            </div>
          </div>
          <h2 className="heading text-center p-[10px] text-5xl md:text-[54px] md:leading-[60px] font-bold tracking-tighter mt-5">
            {t.getInTouch}
          </h2>
          <p className="text-center text-[22px] leading-[30px] tracking-tight text-[#010D3E] mt-5">
            {t.contactDescription}
          </p>
        </motion.div>
  
        {/* Form toggle buttons */}
        <div className="flex justify-center mb-8 ">
          <motion.div 
            className="bg-white p-1.5 rounded-full shadow-xl flex items-center border border-gray-100 backdrop-blur-sm bg-opacity-90"
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ 
              type: "spring", 
              stiffness: 300, 
              damping: 20 
            }}
            whileHover={{ 
              boxShadow: "0 10px 25px -5px rgba(59, 130, 246, 0.2)",
              y: -2
            }}
          >
            <motion.button
              whileHover={{ 
                scale: 1.05,
                backgroundColor: activeForm !== 'contact' ? "rgba(243, 244, 246, 0.8)" : ""
              }}
              whileTap={{ scale: 0.95 }}
              onClick={() => toggleForm('contact')}
              className={`py-2.5 px-3  rounded-full transition-all duration-300 flex items-center gap-2 sm:gap-3 ${
                activeForm === 'contact' 
                  ? 'bg-gradient-to-r from-blue-600 via-indigo-600 to-purple-600 text-white shadow-lg' 
                  : 'text-gray-700 hover:bg-gray-50'
              }`}
              initial={false}
              animate={activeForm === 'contact' ? {
                y: 0,
                opacity: 1
              } : {
                y: 0,
                opacity: 0.8
              }}
            >
              <motion.div
                animate={{ rotate: activeForm === 'contact' ? 0 : -10 }}
                transition={{ type: "spring" }}
              >
                <Mail className="h-5 w-5 stroke-[2.5]" />
              </motion.div>
              <span className="font-medium text-sm sm:text-base whitespace-nowrap">{t.getSupport}</span>
            </motion.button>
            
            <motion.button
              whileHover={{ 
                scale: 1.05,
                backgroundColor: activeForm !== 'review' ? "rgba(243, 244, 246, 0.8)" : ""
              }}
              whileTap={{ scale: 0.95 }}
              onClick={() => toggleForm('review')}
              className={`py-2.5 px-3 rounded-full transition-all duration-300 flex items-center gap-2 sm:gap-3 ${
                activeForm === 'review' 
                  ? 'bg-gradient-to-r from-blue-600 via-indigo-600 to-purple-600 text-white shadow-lg' 
                  : 'text-gray-700 hover:bg-gray-50'
              }`}
              initial={false}
              animate={activeForm === 'review' ? {
                y: 0,
                opacity: 1
              } : {
                y: 0,
                opacity: 0.8
              }}
            >
              <motion.div
                animate={{ 
                  rotate: activeForm === 'review' ? 0 : 10,
                  scale: activeForm === 'review' ? [1, 1.2, 1] : 1
                }}
                transition={{ 
                  rotate: { type: "spring" },
                  scale: { repeat: activeForm === 'review' ? Infinity : 0, repeatDelay: 3 }
                }}
              >
                <ThumbsUp className="h-5 w-5 stroke-[2.5]" />
              </motion.div>
              <span className="font-medium text-sm sm:text-base whitespace-nowrap">{t.shareFeedback}</span>
            </motion.button>
          </motion.div>
        </div>
  
        {/* Form container */}
        <motion.div 
          className="bg-white/80 backdrop-blur-lg rounded-xl sm:rounded-2xl shadow-lg sm:shadow-xl p-4 sm:p-8 md:p-12 transform transition-all duration-300 hover:shadow-2xl border border-gray-100"
          initial={{ opacity: 0, y: 40 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 0.2 }}
        >
       <AnimatePresence mode="wait">
  {activeForm === 'contact' ? (
    <motion.div key="contact-form"
                initial={{ opacity: 0, x: -20 }}
                animate={{ opacity: 1, x: 0 }}
                exit={{ opacity: 0, x: 20 }}
                transition={{ duration: 0.4 }}
              >
                <form onSubmit={handleContactSubmit} className="space-y-6 sm:space-y-8">
                  <div className="grid md:grid-cols-2 gap-6 sm:gap-8">
                    <div className="relative">
                      <label 
                        htmlFor="contact-name" 
                        className={`absolute left-10 transition-all duration-300 ${
                          focused === 'contact-name' || contactFormData.name 
                            ? '-top-3 text-sm text-blue-600 bg-white px-2 font-medium' 
                            : 'top-3 text-gray-500'
                        }`}
                      >
                        {t.name}
                      </label>
                      <User className="absolute top-3 left-3 h-5 w-5 text-gray-400" />
                      <input
                        type="text"
                        id="contact-name"
                        name="name"
                        value={contactFormData.name}
                        onChange={handleContactChange}
                        onFocus={() => setFocused('contact-name')}
                        onBlur={() => setFocused('')}
                        required
                        className="w-full pl-10 pr-4 py-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300"
                      />
                    </div>
  
                    <div className="relative">
                      <label 
                        htmlFor="email" 
                        className={`absolute left-10 transition-all duration-300 ${
                          focused === 'email' || contactFormData.email 
                            ? '-top-3 text-sm text-blue-600 bg-white px-2 font-medium' 
                            : 'top-3 text-gray-500'
                        }`}
                      >
                        {t.email}
                      </label>
                      <Mail className="absolute top-3 left-3 h-5 w-5 text-gray-400" />
                      <input
                        type="email"
                        id="email"
                        name="email"
                        value={contactFormData.email}
                        onChange={handleContactChange}
                        onFocus={() => setFocused('email')}
                        onBlur={() => setFocused('')}
                        required
                        className="w-full pl-10 pr-4 py-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300"
                      />
                    </div>
                  </div>
  
                  <div className="relative">
                    <label 
                      htmlFor="subject" 
                      className={`absolute left-10 transition-all duration-300 ${
                        focused === 'subject' || contactFormData.subject 
                          ? '-top-3 text-sm text-blue-600 bg-white px-2 font-medium' 
                          : 'top-3 text-gray-500'
                      }`}
                    >
                      {t.subject}
                    </label>
                    <FileText className="absolute top-3 left-3 h-5 w-5 text-gray-400" />
                    <input
                      type="text"
                      id="subject"
                      name="subject"
                      value={contactFormData.subject}
                      onChange={handleContactChange}
                      onFocus={() => setFocused('subject')}
                      onBlur={() => setFocused('')}
                      required
                      className="w-full pl-10 pr-4 py-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300"
                    />
                  </div>
  
                  <div className="relative">
                    <label 
                      htmlFor="message" 
                      className={`absolute left-10 transition-all duration-300 ${
                        focused === 'message' || contactFormData.message 
                          ? '-top-3 text-sm text-blue-600 bg-white px-2 font-medium' 
                          : 'top-3 text-gray-500'
                      }`}
                    >
                      {t.message}
                    </label>
                    <MessageSquare className="absolute top-3 left-3 h-5 w-5 text-gray-400" />
                    <textarea
                      id="message"
                      name="message"
                      value={contactFormData.message}
                      onChange={handleContactChange}
                      onFocus={() => setFocused('message')}
                      onBlur={() => setFocused('')}
                      required
                      rows={6}
                      className="w-full pl-10 pr-4 py-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300"
                    />
                  </div>
  
                  <motion.button
                    type="submit"
                    disabled={status === 'sending'}
                    whileHover={{ scale: 1.02 }}
                    whileTap={{ scale: 0.98 }}
                    className="w-full bg-gradient-to-r from-blue-600 to-purple-600 text-white py-3 sm:py-4 px-4 sm:px-6 rounded-lg hover:from-blue-700 hover:to-purple-700 transition-all duration-300 disabled:opacity-70 disabled:cursor-not-allowed disabled:hover:scale-100 flex items-center justify-center gap-2 shadow-md sm:shadow-lg text-sm sm:text-base"
                  >
                    <Send className="h-4 w-4 sm:h-5 sm:w-5" />
                    {status === 'sending' ? t.sending : t.sendMessage}
                  </motion.button>
  
                  {status === 'success' && (
                    <motion.div 
                      initial={{ opacity: 0, y: 10 }}
                      animate={{ opacity: 1, y: 0 }}
                      className="bg-green-50 text-green-800 rounded-lg p-3 sm:p-4 flex items-center justify-center border border-green-200 text-sm sm:text-base"
                    >
                      <p>{t.successMessage}</p>
                    </motion.div>
                  )}
                  {status === 'error' && (
                    <motion.div 
                      initial={{ opacity: 0, y: 10 }}
                      animate={{ opacity: 1, y: 0 }}
                      className="bg-red-50 text-red-800 rounded-lg p-3 sm:p-4 flex items-center justify-center border border-red-200 text-sm sm:text-base"
                    >
                      <p>{t.errorMessage}</p>
                    </motion.div>
                  )}
                </form>
                </motion.div>
              ) : (
              <motion.div
                key="review-form"
                initial={{ opacity: 0, x: 20 }}
                animate={{ opacity: 1, x: 0 }}
                exit={{ opacity: 0, x: -20 }}
                transition={{ duration: 0.4 }}
              >
                <form onSubmit={handleReviewSubmit} className="space-y-6 sm:space-y-8">
                  {/* Reviewer Name */}
                  <motion.div 
                    className="relative"
                    initial={{ opacity: 0, x: -20 }}
                    animate={{ opacity: 1, x: 0 }}
                    transition={{ duration: 0.4, delay: 0.1 }}
                  >
                    <label 
                      htmlFor="review-name" 
                      className={`absolute left-10 transition-all duration-300 ${
                        focused === 'review-name' || reviewFormData.name 
                          ? '-top-3 text-sm text-blue-600 bg-white px-2 font-medium' 
                          : 'top-3 text-gray-500'
                      }`}
                    >
                      
                    </label>
                    <User className="absolute top-3 left-3 h-5 w-5 text-gray-400" />
                    <input
                      type="text"
                      id="review-name"
                      name="name"
                      value={reviewFormData.name}
                      onChange={handleReviewChange}
                      onFocus={() => setFocused('review-name')}
                      onBlur={() => setFocused('')}
                      required
                      className="w-full pl-10 pr-4 py-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300"
                    />
                  </motion.div>

                  {/* Question sections rendered dynamically */}
                  {renderQuestionSection(
                    1,
                    <Search className="h-5 w-5 text-blue-600" />,
                    t.currentChallenges,
                    <div className="space-y-6">
                      <div className="space-y-4">
                        <p className="text-[16px] font-semibold leading-[30px] tracking-tight text-[#010D3E]">{t.trackingDifficulty}</p>
                        <StarRating 
                          field="trackingDifficulty" 
                          value={reviewFormData.trackingDifficulty} 
                          onChange={handleRatingChange}
                          labelLow={t.notDifficult}
                          labelHigh={t.extremelyDifficult}
                        />
                      </div>
                      
                      <div className="space-y-4">
                        <p className="text-[16px] font-semibold leading-[30px] tracking-tight text-[#010D3E]">{t.shortageImportance}</p>
                        <StarRating 
                          field="shortageImportance" 
                          value={reviewFormData.shortageImportance} 
                          onChange={handleRatingChange}
                          labelLow={t.notImportant}
                          labelHigh={t.criticallyImportant}
                        />
                      </div>
                      
                      <div className="space-y-4">
                        <p className="text-[16px] font-semibold leading-[30px] tracking-tight text-[#010D3E]">{t.verificationChallenge}</p>
                        <StarRating 
                          field="verificationChallenge" 
                          value={reviewFormData.verificationChallenge} 
                          onChange={handleRatingChange}
                          labelLow={t.notChallenging}
                          labelHigh={t.veryChallenging}
                        />
                      </div>
                    </div>
                  )}

                  {renderQuestionSection(
                    2,
                    <MapPin className="h-5 w-5 text-blue-600" />,
                    t.supplyChainCommunication,
                    <div className="space-y-6">
                      <div className="space-y-4">
                        <p className="text-[16px] font-semibold leading-[30px] tracking-tight text-[#010D3E]">{t.communicationFrequency}</p>
                        <StarRating 
                          field="communicationFrequency" 
                          value={reviewFormData.communicationFrequency} 
                          onChange={handleRatingChange}
                          labelLow={t.rarely}
                          labelHigh={t.veryFrequently}
                        />
                      </div>
                      
                      <div className="space-y-4">
                        <p className="text-[16px] font-semibold leading-[30px] tracking-tight text-[#010D3E]">{t.visibilityImportance}</p>
                        <StarRating 
                          field="visibilityImportance" 
                          value={reviewFormData.visibilityImportance} 
                          onChange={handleRatingChange}
                          labelLow={t.notImportant}
                          labelHigh={t.critical}
                        />
                      </div>
                    </div>
                  )}

                  {renderQuestionSection(
                    3,
                    <Shield className="h-5 w-5 text-blue-600" />,
                    t.securityCompliance,
                    <div className="space-y-6">
                      <div className="space-y-4">
                        <p className="text-[16px] font-semibold leading-[30px] tracking-tight text-[#010D3E]">{t.counterfeitConcern}</p>
                        <StarRating 
                          field="counterfeitConcern" 
                          value={reviewFormData.counterfeitConcern} 
                          onChange={handleRatingChange}
                          labelLow={t.notConcerned}
                          labelHigh={t.veryConcerned}
                        />
                      </div>
                      
                      <div className="space-y-4">
                        <p className="text-[16px] font-semibold leading-[30px] tracking-tight text-[#010D3E]">{t.regulatoryWorkload}</p>
                        <StarRating 
                          field="regulatoryWorkload" 
                          value={reviewFormData.regulatoryWorkload} 
                          onChange={handleRatingChange}
                          labelLow={t.minorBurden}
                          labelHigh={t.majorBurden}
                        />
                      </div>
                      
                      <div className="space-y-4">
                        <p className="text-[16px] font-semibold leading-[30px] tracking-tight text-[#010D3E]">{t.localRetailerQuestion}</p>
                        <div className="flex flex-col sm:flex-row flex-wrap gap-2 sm:gap-4 justify-center">
                          <button
                            type="button"
                            onClick={() => setReviewFormData({...reviewFormData, localRetailerComfort: 'Yes'})}
                            className={`flex items-center justify-center gap-2 px-4 sm:px-6 py-2 sm:py-3 rounded-full ${
                              reviewFormData.localRetailerComfort === 'Yes' 
                                ? 'bg-green-100 text-green-800 border-2 border-green-500'
                                : 'bg-gray-100 text-gray-700 border-2 border-transparent'
                            } transition-all duration-200 w-full sm:w-auto`}
                          >
                            <div className="flex items-center justify-center gap-2">
                              <Check className={`h-5 w-5 ${reviewFormData.localRetailerComfort === 'Yes' ? 'text-green-500' : 'text-gray-400'}`} />
                              <span>{t.yes}</span>
                            </div>
                          </button>
                          
                          <button
                            type="button"
                            onClick={() => setReviewFormData({...reviewFormData, localRetailerComfort: 'No'})}
                            className={`flex items-center justify-center gap-2 px-4 sm:px-6 py-2 sm:py-3 rounded-full ${
                              reviewFormData.localRetailerComfort === 'No' 
                                ? 'bg-red-100 text-red-800 border-2 border-red-500'
                                : 'bg-gray-100 text-gray-700 border-2 border-transparent'
                            } transition-all duration-200 w-full sm:w-auto`}
                          >
                            <div className="flex items-center justify-center gap-2">
                              <X className={`h-5 w-5 ${reviewFormData.localRetailerComfort === 'No' ? 'text-red-500' : 'text-gray-400'}`} />
                              <span>{t.no}</span>
                            </div>
                          </button>
                        </div>
                        
                        {reviewFormData.localRetailerComfort && (
                          <div className="mt-4">
                            <textarea
                              name="localRetailerComment"
                              value={reviewFormData.localRetailerComment}
                              onChange={handleReviewChange}
                              placeholder={t.explainAnswer}
                              className="w-full p-3 border border-gray-200 rounded-lg"
                              rows={3}
                            />
                          </div>
                        )}
                      </div>
                    </div>
                  )}

                  {renderQuestionSection(
                    4,
                    <BarChart3 className="h-5 w-5 text-blue-600" />,
                    t.technologyFeatures,
                    <div className="space-y-6">
                      <div className="space-y-4">
                        <p className="text-[16px] font-semibold leading-[30px] tracking-tight text-[#010D3E]">{t.barcodeUseful}</p>
                        <StarRating 
                          field="barcodeUseful" 
                          value={reviewFormData.barcodeUseful} 
                          onChange={handleRatingChange}
                          labelLow={t.notUseful}
                          labelHigh={t.veryUseful}
                        />
                      </div>
                      
                      <div className="space-y-4">
                        <p className="text-[16px] font-semibold leading-[30px] tracking-tight text-[#010D3E]">{t.alertsImportance}</p>
                        <StarRating 
                          field="alertsImportance" 
                          value={reviewFormData.alertsImportance} 
                          onChange={handleRatingChange}
                          labelLow={t.notImportant}
                          labelHigh={t.critical}
                        />
                      </div>
                      
                      <div className="space-y-4">
                        <p className="text-[16px] font-semibold leading-[30px] tracking-tight text-[#010D3E]">{t.messagingValue}</p>
                        <StarRating 
                          field="messagingValue" 
                          value={reviewFormData.messagingValue} 
                          onChange={handleRatingChange}
                          labelLow={t.notValuable}
                          labelHigh={t.extremelyValuable}
                        />
                      </div>
                      
                      <div className="space-y-4">
                        <p className="text-[16px] font-semibold leading-[30px] tracking-tight text-[#010D3E]">{t.reportsNecessity}</p>
                        <StarRating 
                          field="reportsNecessity" 
                          value={reviewFormData.reportsNecessity} 
                          onChange={handleRatingChange}
                          labelLow={t.notNecessary}
                          labelHigh={t.essential}
                        />
                      </div>
                      
                      <div className="space-y-4">
                        <p className="text-[16px] font-semibold leading-[30px] tracking-tight text-[#010D3E]">{t.blockchainImportance}</p>
                        <StarRating 
                          field="blockchainImportance" 
                          value={reviewFormData.blockchainImportance} 
                          onChange={handleRatingChange}
                          labelLow={t.notImportant}
                          labelHigh={t.veryImportant}
                        />
                      </div>
                    </div>
                  )}

                  {renderQuestionSection(
                    5,
                    <Lightbulb className="h-5 w-5 text-blue-600" />,
                    t.additionalFeedback,
                    <div className="space-y-6">
                      <div>
                        <label htmlFor="generalFeedback" className="text-[16px] font-semibold leading-[30px] tracking-tight text-[#010D3E]">
                          {t.additionalSuggestions}
                        </label>
                        <textarea
                          id="generalFeedback"
                          name="generalFeedback"
                          value={reviewFormData.generalFeedback}
                          onChange={handleReviewChange}
                          rows={5}
                          className="w-full p-3 border border-gray-200 rounded-lg mt-2"
                          placeholder={t. shareSuggestions}
                        />
                      </div>
                    </div>
                  )}

                  <motion.button
                    type="submit"
                    disabled={status === 'sending'}
                    whileHover={{ scale: 1.02 }}
                    whileTap={{ scale: 0.98 }}
                    className="w-full bg-gradient-to-r from-blue-600 to-purple-600 text-white py-3 sm:py-4 px-4 sm:px-6 rounded-lg hover:from-blue-700 hover:to-purple-700 transition-all duration-300 disabled:opacity-70 disabled:cursor-not-allowed disabled:hover:scale-100 flex items-center justify-center gap-2 shadow-md sm:shadow-lg text-sm sm:text-base"
                  >
                    <Rocket className="h-4 w-4 sm:h-5 sm:w-5" />
                    {status === 'sending' ? t.submitting : t.submitFeedback}
                  </motion.button>

                  {status === 'success' && (
                    <motion.div 
                    initial={{ opacity: 0, y: 10 }}
                    animate={{ opacity: 1, y: 0 }}
                    className="bg-red-50 text-red-800 rounded-lg p-3 sm:p-4 flex items-center justify-center border border-red-200 text-sm sm:text-base"
                  >
                    <AlertTriangle className="h-5 w-5 mr-2 text-red-600" />
                    <p>{t.errorMessage}</p>
                  </motion.div>
                )}
              </form>
            </motion.div>
          )}
        </AnimatePresence>
      </motion.div>

      {/* Features section below form */}
      <motion.div 
        className="container max-w-5xl mx-auto mt-2 sm:px-6 md:px-0 py-4 sm:py-6"
        initial={{ opacity: 0, y: 40 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.6, delay: 0.4 }}
      >
        <motion.h2 
         className="heading text-center p-[10px] text-5xl md:text-[54px] md:leading-[60px] font-bold tracking-tighter mt-2"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ duration: 0.6, delay: 0.5 }}
        >
          {t.whyChooseUs}
        </motion.h2>
        
        <div className="grid md:grid-cols-3  gap-6 sm:gap-8 mt-8 sm:mt-12">
          <motion.div 
            className="bg-gradient-to-br from-white to-blue-50 rounded-2xl p-6 sm:p-8 shadow-lg border border-blue-100 overflow-hidden relative"
            whileHover={{ y: -8, boxShadow: "0 16px 30px -10px rgba(59, 130, 246, 0.3)" }}
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ delay: 0.1, duration: 0.4 }}
          >
            <div className="absolute -right-6 -top-6 w-24 h-24 bg-blue-100 rounded-full opacity-20" />
            <div className="h-14 w-14 rounded-xl bg-blue-100 flex items-center justify-center mb-6 shadow-sm">
              <Clock className="h-8 w-8 text-blue-600" />
            </div>
            <h3 className="text-xl font-bold mb-3 text-gray-800">{t.support247}</h3>
            <p className="text-gray-600">{t.supportDesc}</p>
          </motion.div>

          <motion.div 
            className="bg-gradient-to-br from-white to-purple-50 rounded-2xl p-6 sm:p-8 shadow-lg border border-purple-100 overflow-hidden relative"
            whileHover={{ y: -8, boxShadow: "0 16px 30px -10px rgba(147, 51, 234, 0.3)" }}
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ delay: 0.2, duration: 0.4 }}
          >
            <div className="absolute -right-6 -top-6 w-24 h-24 bg-purple-100 rounded-full opacity-20" />
            <div className="h-14 w-14 rounded-xl bg-purple-100 flex items-center justify-center mb-6 shadow-sm">
              <Sparkles className="h-8 w-8 text-purple-600" />
            </div>
            <h3 className="text-xl font-bold mb-3 text-gray-800">{t.earlyAccess}</h3>
            <p className="text-gray-600">{t.earlyAccessDesc}</p>
          </motion.div>

          <motion.div 
            className="bg-gradient-to-br from-white to-green-50 rounded-2xl p-6  shadow-lg border border-green-100 overflow-hidden relative"
            whileHover={{ y: -8, boxShadow: "0 16px 30px -10px rgba(16, 185, 129, 0.3)" }}
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ delay: 0.3, duration: 0.4 }}
          >
            <div className="absolute -right-6 -top-6 w-24 h-24 bg-green-100 rounded-full opacity-20" />
            <div className="h-14 w-14 rounded-xl bg-green-100 flex items-center justify-center mb-6 shadow-sm">
              <Zap className="h-8 w-8 text-green-600" />
            </div>
            <h3 className="text-xl font-bold mb-3 text-gray-800">{t.fastResponse}</h3>
            <p className="text-gray-600">{t.fastResponseDesc}</p>
          </motion.div>
        </div>
      </motion.div>
      </div>
      {/* Decorative elements */}
      <div className="absolute top-0 left-0 w-64 h-64 bg-blue-500 rounded-full filter blur-3xl opacity-5 -translate-x-1/2 -translate-y-1/2 z-0"></div>
      <div className="absolute bottom-0 right-0 w-80 h-80 bg-purple-500 rounded-full filter blur-3xl opacity-5 translate-x-1/2 translate-y-1/2 z-0"></div>
    </section>
  );
};

export default CombinedForm;
